%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: underdogdevs.eps
%%Creator: Adobe Illustrator(R) 23.0
%%For: kholiq kurniawan
%%CreationDate: 11/4/2021
%%BoundingBox: 0 0 2890 1000
%%HiResBoundingBox: 0 0 2890 1000
%%CropBox: 0 0 2890 1000
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 23.0.5%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 23.0.5 x634 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c145 79.163499, 2018/08/13-16:40:22        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Basic RGB</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 23.0 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2021-11-04T18:01:31+07:00</xmp:CreateDate>
         <xmp:ModifyDate>2021-11-04T18:01:32+07:00</xmp:ModifyDate>
         <xmp:MetadataDate>2021-11-04T18:01:32+07:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>92</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEBLAEsAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABABLAAAAAEA&#xA;AQEsAAAAAQAB/+IMWElDQ19QUk9GSUxFAAEBAAAMSExpbm8CEAAAbW50clJHQiBYWVogB84AAgAJ&#xA;AAYAMQAAYWNzcE1TRlQAAAAASUVDIHNSR0IAAAAAAAAAAAAAAAAAAPbWAAEAAAAA0y1IUCAgAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARY3BydAAAAVAAAAAz&#xA;ZGVzYwAAAYQAAABsd3RwdAAAAfAAAAAUYmtwdAAAAgQAAAAUclhZWgAAAhgAAAAUZ1hZWgAAAiwA&#xA;AAAUYlhZWgAAAkAAAAAUZG1uZAAAAlQAAABwZG1kZAAAAsQAAACIdnVlZAAAA0wAAACGdmlldwAA&#xA;A9QAAAAkbHVtaQAAA/gAAAAUbWVhcwAABAwAAAAkdGVjaAAABDAAAAAMclRSQwAABDwAAAgMZ1RS&#xA;QwAABDwAAAgMYlRSQwAABDwAAAgMdGV4dAAAAABDb3B5cmlnaHQgKGMpIDE5OTggSGV3bGV0dC1Q&#xA;YWNrYXJkIENvbXBhbnkAAGRlc2MAAAAAAAAAEnNSR0IgSUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAS&#xA;c1JHQiBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#xA;AAAAAAAAAAAAAFhZWiAAAAAAAADzUQABAAAAARbMWFlaIAAAAAAAAAAAAAAAAAAAAABYWVogAAAA&#xA;AAAAb6IAADj1AAADkFhZWiAAAAAAAABimQAAt4UAABjaWFlaIAAAAAAAACSgAAAPhAAAts9kZXNj&#xA;AAAAAAAAABZJRUMgaHR0cDovL3d3dy5pZWMuY2gAAAAAAAAAAAAAABZJRUMgaHR0cDovL3d3dy5p&#xA;ZWMuY2gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZGVzYwAA&#xA;AAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAA&#xA;AAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAGRlc2MAAAAAAAAALFJlZmVyZW5jZSBWaWV3aW5nIENvbmRpdGlvbiBp&#xA;biBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAACxSZWZlcmVuY2UgVmlld2luZyBDb25kaXRpb24gaW4g&#xA;SUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB2aWV3AAAAAAATpP4AFF8uABDP&#xA;FAAD7cwABBMLAANcngAAAAFYWVogAAAAAABMCVYAUAAAAFcf521lYXMAAAAAAAAAAQAAAAAAAAAA&#xA;AAAAAAAAAAAAAAKPAAAAAnNpZyAAAAAAQ1JUIGN1cnYAAAAAAAAEAAAAAAUACgAPABQAGQAeACMA&#xA;KAAtADIANwA7AEAARQBKAE8AVABZAF4AYwBoAG0AcgB3AHwAgQCGAIsAkACVAJoAnwCkAKkArgCy&#xA;ALcAvADBAMYAywDQANUA2wDgAOUA6wDwAPYA+wEBAQcBDQETARkBHwElASsBMgE4AT4BRQFMAVIB&#xA;WQFgAWcBbgF1AXwBgwGLAZIBmgGhAakBsQG5AcEByQHRAdkB4QHpAfIB+gIDAgwCFAIdAiYCLwI4&#xA;AkECSwJUAl0CZwJxAnoChAKOApgCogKsArYCwQLLAtUC4ALrAvUDAAMLAxYDIQMtAzgDQwNPA1oD&#xA;ZgNyA34DigOWA6IDrgO6A8cD0wPgA+wD+QQGBBMEIAQtBDsESARVBGMEcQR+BIwEmgSoBLYExATT&#xA;BOEE8AT+BQ0FHAUrBToFSQVYBWcFdwWGBZYFpgW1BcUF1QXlBfYGBgYWBicGNwZIBlkGagZ7BowG&#xA;nQavBsAG0QbjBvUHBwcZBysHPQdPB2EHdAeGB5kHrAe/B9IH5Qf4CAsIHwgyCEYIWghuCIIIlgiq&#xA;CL4I0gjnCPsJEAklCToJTwlkCXkJjwmkCboJzwnlCfsKEQonCj0KVApqCoEKmAquCsUK3ArzCwsL&#xA;Igs5C1ELaQuAC5gLsAvIC+EL+QwSDCoMQwxcDHUMjgynDMAM2QzzDQ0NJg1ADVoNdA2ODakNww3e&#xA;DfgOEw4uDkkOZA5/DpsOtg7SDu4PCQ8lD0EPXg96D5YPsw/PD+wQCRAmEEMQYRB+EJsQuRDXEPUR&#xA;ExExEU8RbRGMEaoRyRHoEgcSJhJFEmQShBKjEsMS4xMDEyMTQxNjE4MTpBPFE+UUBhQnFEkUahSL&#xA;FK0UzhTwFRIVNBVWFXgVmxW9FeAWAxYmFkkWbBaPFrIW1hb6Fx0XQRdlF4kXrhfSF/cYGxhAGGUY&#xA;ihivGNUY+hkgGUUZaxmRGbcZ3RoEGioaURp3Gp4axRrsGxQbOxtjG4obshvaHAIcKhxSHHscoxzM&#xA;HPUdHh1HHXAdmR3DHeweFh5AHmoelB6+HukfEx8+H2kflB+/H+ogFSBBIGwgmCDEIPAhHCFIIXUh&#xA;oSHOIfsiJyJVIoIiryLdIwojOCNmI5QjwiPwJB8kTSR8JKsk2iUJJTglaCWXJccl9yYnJlcmhya3&#xA;JugnGCdJJ3onqyfcKA0oPyhxKKIo1CkGKTgpaymdKdAqAio1KmgqmyrPKwIrNitpK50r0SwFLDks&#xA;biyiLNctDC1BLXYtqy3hLhYuTC6CLrcu7i8kL1ovkS/HL/4wNTBsMKQw2zESMUoxgjG6MfIyKjJj&#xA;Mpsy1DMNM0YzfzO4M/E0KzRlNJ402DUTNU01hzXCNf02NzZyNq426TckN2A3nDfXOBQ4UDiMOMg5&#xA;BTlCOX85vDn5OjY6dDqyOu87LTtrO6o76DwnPGU8pDzjPSI9YT2hPeA+ID5gPqA+4D8hP2E/oj/i&#xA;QCNAZECmQOdBKUFqQaxB7kIwQnJCtUL3QzpDfUPARANER0SKRM5FEkVVRZpF3kYiRmdGq0bwRzVH&#xA;e0fASAVIS0iRSNdJHUljSalJ8Eo3Sn1KxEsMS1NLmkviTCpMcky6TQJNSk2TTdxOJU5uTrdPAE9J&#xA;T5NP3VAnUHFQu1EGUVBRm1HmUjFSfFLHUxNTX1OqU/ZUQlSPVNtVKFV1VcJWD1ZcVqlW91dEV5JX&#xA;4FgvWH1Yy1kaWWlZuFoHWlZaplr1W0VblVvlXDVchlzWXSddeF3JXhpebF69Xw9fYV+zYAVgV2Cq&#xA;YPxhT2GiYfViSWKcYvBjQ2OXY+tkQGSUZOllPWWSZedmPWaSZuhnPWeTZ+loP2iWaOxpQ2maafFq&#xA;SGqfavdrT2una/9sV2yvbQhtYG25bhJua27Ebx5veG/RcCtwhnDgcTpxlXHwcktypnMBc11zuHQU&#xA;dHB0zHUodYV14XY+dpt2+HdWd7N4EXhueMx5KnmJeed6RnqlewR7Y3vCfCF8gXzhfUF9oX4BfmJ+&#xA;wn8jf4R/5YBHgKiBCoFrgc2CMIKSgvSDV4O6hB2EgITjhUeFq4YOhnKG14c7h5+IBIhpiM6JM4mZ&#xA;if6KZIrKizCLlov8jGOMyo0xjZiN/45mjs6PNo+ekAaQbpDWkT+RqJIRknqS45NNk7aUIJSKlPSV&#xA;X5XJljSWn5cKl3WX4JhMmLiZJJmQmfyaaJrVm0Kbr5wcnImc951kndKeQJ6unx2fi5/6oGmg2KFH&#xA;obaiJqKWowajdqPmpFakx6U4pammGqaLpv2nbqfgqFKoxKk3qamqHKqPqwKrdavprFys0K1Erbiu&#xA;La6hrxavi7AAsHWw6rFgsdayS7LCszizrrQltJy1E7WKtgG2ebbwt2i34LhZuNG5SrnCuju6tbsu&#xA;u6e8IbybvRW9j74KvoS+/796v/XAcMDswWfB48JfwtvDWMPUxFHEzsVLxcjGRsbDx0HHv8g9yLzJ&#xA;Osm5yjjKt8s2y7bMNcy1zTXNtc42zrbPN8+40DnQutE80b7SP9LB00TTxtRJ1MvVTtXR1lXW2Ndc&#xA;1+DYZNjo2WzZ8dp22vvbgNwF3IrdEN2W3hzeot8p36/gNuC94UThzOJT4tvjY+Pr5HPk/OWE5g3m&#xA;lucf56noMui86Ubp0Opb6uXrcOv77IbtEe2c7ijutO9A78zwWPDl8XLx//KM8xnzp/Q09ML1UPXe&#xA;9m32+/eK+Bn4qPk4+cf6V/rn+3f8B/yY/Sn9uv5L/tz/bf///+4ADkFkb2JlAGTAAAAAAf/bAIQA&#xA;BgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoKDBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8f&#xA;Hx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f&#xA;Hx8fHx8fHx8fHx8fHx8f/8AAEQgAXAEAAwERAAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQF&#xA;AwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAAAQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMB&#xA;AgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPBUtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdU&#xA;ZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eX&#xA;p7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZqbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUE&#xA;BQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEyobHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PS&#xA;NeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG&#xA;1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/a&#xA;AAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUk89f8oR5&#xA;h/7Zl5/1Dvir888il2KuxV2KuxV2KuxV2KuxV2KuxV+k+SQ7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FUk89f8oR5h/wC2Zef9Q74q/PPIpdirsVdirsVdirsVdirsVdirsVfpPkkO&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVJPPX/AChHmH/tmXn/AFDvir888il2&#xA;KuxV2KuxV2KuxV2KuxV2KuxV+k+SQ7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;Uk89f8oR5h/7Zl5/1Dvir888il2KuxV2KuxV2KuxV2KuxV2KuxV942/n+7l8u32qm1jElpLHGsfJ&#xA;qESECpP05osXbE5YJZOEXEgfN3s+yIjPHHxGpAn5IW98/wDmSz0221GbSohbXYLRMGdvhFKM1BRa&#xA;12qcZdqZ4wEzAVJtxdkYJzMBM8Ufcm3lHz/Y+YJmtHiNpfKpcRFuSuo6lGou47imZ2i7RjnNVwyc&#xA;PtHsienHEDxQ+5Mr/wA4+VdP9b69q1rbfV3eKf1ZVTg8axu6tU7FVnjJ/wBYeObF1CXXf5m+SoH0&#xA;uOHU4byXWLiO3so7aSORm5ymEyEFl/do6MGPscVV2/MbyEtib9vMFgLIS/Vzc/WI/T9Xh6nDlWnL&#xA;h8Q8RiqHl/NDyPFq91pj6rArWUBuL27MsX1eGkywelI/KolLuAFp+O2Ko+Hzv5Pn1C006DWbOa+v&#xA;o1ls7eOZHeWN1LoyBSahlUke2Kp3irsVdirzb/lauof8rr/5V79Ri+p+h6317k3q1+revTj9nrti&#xA;rBfLn/OQX5l+YdH1XWNM8q2ctho6B7uT1ZixZvsxxooZ3Y9dhQDqRgtLfkr/AJyvtNQ1uHTPM+kr&#xA;pUU7iIX8MrMkTk0HqxuoKrXq3Lbwxtae5ar5g0PSADql9DZAxSTgzOE/dQlBI+/7KGVKn3GFCWT/&#xA;AJjeRYIr2R9csv8Acc3C7T14+SOXMYQgkfEXUrTxxVT0T8yfJurWdtPFqUNtPc2S6l9QuJYkuY7c&#xA;x+rykjVm48U+I79N+mKqdz+aXkaJNONvqsF++q3cNlYxWkscru806W/MDkPgjeQcyOg8cVRLfmL5&#xA;DWzkvT5gsPqkUv1eSf6xGVEpUuEqD14KW+QOKp/DNFNCk0LiSKVQ8bqahlYVBB9xiqT+ev8AlCPM&#xA;P/bMvP8AqHfFX555FL0j8kvyq0/8w9U1Kyvb6WxWxgSZHhVXLF340PLEKyHy1+SXk25/LeXzv5g1&#xA;6606ztpZ45xDCsoAjuDbx8QKsWduI+ZwqyWy/wCcWPLeuaDDqfl/zRKzXMSSw+vDFIoLqGEcnoyf&#xA;CwrRqE098aW3h2u+SPMmi+ap/K11aNJrED+msEIL+oCvNXj2BZWT4htgVavkfzi2myammi3jafEi&#xA;yyXSwuY1jeNJlYsB0MUqP8iDiqZXX5UefrdLIHR7mW7vYZbj6jHDK1xDHFL6JM0fAceT/Z6/fiqA&#xA;t/IXnW5trO6g0O9lttQJFjMsLlJiEaQ+maUaiRsxp2BxVFa1+WfnXSru6gfS7i6itLhbOS8topZI&#xA;GnYqoRHKLU85FXp9o0xVJta0HWtDuxZ6vZTWF0yCVYZ0KMUYkBqHsaHFUBir7DsG/wCdB1o/8vNv&#xA;/wASGcbph/gmT+tF7bMP8Mx/1ZPR/Llu1x5U0lPUMa+hCZAArB0AHKNgwb4WGxzp9JC8EBfQf2PM&#xA;a2fDqZmr3Pw8/gwm28sJ5e/MbSY4LoTLdvPIsKqVaKPg1A27VFKivtmuhpBh1MaN3fwd7PXHU6HI&#xA;TGuHhF95sJX5z0j8sbjznf2Oq65ewyXXr3uowxPbra2cqQWnqOzvCz8pY4Ifh5tTwHLN68kiR5Z/&#xA;Ke+1OPUIvMc4F3dLcy2iyRLHPJPqFzNFG4aD1FVLmWdKKysKUY/DXFUZ+XfkT8uHgtLny3q02pR6&#xA;PepdxvS3Q8xatbxJLwghZ09GTkrHdj8XIjFUzm/JrQn1G41CPU9RhuJJ3urLg1uUtJ3uxfM8IaBu&#xA;VZwdpS4oaeGFUu0z8mX0rzrpGpafqBj8v6Wscj2Uh9Saa5htpbZJWbgAp4zb8SB/k98CvUMKuxV2&#xA;Kvn7/wBe+/6M/wDu34Etf84gAnyz5iAJUm8iAYUqP3XXeuIUpZ/zkZ+UNvBpred31lBc2ttb2t9H&#xA;NCiS31yH4etyiKJ6jqwqoj6LXEqzj8y7TyZP5J0GfzNqV5Z3B05ra3t7F4hcXUVxHB9YjpNHMtOU&#xA;cbFtqGm++6h03lv8qbu9NrD5mng1GzuzEkkcsIeK5mv7m6IXnC0bfvp5otwV24/bFcVQ3l7yJ+Ts&#xA;muW9rpWuy3Go3WmLbQwE27O8L6cbZJVka35rIbNuXFXAI+LhTFWa6p+V2hajfaRdPdXcH6IitIFg&#xA;haIRzxWM6XECzBonPwyR7+mUJqcKsU1z8hVTSVh8s6tNBqY4263t8Y39OxFrNaC2RY4QpUR3DbsO&#xA;Z/nB3wUr1TTbMWOnWtkG5i1hjhDkU5emoWtPemFUs89f8oR5h/7Zl5/1Dvir888il9A/84ff8pJ5&#xA;h/5g4v8Ak7hClM7n/wBZM1j/AJjH/wC6ymKvMPyl/NqTyJrEM8OlfWoJYHtr6GGaSN7lnlDxSuG9&#xA;WPnCKogVF2Jqd8Cs8/PC/wBZT87PK+oaHpvra7JpdpMNLlUuTM0txWKUIynZNmowoN64SqXa/d/m&#xA;1psxjs9Fs/qml2fD1LJJ2hgjvtIt7YxcppmLtBbRRsTVqN8TVWmKqth53/Od9VnFl5Uto5JTcNc2&#xA;ka3UQa4W+aSWXn9aWUP9cZ1CK4Vt1Cnsq82tvzF1q31S0u57W2uFtNNl0WWzmE3pzWkwkWVZSsiy&#xA;Bz6zfEjLvT6Qqfx/nv5ka+S6msbKOUXSTfWYI5RNHALuG8kt4/UlePi0tuhq6s3atMbVj/5kebdK&#xA;8za5b3WlWLafp9naR2cEDsSSEZ3Zt2lIq0h25t88VYpir7Xm/LLzVHDcWVpqFudPmcMY3aRS3E/C&#xA;WURsKj55zv8AI+aIMYyHAff+p6uPbmnJE5Qlxj3frTnU/LPnhtL0uw0nUobNLO3WO5KySIXlG1Qy&#xA;xk8adOmZ89Ln4IxhIDhG/Pn8nBwa7SeJOeSBlxSsbDl8+at5P8hS6Tfyavqt4dQ1ZwVWQlmCAijH&#xA;k/xMxG1T2y3SaI45ccjxSYdo9rDNAY8ceDH+O7koa3+TvlHWb7ULq9a6Kal6zz2aSgQCa4jijkmR&#xA;eJIc/VozuSKjpuc2DpFXT/yl8n2M2jzQwuJdEFyLUr6cSsbssWMiQpEh4GRjHxUca7Yq1oX5ar5Z&#xA;sZLPyvq02nxzyma49aKG4BPEKAiBYkTpUkCrHc1OKs0xV2KuxV2KuxV4n+Zf5L+e9V/MIedPJet2&#xA;+m30kCxS/WGkjdGSP0iY2jjmqGTrUDAlD+R/yd/NHyh5A17RdK1XTrbX9VuYZLa+jknKRQoKS/E0&#xA;HJXI2FEPzBxVAaP/AM46+eNZ1m2u/wAyfNB1ews3EiWEU9xciSlKoWnWIRK1Pi4KSfbrjSvXvOHk&#xA;DRfNX1Q38tzbtZpLEhtJFj5RTmNpInDK4KsYEP0YUJKfyP8AIvpa1EsMsY1xuc7xmNJYm+sC6rDK&#xA;sYkFJQCObNSgA2xpUw/5VlocHmIeYtNlmsdVitRZ2vAq0EaLCIE/dlQzqiKKIz8a70rvirJNKttQ&#xA;trQRX979fuORJuPSWGoPQcEqNsVReKuxVJPPX/KEeYf+2Zef9Q74q/PPIpejfkf+adl+XvmO7vNQ&#xA;tJbvTr+39CcW/H1kKuHV1DlVbuCCw69dsQrOPPv53/ljq35Z6l5N8taTqGmC8eJ4Q8MCwqRdx3Er&#xA;HjcO1W4N26+GG1RWlfnX+Qnlu1hk8u+S7htTtEC2tzdW9ospZRszXPqzyBierBcbV5Lqv5n+ZNS8&#xA;/HztN6X6SD1it2XnAsQQxiDiTunpkqd6mpPXAqYXn52ec7nS9R0r/R7fT9RiEMlvbiaJUQWqWZCh&#xA;ZfiDQxqpEnIbVABxVu2/O/zvDrP6XY2090bOKwKyRvwMcTF6squvIyO7NID8LE7rjasS1HUNIubK&#xA;CO20wWt6tDc3gmdxKeNGPpEBU5N8Xw9OmKpbirsVdir9J8kh2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KpJ56/5QjzD/2zLz/qHfFX555FLsVdirsVdirsVdirsVdirsVdir9J8kh2&#xA;KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KpJ56/5QjzD/wBsy8/6h3xV+eeRS7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq/SfJIdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiqS&#xA;eev+UI8w/wDbMvP+od8VfnnkUuxV2KuxV2KuxV2KuxV2KuxV2Kv0nySHYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYqknnr/AJQjzD/2zLz/AKh3xV+eeRS7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq/SfJIdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiqld/Vfqs31vh9U4N9Y9W&#xA;np+nQ8+fL4ePHrXFWG/8gS/79r/pwxV3/IEv+/a/6cMVd/yBL/v2v+nDFXf8gS/79r/pwxV3/IEv&#xA;+/a/6cMVd/yBL/v2v+nDFXf8gS/79r/pwxV3/IEv+/a/6cMVd/yBL/v2v+nDFXf8gS/79r/pwxV3&#xA;/IEv+/a/6cMVf//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:aaa8c1dc-83af-784c-8ed8-f19560cb0cb5</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:aaa8c1dc-83af-784c-8ed8-f19560cb0cb5</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:c3fee789-f1ef-4094-ad66-ba9db1980516</stRef:instanceID>
            <stRef:documentID>xmp.did:99bf4cae-996b-ae48-8c22-86362dbe4bbb</stRef:documentID>
            <stRef:originalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:99bf4cae-996b-ae48-8c22-86362dbe4bbb</stEvt:instanceID>
                  <stEvt:when>2021-11-04T07:59:50+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 23.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:aaa8c1dc-83af-784c-8ed8-f19560cb0cb5</stEvt:instanceID>
                  <stEvt:when>2021-11-04T18:01:32+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 23.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Basic RGB</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>1000.000000</stDim:w>
            <stDim:h>1000.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Cold</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=56 M=0 Y=20 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>101</xmpG:red>
                           <xmpG:green>200</xmpG:green>
                           <xmpG:blue>208</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=51 M=43 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>131</xmpG:red>
                           <xmpG:green>139</xmpG:green>
                           <xmpG:blue>197</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=26 M=41 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>186</xmpG:red>
                           <xmpG:green>155</xmpG:green>
                           <xmpG:blue>201</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -1000 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 1000 li
2890 1000 li
2890 0 li
cp
clp
2890 1000 mo
1890 1000 li
1890 0 li
2890 0 li
2890 1000 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
.691829 .650782 .674098 .739773 cmyk
f
320.691 478.188 mo
319.123 480.497 317.234 482.309 315.023 483.62 cv
312.813 484.932 310.396 485.587 307.772 485.587 cv
305.377 485.587 303.181 485.217 301.185 484.475 cv
299.188 483.734 297.477 482.551 296.051 480.925 cv
294.625 479.329 293.521 477.282 292.736 474.786 cv
291.952 472.292 291.56 469.29 291.56 465.781 cv
291.56 438.404 li
303.452 438.404 li
303.452 465.867 li
303.452 467.749 303.587 469.332 303.859 470.615 cv
304.129 471.898 304.564 472.926 305.163 473.696 cv
305.762 474.494 306.546 475.064 307.516 475.407 cv
308.485 475.749 309.669 475.92 311.067 475.92 cv
312.321 475.92 313.455 475.792 314.468 475.535 cv
315.479 475.279 316.371 474.908 317.141 474.423 cv
317.797 473.995 318.381 473.481 318.896 472.882 cv
319.409 472.284 319.851 471.614 320.221 470.872 cv
320.221 438.404 li
332.156 438.404 li
332.156 484.689 li
321.375 484.689 li
320.691 478.188 li
cp
f
343.748 438.404 mo
354.528 438.404 li
355.256 444.82 li
355.854 443.965 356.51 443.181 357.224 442.468 cv
357.937 441.755 358.692 441.114 359.491 440.542 cv
360.86 439.574 362.357 438.831 363.982 438.318 cv
365.608 437.805 367.333 437.548 369.158 437.548 cv
371.497 437.548 373.636 437.891 375.575 438.575 cv
377.514 439.26 379.196 440.344 380.623 441.826 cv
382.02 443.338 383.11 445.27 383.896 447.622 cv
384.679 449.975 385.072 452.835 385.072 456.2 cv
385.072 484.689 li
373.18 484.689 li
373.18 456.371 li
373.18 454.546 372.973 453.041 372.56 451.857 cv
372.146 450.674 371.554 449.74 370.784 449.055 cv
370.014 448.371 369.087 447.894 368.004 447.622 cv
366.919 447.352 365.693 447.216 364.324 447.216 cv
363.184 447.216 362.136 447.345 361.181 447.601 cv
360.225 447.858 359.376 448.243 358.636 448.756 cv
358.036 449.127 357.494 449.568 357.01 450.083 cv
356.524 450.596 356.083 451.167 355.684 451.793 cv
355.684 484.689 li
343.748 484.689 li
343.748 438.404 li
cp
f
407.466 467.514 mo
407.794 469.182 408.328 470.63 409.071 471.856 cv
409.812 473.111 410.767 474.095 411.938 474.808 cv
413.105 475.521 414.533 475.877 416.214 475.877 cv
418.267 475.877 419.97 475.435 421.327 474.551 cv
422.681 473.667 423.759 472.455 424.558 470.915 cv
424.558 452.178 li
423.759 450.61 422.688 449.391 421.347 448.521 cv
420.006 447.651 418.324 447.216 416.301 447.216 cv
414.616 447.216 413.185 447.58 412.001 448.307 cv
410.816 449.034 409.854 450.025 409.113 451.28 cv
408.372 452.563 407.83 454.054 407.488 455.75 cv
407.146 457.447 406.975 459.266 406.975 461.205 cv
406.975 462.103 li
406.975 464.042 407.139 465.845 407.466 467.514 cv
cp
396.302 451.58 mo
397.114 448.67 398.305 446.175 399.873 444.094 cv
401.441 442.012 403.345 440.401 405.584 439.26 cv
407.822 438.119 410.382 437.548 413.263 437.548 cv
415.688 437.548 417.817 437.984 419.659 438.853 cv
421.497 439.723 423.13 440.957 424.558 442.553 cv
424.558 418.982 li
436.489 418.982 li
436.489 484.689 li
425.754 484.689 li
425.154 479.855 li
423.701 481.652 421.991 483.049 420.021 484.048 cv
418.055 485.045 415.771 485.545 413.176 485.545 cv
410.354 485.545 407.822 484.953 405.584 483.77 cv
403.345 482.587 401.456 480.954 399.916 478.871 cv
398.348 476.79 397.149 474.315 396.322 471.449 cv
395.495 468.583 395.082 465.468 395.082 462.103 cv
395.082 461.205 li
395.082 457.697 395.488 454.488 396.302 451.58 cv
cp
f
466.264 447.879 mo
465.152 448.35 464.182 449.027 463.355 449.911 cv
462.499 450.795 461.787 451.851 461.216 453.077 cv
460.646 454.303 460.217 455.672 459.934 457.184 cv
479.439 457.184 li
479.439 456.242 li
479.439 454.988 479.212 453.804 478.755 452.692 cv
478.299 451.58 477.671 450.61 476.873 449.783 cv
476.074 448.985 475.098 448.35 473.943 447.879 cv
472.788 447.409 471.454 447.173 469.943 447.173 cv
468.603 447.173 467.377 447.409 466.264 447.879 cv
cp
461.645 483.791 mo
458.735 482.622 456.239 481.025 454.157 479 cv
452.076 477.004 450.472 474.645 449.346 471.92 cv
448.219 469.198 447.655 466.281 447.655 463.172 cv
447.655 461.461 li
447.655 457.925 448.212 454.695 449.323 451.772 cv
450.437 448.849 451.99 446.333 453.987 444.222 cv
455.982 442.111 458.351 440.472 461.088 439.302 cv
463.826 438.133 466.806 437.548 470.028 437.548 cv
473.365 437.548 476.338 438.098 478.947 439.195 cv
481.557 440.293 483.774 441.841 485.6 443.837 cv
487.396 445.833 488.765 448.236 489.706 451.045 cv
490.647 453.854 491.117 456.955 491.117 460.349 cv
491.117 465.396 li
459.72 465.396 li
459.72 465.524 li
460.117 467.379 460.631 468.869 461.26 469.996 cv
461.887 471.122 462.728 472.142 463.782 473.054 cv
464.866 473.995 466.106 474.722 467.505 475.235 cv
468.902 475.749 470.428 476.005 472.082 476.005 cv
474.419 476.005 476.688 475.563 478.883 474.68 cv
481.079 473.796 482.862 472.469 484.23 470.701 cv
490.178 477.118 li
488.665 479.256 486.269 481.196 482.99 482.936 cv
479.711 484.675 475.832 485.545 471.354 485.545 cv
467.789 485.545 464.553 484.96 461.645 483.791 cv
cp
f
539.692 437.912 mo
541.218 438.154 542.451 438.418 543.393 438.703 cv
541.638 450.552 li
540.069 450.183 538.466 449.904 536.826 449.718 cv
535.186 449.533 533.623 449.44 532.142 449.44 cv
530.602 449.44 529.211 449.577 527.972 449.847 cv
526.729 450.119 525.625 450.524 524.656 451.066 cv
523.485 451.693 522.487 452.492 521.661 453.462 cv
520.834 454.432 520.149 455.573 519.607 456.884 cv
519.607 484.689 li
507.716 484.689 li
507.716 438.404 li
518.796 438.404 li
519.266 444.949 li
519.351 445.976 li
521.233 443.352 523.485 441.292 526.109 439.794 cv
528.733 438.297 531.6 437.548 534.708 437.548 cv
536.506 437.548 538.165 437.67 539.692 437.912 cv
cp
f
565.188 467.514 mo
565.515 469.182 566.049 470.63 566.792 471.856 cv
567.532 473.111 568.486 474.095 569.657 474.808 cv
570.827 475.521 572.253 475.877 573.936 475.877 cv
575.988 475.877 577.691 475.435 579.047 474.551 cv
580.4 473.667 581.479 472.455 582.277 470.915 cv
582.277 452.178 li
581.479 450.61 580.408 449.391 579.067 448.521 cv
577.727 447.651 576.046 447.216 574.021 447.216 cv
572.338 447.216 570.904 447.58 569.722 448.307 cv
568.538 449.034 567.576 450.025 566.833 451.28 cv
566.092 452.563 565.55 454.054 565.208 455.75 cv
564.867 457.447 564.695 459.266 564.695 461.205 cv
564.695 462.103 li
564.695 464.042 564.858 465.845 565.188 467.514 cv
cp
554.021 451.58 mo
554.835 448.67 556.024 446.175 557.594 444.094 cv
559.162 442.012 561.065 440.401 563.305 439.26 cv
565.544 438.119 568.102 437.548 570.984 437.548 cv
573.407 437.548 575.539 437.984 577.379 438.853 cv
579.219 439.723 580.852 440.957 582.277 442.553 cv
582.277 418.982 li
594.211 418.982 li
594.211 484.689 li
583.475 484.689 li
582.875 479.855 li
581.421 481.652 579.711 483.049 577.743 484.048 cv
575.774 485.045 573.492 485.545 570.897 485.545 cv
568.074 485.545 565.544 484.953 563.305 483.77 cv
561.065 482.587 559.177 480.954 557.637 478.871 cv
556.068 476.79 554.87 474.315 554.044 471.449 cv
553.216 468.583 552.803 465.468 552.803 462.103 cv
552.803 461.205 li
552.803 457.697 553.21 454.488 554.021 451.58 cv
cp
f
617.44 467.471 mo
617.81 469.168 618.395 470.644 619.193 471.898 cv
619.992 473.182 621.025 474.194 622.295 474.936 cv
623.564 475.678 625.098 476.048 626.894 476.048 cv
628.632 476.048 630.13 475.678 631.385 474.936 cv
632.641 474.194 633.667 473.182 634.466 471.898 cv
635.235 470.644 635.805 469.168 636.177 467.471 cv
636.548 465.775 636.731 463.957 636.731 462.017 cv
636.731 461.119 li
636.731 459.237 636.548 457.455 636.177 455.771 cv
635.805 454.089 635.235 452.606 634.466 451.323 cv
633.667 450.039 632.641 449.027 631.385 448.285 cv
630.13 447.544 628.604 447.173 626.809 447.173 cv
625.039 447.173 623.528 447.544 622.272 448.285 cv
621.019 449.027 619.992 450.039 619.193 451.323 cv
618.395 452.606 617.81 454.089 617.44 455.771 cv
617.068 457.455 616.884 459.237 616.884 461.119 cv
616.884 462.017 li
616.884 463.957 617.068 465.775 617.44 467.471 cv
cp
606.445 451.772 mo
607.414 448.906 608.842 446.417 610.724 444.307 cv
612.577 442.197 614.852 440.542 617.546 439.345 cv
620.242 438.147 623.328 437.548 626.809 437.548 cv
630.287 437.548 633.381 438.147 636.09 439.345 cv
638.799 440.542 641.096 442.197 642.978 444.307 cv
644.831 446.417 646.243 448.906 647.213 451.772 cv
648.182 454.638 648.668 457.754 648.668 461.119 cv
648.668 462.017 li
648.668 465.412 648.182 468.541 647.213 471.407 cv
646.243 474.273 644.831 476.761 642.978 478.871 cv
641.123 480.983 638.843 482.629 636.134 483.812 cv
633.425 484.996 630.344 485.587 626.894 485.587 cv
623.413 485.587 620.313 484.996 617.59 483.812 cv
614.866 482.629 612.577 480.983 610.724 478.871 cv
608.842 476.761 607.414 474.273 606.445 471.407 cv
605.476 468.541 604.991 465.412 604.991 462.017 cv
604.991 461.119 li
604.991 457.754 605.476 454.638 606.445 451.772 cv
cp
f
670.505 467.514 mo
670.89 469.182 671.481 470.63 672.28 471.856 cv
673.079 473.111 674.091 474.095 675.318 474.808 cv
676.543 475.521 677.998 475.877 679.681 475.877 cv
680.707 475.877 681.642 475.777 682.482 475.578 cv
683.324 475.379 684.086 475.093 684.771 474.722 cv
685.483 474.324 686.112 473.838 686.654 473.268 cv
687.194 472.697 687.666 472.056 688.065 471.343 cv
688.065 451.75 li
687.638 450.953 687.124 450.253 686.525 449.654 cv
685.926 449.055 685.243 448.571 684.473 448.2 cv
683.815 447.887 683.095 447.644 682.313 447.473 cv
681.526 447.301 680.678 447.216 679.767 447.216 cv
678.083 447.216 676.628 447.58 675.403 448.307 cv
674.176 449.034 673.164 450.025 672.365 451.28 cv
671.539 452.563 670.925 454.054 670.527 455.75 cv
670.126 457.447 669.928 459.266 669.928 461.205 cv
669.928 462.103 li
669.928 464.042 670.12 465.845 670.505 467.514 cv
cp
659.297 451.58 mo
660.168 448.67 661.415 446.175 663.04 444.094 cv
664.667 442.012 666.635 440.401 668.944 439.26 cv
671.254 438.119 673.863 437.548 676.772 437.548 cv
678.34 437.548 679.773 437.698 681.071 437.997 cv
682.368 438.297 683.544 438.746 684.602 439.345 cv
685.398 439.773 686.141 440.28 686.824 440.863 cv
687.509 441.449 688.136 442.098 688.707 442.81 cv
689.177 438.404 li
700 438.404 li
700 483.192 li
700 486.329 699.466 489.124 698.396 491.577 cv
697.326 494.029 695.836 496.096 693.926 497.779 cv
691.987 499.462 689.669 500.738 686.975 501.607 cv
684.278 502.478 681.307 502.913 678.056 502.913 cv
676.657 502.913 675.161 502.77 673.563 502.485 cv
671.966 502.2 670.383 501.758 668.815 501.159 cv
667.247 500.56 665.764 499.796 664.366 498.87 cv
662.97 497.943 661.771 496.838 660.774 495.555 cv
666.12 488.325 li
666.892 489.209 667.717 489.986 668.601 490.657 cv
669.484 491.326 670.412 491.876 671.382 492.304 cv
672.323 492.731 673.3 493.053 674.313 493.266 cv
675.324 493.48 676.372 493.587 677.456 493.587 cv
679.196 493.587 680.742 493.345 682.098 492.859 cv
683.453 492.375 684.585 491.662 685.499 490.721 cv
686.325 489.865 686.961 488.81 687.401 487.556 cv
687.844 486.3 688.065 484.888 688.065 483.32 cv
688.065 480.668 li
687.494 481.295 686.896 481.866 686.27 482.379 cv
685.641 482.893 684.97 483.349 684.258 483.748 cv
683.202 484.319 682.04 484.76 680.771 485.074 cv
679.502 485.388 678.141 485.545 676.686 485.545 cv
673.806 485.545 671.219 484.953 668.922 483.77 cv
666.627 482.587 664.667 480.954 663.04 478.871 cv
661.415 476.79 660.168 474.315 659.297 471.449 cv
658.428 468.583 657.993 465.468 657.993 462.103 cv
657.993 461.205 li
657.993 457.697 658.428 454.488 659.297 451.58 cv
cp
f
302.318 554.56 mo
302.646 556.228 303.181 557.676 303.923 558.901 cv
304.664 560.156 305.619 561.141 306.789 561.854 cv
307.958 562.566 309.383 562.923 311.067 562.923 cv
313.12 562.923 314.824 562.48 316.178 561.597 cv
317.533 560.713 318.61 559.501 319.409 557.961 cv
319.409 539.224 li
318.61 537.656 317.54 536.437 316.2 535.566 cv
314.859 534.696 313.177 534.262 311.152 534.262 cv
309.469 534.262 308.036 534.625 306.854 535.353 cv
305.669 536.08 304.707 537.071 303.966 538.325 cv
303.224 539.608 302.683 541.1 302.34 542.796 cv
301.998 544.493 301.827 546.312 301.827 548.25 cv
301.827 549.148 li
301.827 551.088 301.99 552.891 302.318 554.56 cv
cp
291.154 538.625 mo
291.966 535.716 293.157 533.221 294.726 531.14 cv
296.293 529.058 298.197 527.446 300.436 526.306 cv
302.674 525.165 305.234 524.594 308.115 524.594 cv
310.538 524.594 312.67 525.029 314.51 525.898 cv
316.35 526.769 317.982 528.002 319.409 529.599 cv
319.409 506.028 li
331.343 506.028 li
331.343 571.735 li
320.606 571.735 li
320.007 566.901 li
318.553 568.698 316.841 570.095 314.874 571.094 cv
312.906 572.091 310.624 572.591 308.029 572.591 cv
305.206 572.591 302.674 571.998 300.436 570.815 cv
298.197 569.633 296.308 568 294.768 565.917 cv
293.2 563.836 292.001 561.361 291.175 558.495 cv
290.347 555.629 289.934 552.515 289.934 549.148 cv
289.934 548.25 li
289.934 544.742 290.341 541.534 291.154 538.625 cv
cp
f
361.116 534.925 mo
360.004 535.396 359.034 536.073 358.207 536.957 cv
357.352 537.841 356.639 538.896 356.068 540.123 cv
355.497 541.349 355.07 542.718 354.785 544.229 cv
374.292 544.229 li
374.292 543.288 li
374.292 542.033 374.063 540.85 373.607 539.737 cv
373.15 538.625 372.523 537.656 371.726 536.828 cv
370.927 536.03 369.95 535.396 368.795 534.925 cv
367.64 534.454 366.307 534.219 364.795 534.219 cv
363.454 534.219 362.229 534.454 361.116 534.925 cv
cp
356.497 570.837 mo
353.587 569.668 351.092 568.071 349.011 566.045 cv
346.928 564.05 345.324 561.69 344.197 558.966 cv
343.071 556.243 342.508 553.326 342.508 550.218 cv
342.508 548.507 li
342.508 544.971 343.064 541.741 344.176 538.817 cv
345.289 535.895 346.843 533.378 348.839 531.268 cv
350.835 529.157 353.202 527.518 355.94 526.348 cv
358.678 525.179 361.658 524.594 364.881 524.594 cv
368.217 524.594 371.19 525.144 373.8 526.241 cv
376.409 527.339 378.626 528.887 380.452 530.883 cv
382.248 532.879 383.617 535.282 384.558 538.091 cv
385.5 540.899 385.971 544.001 385.971 547.395 cv
385.971 552.442 li
354.571 552.442 li
354.571 552.57 li
354.971 554.425 355.483 555.914 356.111 557.041 cv
356.738 558.168 357.58 559.188 358.636 560.1 cv
359.719 561.04 360.959 561.768 362.357 562.281 cv
363.753 562.794 365.279 563.051 366.934 563.051 cv
369.272 563.051 371.539 562.609 373.736 561.726 cv
375.932 560.842 377.714 559.515 379.083 557.747 cv
385.029 564.163 li
383.518 566.302 381.122 568.242 377.843 569.981 cv
374.563 571.721 370.684 572.591 366.206 572.591 cv
362.642 572.591 359.405 572.006 356.497 570.837 cv
cp
f
393.371 525.449 mo
405.776 525.449 li
415.957 558.089 li
416.599 561.34 li
417.24 558.089 li
427.38 525.449 li
439.783 525.449 li
422.203 571.735 li
411.038 571.735 li
393.371 525.449 li
cp
f
478.264 557.147 mo
477.935 556.606 477.357 556.093 476.53 555.608 cv
475.675 555.151 474.548 554.725 473.15 554.324 cv
471.754 553.926 469.986 553.526 467.847 553.127 cv
465.138 552.586 462.663 551.908 460.426 551.095 cv
458.187 550.282 456.269 549.291 454.671 548.122 cv
453.073 546.981 451.827 545.655 450.929 544.144 cv
450.029 542.632 449.58 540.893 449.58 538.925 cv
449.58 537.015 450.037 535.189 450.95 533.449 cv
451.862 531.709 453.175 530.185 454.886 528.871 cv
456.597 527.561 458.678 526.52 461.131 525.749 cv
463.584 524.979 466.351 524.594 469.43 524.594 cv
472.652 524.594 475.547 524.973 478.113 525.728 cv
480.681 526.483 482.862 527.518 484.658 528.829 cv
486.426 530.17 487.781 531.753 488.723 533.577 cv
489.664 535.402 490.134 537.385 490.134 539.523 cv
478.241 539.523 li
478.241 538.754 478.113 538.033 477.856 537.363 cv
477.6 536.693 477.215 536.087 476.702 535.545 cv
475.988 534.832 475.025 534.262 473.814 533.834 cv
472.603 533.406 471.141 533.192 469.43 533.192 cv
467.975 533.192 466.706 533.335 465.622 533.62 cv
464.538 533.905 463.654 534.305 462.971 534.817 cv
462.342 535.274 461.864 535.809 461.537 536.422 cv
461.208 537.036 461.045 537.684 461.045 538.369 cv
461.045 539.053 461.188 539.688 461.473 540.271 cv
461.759 540.857 462.271 541.378 463.013 541.833 cv
463.725 542.318 464.71 542.753 465.965 543.138 cv
467.22 543.522 468.815 543.858 470.756 544.144 cv
473.55 544.6 476.146 545.185 478.541 545.897 cv
480.938 546.61 483.005 547.522 484.743 548.635 cv
486.483 549.776 487.846 551.152 488.828 552.763 cv
489.813 554.375 490.306 556.292 490.306 558.517 cv
490.306 560.57 489.813 562.46 488.828 564.185 cv
487.846 565.91 486.455 567.4 484.658 568.655 cv
482.833 569.91 480.638 570.887 478.071 571.585 cv
475.504 572.283 472.638 572.633 469.473 572.633 cv
465.992 572.633 462.92 572.177 460.254 571.265 cv
457.587 570.353 455.355 569.154 453.56 567.671 cv
451.763 566.217 450.399 564.556 449.475 562.688 cv
448.547 560.82 448.084 558.944 448.084 557.062 cv
459.42 557.062 li
459.505 558.317 459.848 559.394 460.446 560.292 cv
461.045 561.19 461.814 561.91 462.756 562.452 cv
463.697 563.022 464.773 563.436 465.986 563.693 cv
467.197 563.95 468.446 564.078 469.729 564.078 cv
471.27 564.078 472.616 563.942 473.771 563.672 cv
474.926 563.4 475.874 563.037 476.616 562.581 cv
477.329 562.125 477.863 561.597 478.221 560.998 cv
478.576 560.398 478.755 559.743 478.755 559.03 cv
478.755 558.317 478.591 557.689 478.264 557.147 cv
cp
f
501.769 581.018 mo
501.769 571.735 li
540.783 571.735 li
540.783 581.018 li
501.769 581.018 li
cp
f
173.345 403.406 mo
64.9702 403.406 li
64.9702 558.995 li
37.5986 558.995 li
37.5986 403.406 li
0 403.406 li
0 562.194 li
0 581.192 15.4009 596.594 34.3994 596.594 cv
102.546 596.594 li
102.546 436.311 li
113.885 423.929 127.604 417.603 141.891 417.285 cv
134.476 442.593 li
170.51 442.593 191.94 462.413 189.105 492.913 cv
227.702 502.823 li
227.702 533.143 209.923 556.772 165.249 556.772 cv
139.986 556.772 127.061 570.515 127.061 596.594 cv
173.345 596.594 li
215.207 596.594 249.132 562.646 249.132 520.807 cv
249.132 479.171 li
249.132 437.332 215.207 403.406 173.345 403.406 cv
cp
level3{
gsave
clp
[293.197 242.573 -242.573 293.197 -39.9075 374.878 ]ct
/0 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~!J(+K!J11L!J::N!JLFP!J^OQ!/LIP!/^UR!/paT!06sW!0@$X!0I*Y!L!<[!L*B\!L3K^!LEW`!LN]a
!L`ic!Liod!M'#e!M0)f!M9,f!MK8h!M]Ai!MfAh!MoDh!2fDh!2oGh!3,Pi!35Si!3>Yj!3Pel!3Yhl
!3ktn!3ttm!42(n!4;+n!4D.n!4V4n!4_7n!4h:n!4q@o!5%Fp!5.Lq!5@Ur!5I[s!5R^s!5dju!5mq!
!6"""!64.$!6=1$!6F4$!6O7$!6a=$!6j@$!6j=#!6sC$!7'F$!70I$!79L$!7BO$!7KR$!7]X$!7f[$
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[293.197 242.573 -242.573 293.197 -39.9075 374.878 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 <~It3'"J:W9&JV&K+K7no3Knb>:L51P?Ll$tGMMmFPNK0$ZNfT6^O-#HcOckljP*;)nPE_;sQ'R`%QC!r*
R$a;0R@0M4S"#q<S=H.@SXl@DT:_dLTqS3TU8"EXUSFW\V5:&dVP^8hW2Q\pWMuntWiE,#XK8P+Xf\b/
Y-5%5Yct@:Z*L[AZa7!F['[3J[C3NQ\$riV\@B&Z\[f8^]"5Jb]=Y\f]Y2"m^:q=r^V@P!^qmk(_SX1-
_o'C0`5KX6`l?$<a2c6@aN2HDaiV]JbKJ)PbKJ)Pbfn;Tc-=MXcHa_\cd0q`d*U.ddF$@hdaHUneC<!t
~>
<~r;?Kjr;HTmrVc]nrVc]nrVZTkr;6Bgqtp9fqtp9fqtp9fqtp9fqtp9fqtg0cqYU0eqtp9fqtp9fqtp9f
qtp9fqtp9fqtp6dqYL'bqYL$`q>'j^q>'g\p\4CTp@e1Pp%@tLo^qbHoCMPDo()>@naZ/>naZ/>naZ,<
nF5r:nF,i6mdBN1mHs<-m-O*)lg!d"l07Hrkih6nkND$kkND$kkND$kkND$jk2tggk2tgfjlPUcjlPUc
jlPUcjlPUcjlPUcjQ,C_j5]1[io8qUi8EPOhr!>KhVR,GhVR,Gh;-oCgt^]?gY:K;g=k97g"G$1f@SX+
~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
168.696 480.463 mo
168.696 475.701 164.84 471.846 160.079 471.846 cv
155.316 471.846 151.461 475.701 151.461 480.463 cv
151.461 485.226 155.316 489.081 160.079 489.081 cv
164.84 489.081 168.696 485.226 168.696 480.463 cv
cp
level3{
gsave
clp
[293.197 242.573 -242.573 293.197 -10.5022 339.336 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[293.197 242.573 -242.573 293.197 -10.5022 339.336 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
1340.69 478.188 mo
1339.12 480.497 1337.23 482.309 1335.02 483.62 cv
1332.81 484.932 1330.4 485.587 1327.77 485.587 cv
1325.38 485.587 1323.18 485.217 1321.19 484.475 cv
1319.19 483.734 1317.48 482.551 1316.05 480.925 cv
1314.63 479.329 1313.52 477.282 1312.74 474.786 cv
1311.95 472.292 1311.56 469.29 1311.56 465.781 cv
1311.56 438.404 li
1323.45 438.404 li
1323.45 465.867 li
1323.45 467.749 1323.59 469.332 1323.86 470.615 cv
1324.13 471.898 1324.56 472.926 1325.16 473.696 cv
1325.76 474.494 1326.55 475.064 1327.52 475.407 cv
1328.49 475.749 1329.67 475.92 1331.07 475.92 cv
1332.32 475.92 1333.46 475.792 1334.47 475.535 cv
1335.48 475.279 1336.37 474.908 1337.14 474.423 cv
1337.8 473.995 1338.38 473.481 1338.9 472.882 cv
1339.41 472.284 1339.85 471.614 1340.22 470.872 cv
1340.22 438.404 li
1352.16 438.404 li
1352.16 484.689 li
1341.38 484.689 li
1340.69 478.188 li
cp
.691829 .650782 .674098 .739773 cmyk
f
1363.75 438.404 mo
1374.53 438.404 li
1375.26 444.82 li
1375.85 443.965 1376.51 443.181 1377.22 442.468 cv
1377.94 441.755 1378.69 441.114 1379.49 440.542 cv
1380.86 439.574 1382.36 438.831 1383.98 438.318 cv
1385.61 437.805 1387.33 437.548 1389.16 437.548 cv
1391.5 437.548 1393.64 437.891 1395.58 438.575 cv
1397.51 439.26 1399.2 440.344 1400.62 441.826 cv
1402.02 443.338 1403.11 445.27 1403.9 447.622 cv
1404.68 449.975 1405.07 452.835 1405.07 456.2 cv
1405.07 484.689 li
1393.18 484.689 li
1393.18 456.371 li
1393.18 454.546 1392.97 453.041 1392.56 451.857 cv
1392.15 450.674 1391.55 449.74 1390.78 449.055 cv
1390.01 448.371 1389.09 447.894 1388 447.622 cv
1386.92 447.352 1385.69 447.216 1384.32 447.216 cv
1383.18 447.216 1382.14 447.345 1381.18 447.601 cv
1380.22 447.858 1379.38 448.243 1378.64 448.756 cv
1378.04 449.127 1377.49 449.568 1377.01 450.083 cv
1376.52 450.596 1376.08 451.167 1375.68 451.793 cv
1375.68 484.689 li
1363.75 484.689 li
1363.75 438.404 li
cp
f
1427.47 467.514 mo
1427.79 469.182 1428.33 470.63 1429.07 471.856 cv
1429.81 473.111 1430.77 474.095 1431.94 474.808 cv
1433.11 475.521 1434.53 475.877 1436.21 475.877 cv
1438.27 475.877 1439.97 475.435 1441.33 474.551 cv
1442.68 473.667 1443.76 472.455 1444.56 470.915 cv
1444.56 452.178 li
1443.76 450.61 1442.69 449.391 1441.35 448.521 cv
1440.01 447.651 1438.32 447.216 1436.3 447.216 cv
1434.62 447.216 1433.18 447.58 1432 448.307 cv
1430.82 449.034 1429.85 450.025 1429.11 451.28 cv
1428.37 452.563 1427.83 454.054 1427.49 455.75 cv
1427.15 457.447 1426.97 459.266 1426.97 461.205 cv
1426.97 462.103 li
1426.97 464.042 1427.14 465.845 1427.47 467.514 cv
cp
1416.3 451.58 mo
1417.11 448.67 1418.3 446.175 1419.87 444.094 cv
1421.44 442.012 1423.34 440.401 1425.58 439.26 cv
1427.82 438.119 1430.38 437.548 1433.26 437.548 cv
1435.69 437.548 1437.82 437.984 1439.66 438.853 cv
1441.5 439.723 1443.13 440.957 1444.56 442.553 cv
1444.56 418.982 li
1456.49 418.982 li
1456.49 484.689 li
1445.75 484.689 li
1445.15 479.855 li
1443.7 481.652 1441.99 483.049 1440.02 484.048 cv
1438.05 485.045 1435.77 485.545 1433.18 485.545 cv
1430.35 485.545 1427.82 484.953 1425.58 483.77 cv
1423.34 482.587 1421.46 480.954 1419.92 478.871 cv
1418.35 476.79 1417.15 474.315 1416.32 471.449 cv
1415.5 468.583 1415.08 465.468 1415.08 462.103 cv
1415.08 461.205 li
1415.08 457.697 1415.49 454.488 1416.3 451.58 cv
cp
f
1486.26 447.879 mo
1485.15 448.35 1484.18 449.027 1483.36 449.911 cv
1482.5 450.795 1481.79 451.851 1481.22 453.077 cv
1480.65 454.303 1480.22 455.672 1479.93 457.184 cv
1499.44 457.184 li
1499.44 456.242 li
1499.44 454.988 1499.21 453.804 1498.75 452.692 cv
1498.3 451.58 1497.67 450.61 1496.87 449.783 cv
1496.07 448.985 1495.1 448.35 1493.94 447.879 cv
1492.79 447.409 1491.45 447.173 1489.94 447.173 cv
1488.6 447.173 1487.38 447.409 1486.26 447.879 cv
cp
1481.64 483.791 mo
1478.74 482.622 1476.24 481.025 1474.16 479 cv
1472.08 477.004 1470.47 474.645 1469.35 471.92 cv
1468.22 469.198 1467.66 466.281 1467.66 463.172 cv
1467.66 461.461 li
1467.66 457.925 1468.21 454.695 1469.32 451.772 cv
1470.44 448.849 1471.99 446.333 1473.99 444.222 cv
1475.98 442.111 1478.35 440.472 1481.09 439.302 cv
1483.83 438.133 1486.81 437.548 1490.03 437.548 cv
1493.37 437.548 1496.34 438.098 1498.95 439.195 cv
1501.56 440.293 1503.77 441.841 1505.6 443.837 cv
1507.4 445.833 1508.76 448.236 1509.71 451.045 cv
1510.65 453.854 1511.12 456.955 1511.12 460.349 cv
1511.12 465.396 li
1479.72 465.396 li
1479.72 465.524 li
1480.12 467.379 1480.63 468.869 1481.26 469.996 cv
1481.89 471.122 1482.73 472.142 1483.78 473.054 cv
1484.87 473.995 1486.11 474.722 1487.5 475.235 cv
1488.9 475.749 1490.43 476.005 1492.08 476.005 cv
1494.42 476.005 1496.69 475.563 1498.88 474.68 cv
1501.08 473.796 1502.86 472.469 1504.23 470.701 cv
1510.18 477.118 li
1508.67 479.256 1506.27 481.196 1502.99 482.936 cv
1499.71 484.675 1495.83 485.545 1491.35 485.545 cv
1487.79 485.545 1484.55 484.96 1481.64 483.791 cv
cp
f
1559.69 437.912 mo
1561.22 438.154 1562.45 438.418 1563.39 438.703 cv
1561.64 450.552 li
1560.07 450.183 1558.47 449.904 1556.83 449.718 cv
1555.19 449.533 1553.62 449.44 1552.14 449.44 cv
1550.6 449.44 1549.21 449.577 1547.97 449.847 cv
1546.73 450.119 1545.63 450.524 1544.66 451.066 cv
1543.49 451.693 1542.49 452.492 1541.66 453.462 cv
1540.83 454.432 1540.15 455.573 1539.61 456.884 cv
1539.61 484.689 li
1527.72 484.689 li
1527.72 438.404 li
1538.8 438.404 li
1539.27 444.949 li
1539.35 445.976 li
1541.23 443.352 1543.49 441.292 1546.11 439.794 cv
1548.73 438.297 1551.6 437.548 1554.71 437.548 cv
1556.51 437.548 1558.17 437.67 1559.69 437.912 cv
cp
f
1585.19 467.514 mo
1585.51 469.182 1586.05 470.63 1586.79 471.856 cv
1587.53 473.111 1588.49 474.095 1589.66 474.808 cv
1590.83 475.521 1592.25 475.877 1593.94 475.877 cv
1595.99 475.877 1597.69 475.435 1599.05 474.551 cv
1600.4 473.667 1601.48 472.455 1602.28 470.915 cv
1602.28 452.178 li
1601.48 450.61 1600.41 449.391 1599.07 448.521 cv
1597.73 447.651 1596.05 447.216 1594.02 447.216 cv
1592.34 447.216 1590.9 447.58 1589.72 448.307 cv
1588.54 449.034 1587.58 450.025 1586.83 451.28 cv
1586.09 452.563 1585.55 454.054 1585.21 455.75 cv
1584.87 457.447 1584.7 459.266 1584.7 461.205 cv
1584.7 462.103 li
1584.7 464.042 1584.86 465.845 1585.19 467.514 cv
cp
1574.02 451.58 mo
1574.83 448.67 1576.02 446.175 1577.59 444.094 cv
1579.16 442.012 1581.07 440.401 1583.3 439.26 cv
1585.54 438.119 1588.1 437.548 1590.98 437.548 cv
1593.41 437.548 1595.54 437.984 1597.38 438.853 cv
1599.22 439.723 1600.85 440.957 1602.28 442.553 cv
1602.28 418.982 li
1614.21 418.982 li
1614.21 484.689 li
1603.47 484.689 li
1602.88 479.855 li
1601.42 481.652 1599.71 483.049 1597.74 484.048 cv
1595.77 485.045 1593.49 485.545 1590.9 485.545 cv
1588.07 485.545 1585.54 484.953 1583.3 483.77 cv
1581.07 482.587 1579.18 480.954 1577.64 478.871 cv
1576.07 476.79 1574.87 474.315 1574.04 471.449 cv
1573.22 468.583 1572.8 465.468 1572.8 462.103 cv
1572.8 461.205 li
1572.8 457.697 1573.21 454.488 1574.02 451.58 cv
cp
f
1637.44 467.471 mo
1637.81 469.168 1638.39 470.644 1639.19 471.898 cv
1639.99 473.182 1641.03 474.194 1642.29 474.936 cv
1643.56 475.678 1645.1 476.048 1646.89 476.048 cv
1648.63 476.048 1650.13 475.678 1651.38 474.936 cv
1652.64 474.194 1653.67 473.182 1654.47 471.898 cv
1655.24 470.644 1655.8 469.168 1656.18 467.471 cv
1656.55 465.775 1656.73 463.957 1656.73 462.017 cv
1656.73 461.119 li
1656.73 459.237 1656.55 457.455 1656.18 455.771 cv
1655.8 454.089 1655.24 452.606 1654.47 451.323 cv
1653.67 450.039 1652.64 449.027 1651.38 448.285 cv
1650.13 447.544 1648.6 447.173 1646.81 447.173 cv
1645.04 447.173 1643.53 447.544 1642.27 448.285 cv
1641.02 449.027 1639.99 450.039 1639.19 451.323 cv
1638.39 452.606 1637.81 454.089 1637.44 455.771 cv
1637.07 457.455 1636.88 459.237 1636.88 461.119 cv
1636.88 462.017 li
1636.88 463.957 1637.07 465.775 1637.44 467.471 cv
cp
1626.45 451.772 mo
1627.41 448.906 1628.84 446.417 1630.72 444.307 cv
1632.58 442.197 1634.85 440.542 1637.55 439.345 cv
1640.24 438.147 1643.33 437.548 1646.81 437.548 cv
1650.29 437.548 1653.38 438.147 1656.09 439.345 cv
1658.8 440.542 1661.1 442.197 1662.98 444.307 cv
1664.83 446.417 1666.24 448.906 1667.21 451.772 cv
1668.18 454.638 1668.67 457.754 1668.67 461.119 cv
1668.67 462.017 li
1668.67 465.412 1668.18 468.541 1667.21 471.407 cv
1666.24 474.273 1664.83 476.761 1662.98 478.871 cv
1661.12 480.983 1658.84 482.629 1656.13 483.812 cv
1653.42 484.996 1650.34 485.587 1646.89 485.587 cv
1643.41 485.587 1640.31 484.996 1637.59 483.812 cv
1634.87 482.629 1632.58 480.983 1630.72 478.871 cv
1628.84 476.761 1627.41 474.273 1626.45 471.407 cv
1625.48 468.541 1624.99 465.412 1624.99 462.017 cv
1624.99 461.119 li
1624.99 457.754 1625.48 454.638 1626.45 451.772 cv
cp
f
1690.5 467.514 mo
1690.89 469.182 1691.48 470.63 1692.28 471.856 cv
1693.08 473.111 1694.09 474.095 1695.32 474.808 cv
1696.54 475.521 1698 475.877 1699.68 475.877 cv
1700.71 475.877 1701.64 475.777 1702.48 475.578 cv
1703.32 475.379 1704.09 475.093 1704.77 474.722 cv
1705.48 474.324 1706.11 473.838 1706.65 473.268 cv
1707.19 472.697 1707.67 472.056 1708.07 471.343 cv
1708.07 451.75 li
1707.64 450.953 1707.12 450.253 1706.53 449.654 cv
1705.93 449.055 1705.24 448.571 1704.47 448.2 cv
1703.82 447.887 1703.09 447.644 1702.31 447.473 cv
1701.53 447.301 1700.68 447.216 1699.77 447.216 cv
1698.08 447.216 1696.63 447.58 1695.4 448.307 cv
1694.18 449.034 1693.16 450.025 1692.37 451.28 cv
1691.54 452.563 1690.92 454.054 1690.53 455.75 cv
1690.13 457.447 1689.93 459.266 1689.93 461.205 cv
1689.93 462.103 li
1689.93 464.042 1690.12 465.845 1690.5 467.514 cv
cp
1679.3 451.58 mo
1680.17 448.67 1681.42 446.175 1683.04 444.094 cv
1684.67 442.012 1686.63 440.401 1688.94 439.26 cv
1691.25 438.119 1693.86 437.548 1696.77 437.548 cv
1698.34 437.548 1699.77 437.698 1701.07 437.997 cv
1702.37 438.297 1703.54 438.746 1704.6 439.345 cv
1705.4 439.773 1706.14 440.28 1706.82 440.863 cv
1707.51 441.449 1708.14 442.098 1708.71 442.81 cv
1709.18 438.404 li
1720 438.404 li
1720 483.192 li
1720 486.329 1719.47 489.124 1718.4 491.577 cv
1717.33 494.029 1715.84 496.096 1713.93 497.779 cv
1711.99 499.462 1709.67 500.738 1706.97 501.607 cv
1704.28 502.478 1701.31 502.913 1698.06 502.913 cv
1696.66 502.913 1695.16 502.77 1693.56 502.485 cv
1691.97 502.2 1690.38 501.758 1688.82 501.159 cv
1687.25 500.56 1685.76 499.796 1684.37 498.87 cv
1682.97 497.943 1681.77 496.838 1680.77 495.555 cv
1686.12 488.325 li
1686.89 489.209 1687.72 489.986 1688.6 490.657 cv
1689.48 491.326 1690.41 491.876 1691.38 492.304 cv
1692.32 492.731 1693.3 493.053 1694.31 493.266 cv
1695.32 493.48 1696.37 493.587 1697.46 493.587 cv
1699.2 493.587 1700.74 493.345 1702.1 492.859 cv
1703.45 492.375 1704.58 491.662 1705.5 490.721 cv
1706.33 489.865 1706.96 488.81 1707.4 487.556 cv
1707.84 486.3 1708.07 484.888 1708.07 483.32 cv
1708.07 480.668 li
1707.49 481.295 1706.9 481.866 1706.27 482.379 cv
1705.64 482.893 1704.97 483.349 1704.26 483.748 cv
1703.2 484.319 1702.04 484.76 1700.77 485.074 cv
1699.5 485.388 1698.14 485.545 1696.69 485.545 cv
1693.81 485.545 1691.22 484.953 1688.92 483.77 cv
1686.63 482.587 1684.67 480.954 1683.04 478.871 cv
1681.42 476.79 1680.17 474.315 1679.3 471.449 cv
1678.43 468.583 1677.99 465.468 1677.99 462.103 cv
1677.99 461.205 li
1677.99 457.697 1678.43 454.488 1679.3 451.58 cv
cp
f
1322.32 554.56 mo
1322.65 556.228 1323.18 557.676 1323.92 558.901 cv
1324.66 560.156 1325.62 561.141 1326.79 561.854 cv
1327.96 562.566 1329.38 562.923 1331.07 562.923 cv
1333.12 562.923 1334.82 562.48 1336.18 561.597 cv
1337.53 560.713 1338.61 559.501 1339.41 557.961 cv
1339.41 539.224 li
1338.61 537.656 1337.54 536.437 1336.2 535.566 cv
1334.86 534.696 1333.18 534.262 1331.15 534.262 cv
1329.47 534.262 1328.04 534.625 1326.85 535.353 cv
1325.67 536.08 1324.71 537.071 1323.97 538.325 cv
1323.22 539.608 1322.68 541.1 1322.34 542.796 cv
1322 544.493 1321.83 546.312 1321.83 548.25 cv
1321.83 549.148 li
1321.83 551.088 1321.99 552.891 1322.32 554.56 cv
cp
1311.15 538.625 mo
1311.97 535.716 1313.16 533.221 1314.73 531.14 cv
1316.29 529.058 1318.2 527.446 1320.44 526.306 cv
1322.67 525.165 1325.23 524.594 1328.12 524.594 cv
1330.54 524.594 1332.67 525.029 1334.51 525.898 cv
1336.35 526.769 1337.98 528.002 1339.41 529.599 cv
1339.41 506.028 li
1351.34 506.028 li
1351.34 571.735 li
1340.61 571.735 li
1340.01 566.901 li
1338.55 568.698 1336.84 570.095 1334.87 571.094 cv
1332.91 572.091 1330.62 572.591 1328.03 572.591 cv
1325.21 572.591 1322.67 571.998 1320.44 570.815 cv
1318.2 569.633 1316.31 568 1314.77 565.917 cv
1313.2 563.836 1312 561.361 1311.17 558.495 cv
1310.35 555.629 1309.93 552.515 1309.93 549.148 cv
1309.93 548.25 li
1309.93 544.742 1310.34 541.534 1311.15 538.625 cv
cp
f
1381.12 534.925 mo
1380 535.396 1379.03 536.073 1378.21 536.957 cv
1377.35 537.841 1376.64 538.896 1376.07 540.123 cv
1375.5 541.349 1375.07 542.718 1374.79 544.229 cv
1394.29 544.229 li
1394.29 543.288 li
1394.29 542.033 1394.06 540.85 1393.61 539.737 cv
1393.15 538.625 1392.52 537.656 1391.73 536.828 cv
1390.93 536.03 1389.95 535.396 1388.79 534.925 cv
1387.64 534.454 1386.31 534.219 1384.79 534.219 cv
1383.45 534.219 1382.23 534.454 1381.12 534.925 cv
cp
1376.5 570.837 mo
1373.59 569.668 1371.09 568.071 1369.01 566.045 cv
1366.93 564.05 1365.32 561.69 1364.2 558.966 cv
1363.07 556.243 1362.51 553.326 1362.51 550.218 cv
1362.51 548.507 li
1362.51 544.971 1363.06 541.741 1364.18 538.817 cv
1365.29 535.895 1366.84 533.378 1368.84 531.268 cv
1370.83 529.157 1373.2 527.518 1375.94 526.348 cv
1378.68 525.179 1381.66 524.594 1384.88 524.594 cv
1388.22 524.594 1391.19 525.144 1393.8 526.241 cv
1396.41 527.339 1398.63 528.887 1400.45 530.883 cv
1402.25 532.879 1403.62 535.282 1404.56 538.091 cv
1405.5 540.899 1405.97 544.001 1405.97 547.395 cv
1405.97 552.442 li
1374.57 552.442 li
1374.57 552.57 li
1374.97 554.425 1375.48 555.914 1376.11 557.041 cv
1376.74 558.168 1377.58 559.188 1378.64 560.1 cv
1379.72 561.04 1380.96 561.768 1382.36 562.281 cv
1383.75 562.794 1385.28 563.051 1386.93 563.051 cv
1389.27 563.051 1391.54 562.609 1393.74 561.726 cv
1395.93 560.842 1397.71 559.515 1399.08 557.747 cv
1405.03 564.163 li
1403.52 566.302 1401.12 568.242 1397.84 569.981 cv
1394.56 571.721 1390.68 572.591 1386.21 572.591 cv
1382.64 572.591 1379.41 572.006 1376.5 570.837 cv
cp
f
1413.37 525.449 mo
1425.78 525.449 li
1435.96 558.089 li
1436.6 561.34 li
1437.24 558.089 li
1447.38 525.449 li
1459.78 525.449 li
1442.2 571.735 li
1431.04 571.735 li
1413.37 525.449 li
cp
f
1498.26 557.147 mo
1497.93 556.606 1497.36 556.093 1496.53 555.608 cv
1495.67 555.151 1494.55 554.725 1493.15 554.324 cv
1491.75 553.926 1489.99 553.526 1487.85 553.127 cv
1485.14 552.586 1482.66 551.908 1480.43 551.095 cv
1478.19 550.282 1476.27 549.291 1474.67 548.122 cv
1473.07 546.981 1471.83 545.655 1470.93 544.144 cv
1470.03 542.632 1469.58 540.893 1469.58 538.925 cv
1469.58 537.015 1470.04 535.189 1470.95 533.449 cv
1471.86 531.709 1473.17 530.185 1474.89 528.871 cv
1476.6 527.561 1478.68 526.52 1481.13 525.749 cv
1483.58 524.979 1486.35 524.594 1489.43 524.594 cv
1492.65 524.594 1495.55 524.973 1498.11 525.728 cv
1500.68 526.483 1502.86 527.518 1504.66 528.829 cv
1506.43 530.17 1507.78 531.753 1508.72 533.577 cv
1509.66 535.402 1510.13 537.385 1510.13 539.523 cv
1498.24 539.523 li
1498.24 538.754 1498.11 538.033 1497.86 537.363 cv
1497.6 536.693 1497.21 536.087 1496.7 535.545 cv
1495.99 534.832 1495.03 534.262 1493.81 533.834 cv
1492.6 533.406 1491.14 533.192 1489.43 533.192 cv
1487.97 533.192 1486.71 533.335 1485.62 533.62 cv
1484.54 533.905 1483.65 534.305 1482.97 534.817 cv
1482.34 535.274 1481.86 535.809 1481.54 536.422 cv
1481.21 537.036 1481.04 537.684 1481.04 538.369 cv
1481.04 539.053 1481.19 539.688 1481.47 540.271 cv
1481.76 540.857 1482.27 541.378 1483.01 541.833 cv
1483.72 542.318 1484.71 542.753 1485.96 543.138 cv
1487.22 543.522 1488.82 543.858 1490.76 544.144 cv
1493.55 544.6 1496.15 545.185 1498.54 545.897 cv
1500.94 546.61 1503 547.522 1504.74 548.635 cv
1506.48 549.776 1507.85 551.152 1508.83 552.763 cv
1509.81 554.375 1510.31 556.292 1510.31 558.517 cv
1510.31 560.57 1509.81 562.46 1508.83 564.185 cv
1507.85 565.91 1506.46 567.4 1504.66 568.655 cv
1502.83 569.91 1500.64 570.887 1498.07 571.585 cv
1495.5 572.283 1492.64 572.633 1489.47 572.633 cv
1485.99 572.633 1482.92 572.177 1480.25 571.265 cv
1477.59 570.353 1475.36 569.154 1473.56 567.671 cv
1471.76 566.217 1470.4 564.556 1469.47 562.688 cv
1468.55 560.82 1468.08 558.944 1468.08 557.062 cv
1479.42 557.062 li
1479.5 558.317 1479.85 559.394 1480.45 560.292 cv
1481.04 561.19 1481.81 561.91 1482.76 562.452 cv
1483.7 563.022 1484.77 563.436 1485.99 563.693 cv
1487.2 563.95 1488.45 564.078 1489.73 564.078 cv
1491.27 564.078 1492.62 563.942 1493.77 563.672 cv
1494.93 563.4 1495.87 563.037 1496.62 562.581 cv
1497.33 562.125 1497.86 561.597 1498.22 560.998 cv
1498.58 560.398 1498.75 559.743 1498.75 559.03 cv
1498.75 558.317 1498.59 557.689 1498.26 557.147 cv
cp
f
1521.77 581.018 mo
1521.77 571.735 li
1560.78 571.735 li
1560.78 581.018 li
1521.77 581.018 li
cp
f
1193.34 403.406 mo
1084.97 403.406 li
1084.97 558.995 li
1057.6 558.995 li
1057.6 403.406 li
1020 403.406 li
1020 562.194 li
1020 581.192 1035.4 596.594 1054.4 596.594 cv
1122.55 596.594 li
1122.55 436.311 li
1133.88 423.929 1147.6 417.603 1161.89 417.285 cv
1154.48 442.593 li
1190.51 442.593 1211.94 462.413 1209.11 492.913 cv
1247.7 502.823 li
1247.7 533.143 1229.92 556.772 1185.25 556.772 cv
1159.99 556.772 1147.06 570.515 1147.06 596.594 cv
1193.34 596.594 li
1235.21 596.594 1269.13 562.646 1269.13 520.807 cv
1269.13 479.171 li
1269.13 437.332 1235.21 403.406 1193.34 403.406 cv
cp
f
1188.7 480.463 mo
1188.7 475.701 1184.84 471.846 1180.08 471.846 cv
1175.32 471.846 1171.46 475.701 1171.46 480.463 cv
1171.46 485.226 1175.32 489.081 1180.08 489.081 cv
1184.84 489.081 1188.7 485.226 1188.7 480.463 cv
cp
f
2360.69 478.188 mo
2359.12 480.497 2357.23 482.309 2355.02 483.62 cv
2352.81 484.932 2350.4 485.587 2347.77 485.587 cv
2345.38 485.587 2343.18 485.217 2341.19 484.475 cv
2339.19 483.734 2337.48 482.551 2336.05 480.925 cv
2334.63 479.329 2333.52 477.282 2332.74 474.786 cv
2331.95 472.292 2331.56 469.29 2331.56 465.781 cv
2331.56 438.404 li
2343.45 438.404 li
2343.45 465.867 li
2343.45 467.749 2343.59 469.332 2343.86 470.615 cv
2344.13 471.898 2344.56 472.926 2345.16 473.696 cv
2345.76 474.494 2346.55 475.064 2347.52 475.407 cv
2348.49 475.749 2349.67 475.92 2351.07 475.92 cv
2352.32 475.92 2353.46 475.792 2354.47 475.535 cv
2355.48 475.279 2356.37 474.908 2357.14 474.423 cv
2357.8 473.995 2358.38 473.481 2358.9 472.882 cv
2359.41 472.284 2359.85 471.614 2360.22 470.872 cv
2360.22 438.404 li
2372.16 438.404 li
2372.16 484.689 li
2361.38 484.689 li
2360.69 478.188 li
cp
0 0 0 0 cmyk
f
2383.75 438.404 mo
2394.53 438.404 li
2395.26 444.82 li
2395.85 443.965 2396.51 443.181 2397.22 442.468 cv
2397.94 441.755 2398.69 441.114 2399.49 440.542 cv
2400.86 439.574 2402.36 438.831 2403.98 438.318 cv
2405.61 437.805 2407.33 437.548 2409.16 437.548 cv
2411.5 437.548 2413.64 437.891 2415.58 438.575 cv
2417.51 439.26 2419.2 440.344 2420.62 441.826 cv
2422.02 443.338 2423.11 445.27 2423.9 447.622 cv
2424.68 449.975 2425.07 452.835 2425.07 456.2 cv
2425.07 484.689 li
2413.18 484.689 li
2413.18 456.371 li
2413.18 454.546 2412.97 453.041 2412.56 451.857 cv
2412.15 450.674 2411.55 449.74 2410.78 449.055 cv
2410.01 448.371 2409.09 447.894 2408 447.622 cv
2406.92 447.352 2405.69 447.216 2404.32 447.216 cv
2403.18 447.216 2402.14 447.345 2401.18 447.601 cv
2400.22 447.858 2399.38 448.243 2398.64 448.756 cv
2398.04 449.127 2397.49 449.568 2397.01 450.083 cv
2396.52 450.596 2396.08 451.167 2395.68 451.793 cv
2395.68 484.689 li
2383.75 484.689 li
2383.75 438.404 li
cp
f
2447.47 467.514 mo
2447.79 469.182 2448.33 470.63 2449.07 471.856 cv
2449.81 473.111 2450.77 474.095 2451.94 474.808 cv
2453.11 475.521 2454.53 475.877 2456.21 475.877 cv
2458.27 475.877 2459.97 475.435 2461.33 474.551 cv
2462.68 473.667 2463.76 472.455 2464.56 470.915 cv
2464.56 452.178 li
2463.76 450.61 2462.69 449.391 2461.35 448.521 cv
2460.01 447.651 2458.32 447.216 2456.3 447.216 cv
2454.62 447.216 2453.18 447.58 2452 448.307 cv
2450.82 449.034 2449.85 450.025 2449.11 451.28 cv
2448.37 452.563 2447.83 454.054 2447.49 455.75 cv
2447.15 457.447 2446.97 459.266 2446.97 461.205 cv
2446.97 462.103 li
2446.97 464.042 2447.14 465.845 2447.47 467.514 cv
cp
2436.3 451.58 mo
2437.11 448.67 2438.3 446.175 2439.87 444.094 cv
2441.44 442.012 2443.34 440.401 2445.58 439.26 cv
2447.82 438.119 2450.38 437.548 2453.26 437.548 cv
2455.69 437.548 2457.82 437.984 2459.66 438.853 cv
2461.5 439.723 2463.13 440.957 2464.56 442.553 cv
2464.56 418.982 li
2476.49 418.982 li
2476.49 484.689 li
2465.75 484.689 li
2465.15 479.855 li
2463.7 481.652 2461.99 483.049 2460.02 484.048 cv
2458.05 485.045 2455.77 485.545 2453.18 485.545 cv
2450.35 485.545 2447.82 484.953 2445.58 483.77 cv
2443.34 482.587 2441.46 480.954 2439.92 478.871 cv
2438.35 476.79 2437.15 474.315 2436.32 471.449 cv
2435.5 468.583 2435.08 465.468 2435.08 462.103 cv
2435.08 461.205 li
2435.08 457.697 2435.49 454.488 2436.3 451.58 cv
cp
f
2506.26 447.879 mo
2505.15 448.35 2504.18 449.027 2503.36 449.911 cv
2502.5 450.795 2501.79 451.851 2501.22 453.077 cv
2500.65 454.303 2500.22 455.672 2499.93 457.184 cv
2519.44 457.184 li
2519.44 456.242 li
2519.44 454.988 2519.21 453.804 2518.75 452.692 cv
2518.3 451.58 2517.67 450.61 2516.87 449.783 cv
2516.07 448.985 2515.1 448.35 2513.94 447.879 cv
2512.79 447.409 2511.45 447.173 2509.94 447.173 cv
2508.6 447.173 2507.38 447.409 2506.26 447.879 cv
cp
2501.64 483.791 mo
2498.74 482.622 2496.24 481.025 2494.16 479 cv
2492.08 477.004 2490.47 474.645 2489.35 471.92 cv
2488.22 469.198 2487.66 466.281 2487.66 463.172 cv
2487.66 461.461 li
2487.66 457.925 2488.21 454.695 2489.32 451.772 cv
2490.44 448.849 2491.99 446.333 2493.99 444.222 cv
2495.98 442.111 2498.35 440.472 2501.09 439.302 cv
2503.83 438.133 2506.81 437.548 2510.03 437.548 cv
2513.37 437.548 2516.34 438.098 2518.95 439.195 cv
2521.56 440.293 2523.77 441.841 2525.6 443.837 cv
2527.4 445.833 2528.76 448.236 2529.71 451.045 cv
2530.65 453.854 2531.12 456.955 2531.12 460.349 cv
2531.12 465.396 li
2499.72 465.396 li
2499.72 465.524 li
2500.12 467.379 2500.63 468.869 2501.26 469.996 cv
2501.89 471.122 2502.73 472.142 2503.78 473.054 cv
2504.87 473.995 2506.11 474.722 2507.5 475.235 cv
2508.9 475.749 2510.43 476.005 2512.08 476.005 cv
2514.42 476.005 2516.69 475.563 2518.88 474.68 cv
2521.08 473.796 2522.86 472.469 2524.23 470.701 cv
2530.18 477.118 li
2528.67 479.256 2526.27 481.196 2522.99 482.936 cv
2519.71 484.675 2515.83 485.545 2511.35 485.545 cv
2507.79 485.545 2504.55 484.96 2501.64 483.791 cv
cp
f
2579.69 437.912 mo
2581.22 438.154 2582.45 438.418 2583.39 438.703 cv
2581.64 450.552 li
2580.07 450.183 2578.47 449.904 2576.83 449.718 cv
2575.19 449.533 2573.62 449.44 2572.14 449.44 cv
2570.6 449.44 2569.21 449.577 2567.97 449.847 cv
2566.73 450.119 2565.63 450.524 2564.66 451.066 cv
2563.49 451.693 2562.49 452.492 2561.66 453.462 cv
2560.83 454.432 2560.15 455.573 2559.61 456.884 cv
2559.61 484.689 li
2547.72 484.689 li
2547.72 438.404 li
2558.8 438.404 li
2559.27 444.949 li
2559.35 445.976 li
2561.23 443.352 2563.49 441.292 2566.11 439.794 cv
2568.73 438.297 2571.6 437.548 2574.71 437.548 cv
2576.51 437.548 2578.17 437.67 2579.69 437.912 cv
cp
f
2605.19 467.514 mo
2605.51 469.182 2606.05 470.63 2606.79 471.856 cv
2607.53 473.111 2608.49 474.095 2609.66 474.808 cv
2610.83 475.521 2612.25 475.877 2613.94 475.877 cv
2615.99 475.877 2617.69 475.435 2619.05 474.551 cv
2620.4 473.667 2621.48 472.455 2622.28 470.915 cv
2622.28 452.178 li
2621.48 450.61 2620.41 449.391 2619.07 448.521 cv
2617.73 447.651 2616.05 447.216 2614.02 447.216 cv
2612.34 447.216 2610.9 447.58 2609.72 448.307 cv
2608.54 449.034 2607.58 450.025 2606.83 451.28 cv
2606.09 452.563 2605.55 454.054 2605.21 455.75 cv
2604.87 457.447 2604.7 459.266 2604.7 461.205 cv
2604.7 462.103 li
2604.7 464.042 2604.86 465.845 2605.19 467.514 cv
cp
2594.02 451.58 mo
2594.83 448.67 2596.02 446.175 2597.59 444.094 cv
2599.16 442.012 2601.07 440.401 2603.3 439.26 cv
2605.54 438.119 2608.1 437.548 2610.98 437.548 cv
2613.41 437.548 2615.54 437.984 2617.38 438.853 cv
2619.22 439.723 2620.85 440.957 2622.28 442.553 cv
2622.28 418.982 li
2634.21 418.982 li
2634.21 484.689 li
2623.47 484.689 li
2622.88 479.855 li
2621.42 481.652 2619.71 483.049 2617.74 484.048 cv
2615.77 485.045 2613.49 485.545 2610.9 485.545 cv
2608.07 485.545 2605.54 484.953 2603.3 483.77 cv
2601.07 482.587 2599.18 480.954 2597.64 478.871 cv
2596.07 476.79 2594.87 474.315 2594.04 471.449 cv
2593.22 468.583 2592.8 465.468 2592.8 462.103 cv
2592.8 461.205 li
2592.8 457.697 2593.21 454.488 2594.02 451.58 cv
cp
f
2657.44 467.471 mo
2657.81 469.168 2658.39 470.644 2659.19 471.898 cv
2659.99 473.182 2661.03 474.194 2662.29 474.936 cv
2663.56 475.678 2665.1 476.048 2666.89 476.048 cv
2668.63 476.048 2670.13 475.678 2671.38 474.936 cv
2672.64 474.194 2673.67 473.182 2674.47 471.898 cv
2675.24 470.644 2675.8 469.168 2676.18 467.471 cv
2676.55 465.775 2676.73 463.957 2676.73 462.017 cv
2676.73 461.119 li
2676.73 459.237 2676.55 457.455 2676.18 455.771 cv
2675.8 454.089 2675.24 452.606 2674.47 451.323 cv
2673.67 450.039 2672.64 449.027 2671.38 448.285 cv
2670.13 447.544 2668.6 447.173 2666.81 447.173 cv
2665.04 447.173 2663.53 447.544 2662.27 448.285 cv
2661.02 449.027 2659.99 450.039 2659.19 451.323 cv
2658.39 452.606 2657.81 454.089 2657.44 455.771 cv
2657.07 457.455 2656.88 459.237 2656.88 461.119 cv
2656.88 462.017 li
2656.88 463.957 2657.07 465.775 2657.44 467.471 cv
cp
2646.45 451.772 mo
2647.41 448.906 2648.84 446.417 2650.72 444.307 cv
2652.58 442.197 2654.85 440.542 2657.55 439.345 cv
2660.24 438.147 2663.33 437.548 2666.81 437.548 cv
2670.29 437.548 2673.38 438.147 2676.09 439.345 cv
2678.8 440.542 2681.1 442.197 2682.98 444.307 cv
2684.83 446.417 2686.24 448.906 2687.21 451.772 cv
2688.18 454.638 2688.67 457.754 2688.67 461.119 cv
2688.67 462.017 li
2688.67 465.412 2688.18 468.541 2687.21 471.407 cv
2686.24 474.273 2684.83 476.761 2682.98 478.871 cv
2681.12 480.983 2678.84 482.629 2676.13 483.812 cv
2673.42 484.996 2670.34 485.587 2666.89 485.587 cv
2663.41 485.587 2660.31 484.996 2657.59 483.812 cv
2654.87 482.629 2652.58 480.983 2650.72 478.871 cv
2648.84 476.761 2647.41 474.273 2646.45 471.407 cv
2645.48 468.541 2644.99 465.412 2644.99 462.017 cv
2644.99 461.119 li
2644.99 457.754 2645.48 454.638 2646.45 451.772 cv
cp
f
2710.5 467.514 mo
2710.89 469.182 2711.48 470.63 2712.28 471.856 cv
2713.08 473.111 2714.09 474.095 2715.32 474.808 cv
2716.54 475.521 2718 475.877 2719.68 475.877 cv
2720.71 475.877 2721.64 475.777 2722.48 475.578 cv
2723.32 475.379 2724.09 475.093 2724.77 474.722 cv
2725.48 474.324 2726.11 473.838 2726.65 473.268 cv
2727.19 472.697 2727.67 472.056 2728.07 471.343 cv
2728.07 451.75 li
2727.64 450.953 2727.12 450.253 2726.53 449.654 cv
2725.93 449.055 2725.24 448.571 2724.47 448.2 cv
2723.82 447.887 2723.09 447.644 2722.31 447.473 cv
2721.53 447.301 2720.68 447.216 2719.77 447.216 cv
2718.08 447.216 2716.63 447.58 2715.4 448.307 cv
2714.18 449.034 2713.16 450.025 2712.37 451.28 cv
2711.54 452.563 2710.92 454.054 2710.53 455.75 cv
2710.13 457.447 2709.93 459.266 2709.93 461.205 cv
2709.93 462.103 li
2709.93 464.042 2710.12 465.845 2710.5 467.514 cv
cp
2699.3 451.58 mo
2700.17 448.67 2701.42 446.175 2703.04 444.094 cv
2704.67 442.012 2706.63 440.401 2708.94 439.26 cv
2711.25 438.119 2713.86 437.548 2716.77 437.548 cv
2718.34 437.548 2719.77 437.698 2721.07 437.997 cv
2722.37 438.297 2723.54 438.746 2724.6 439.345 cv
2725.4 439.773 2726.14 440.28 2726.82 440.863 cv
2727.51 441.449 2728.14 442.098 2728.71 442.81 cv
2729.18 438.404 li
2740 438.404 li
2740 483.192 li
2740 486.329 2739.47 489.124 2738.4 491.577 cv
2737.33 494.029 2735.84 496.096 2733.93 497.779 cv
2731.99 499.462 2729.67 500.738 2726.97 501.607 cv
2724.28 502.478 2721.31 502.913 2718.06 502.913 cv
2716.66 502.913 2715.16 502.77 2713.56 502.485 cv
2711.97 502.2 2710.38 501.758 2708.82 501.159 cv
2707.25 500.56 2705.76 499.796 2704.37 498.87 cv
2702.97 497.943 2701.77 496.838 2700.77 495.555 cv
2706.12 488.325 li
2706.89 489.209 2707.72 489.986 2708.6 490.657 cv
2709.48 491.326 2710.41 491.876 2711.38 492.304 cv
2712.32 492.731 2713.3 493.053 2714.31 493.266 cv
2715.32 493.48 2716.37 493.587 2717.46 493.587 cv
2719.2 493.587 2720.74 493.345 2722.1 492.859 cv
2723.45 492.375 2724.58 491.662 2725.5 490.721 cv
2726.33 489.865 2726.96 488.81 2727.4 487.556 cv
2727.84 486.3 2728.07 484.888 2728.07 483.32 cv
2728.07 480.668 li
2727.49 481.295 2726.9 481.866 2726.27 482.379 cv
2725.64 482.893 2724.97 483.349 2724.26 483.748 cv
2723.2 484.319 2722.04 484.76 2720.77 485.074 cv
2719.5 485.388 2718.14 485.545 2716.69 485.545 cv
2713.81 485.545 2711.22 484.953 2708.92 483.77 cv
2706.63 482.587 2704.67 480.954 2703.04 478.871 cv
2701.42 476.79 2700.17 474.315 2699.3 471.449 cv
2698.43 468.583 2697.99 465.468 2697.99 462.103 cv
2697.99 461.205 li
2697.99 457.697 2698.43 454.488 2699.3 451.58 cv
cp
f
2342.32 554.56 mo
2342.65 556.228 2343.18 557.676 2343.92 558.901 cv
2344.66 560.156 2345.62 561.141 2346.79 561.854 cv
2347.96 562.566 2349.38 562.923 2351.07 562.923 cv
2353.12 562.923 2354.82 562.48 2356.18 561.597 cv
2357.53 560.713 2358.61 559.501 2359.41 557.961 cv
2359.41 539.224 li
2358.61 537.656 2357.54 536.437 2356.2 535.566 cv
2354.86 534.696 2353.18 534.262 2351.15 534.262 cv
2349.47 534.262 2348.04 534.625 2346.85 535.353 cv
2345.67 536.08 2344.71 537.071 2343.97 538.325 cv
2343.22 539.608 2342.68 541.1 2342.34 542.796 cv
2342 544.493 2341.83 546.312 2341.83 548.25 cv
2341.83 549.148 li
2341.83 551.088 2341.99 552.891 2342.32 554.56 cv
cp
2331.15 538.625 mo
2331.97 535.716 2333.16 533.221 2334.73 531.14 cv
2336.29 529.058 2338.2 527.446 2340.44 526.306 cv
2342.67 525.165 2345.23 524.594 2348.12 524.594 cv
2350.54 524.594 2352.67 525.029 2354.51 525.898 cv
2356.35 526.769 2357.98 528.002 2359.41 529.599 cv
2359.41 506.028 li
2371.34 506.028 li
2371.34 571.735 li
2360.61 571.735 li
2360.01 566.901 li
2358.55 568.698 2356.84 570.095 2354.87 571.094 cv
2352.91 572.091 2350.62 572.591 2348.03 572.591 cv
2345.21 572.591 2342.67 571.998 2340.44 570.815 cv
2338.2 569.633 2336.31 568 2334.77 565.917 cv
2333.2 563.836 2332 561.361 2331.17 558.495 cv
2330.35 555.629 2329.93 552.515 2329.93 549.148 cv
2329.93 548.25 li
2329.93 544.742 2330.34 541.534 2331.15 538.625 cv
cp
f
2401.12 534.925 mo
2400 535.396 2399.03 536.073 2398.21 536.957 cv
2397.35 537.841 2396.64 538.896 2396.07 540.123 cv
2395.5 541.349 2395.07 542.718 2394.79 544.229 cv
2414.29 544.229 li
2414.29 543.288 li
2414.29 542.033 2414.06 540.85 2413.61 539.737 cv
2413.15 538.625 2412.52 537.656 2411.73 536.828 cv
2410.93 536.03 2409.95 535.396 2408.79 534.925 cv
2407.64 534.454 2406.31 534.219 2404.79 534.219 cv
2403.45 534.219 2402.23 534.454 2401.12 534.925 cv
cp
2396.5 570.837 mo
2393.59 569.668 2391.09 568.071 2389.01 566.045 cv
2386.93 564.05 2385.32 561.69 2384.2 558.966 cv
2383.07 556.243 2382.51 553.326 2382.51 550.218 cv
2382.51 548.507 li
2382.51 544.971 2383.06 541.741 2384.18 538.817 cv
2385.29 535.895 2386.84 533.378 2388.84 531.268 cv
2390.83 529.157 2393.2 527.518 2395.94 526.348 cv
2398.68 525.179 2401.66 524.594 2404.88 524.594 cv
2408.22 524.594 2411.19 525.144 2413.8 526.241 cv
2416.41 527.339 2418.63 528.887 2420.45 530.883 cv
2422.25 532.879 2423.62 535.282 2424.56 538.091 cv
2425.5 540.899 2425.97 544.001 2425.97 547.395 cv
2425.97 552.442 li
2394.57 552.442 li
2394.57 552.57 li
2394.97 554.425 2395.48 555.914 2396.11 557.041 cv
2396.74 558.168 2397.58 559.188 2398.64 560.1 cv
2399.72 561.04 2400.96 561.768 2402.36 562.281 cv
2403.75 562.794 2405.28 563.051 2406.93 563.051 cv
2409.27 563.051 2411.54 562.609 2413.74 561.726 cv
2415.93 560.842 2417.71 559.515 2419.08 557.747 cv
2425.03 564.163 li
2423.52 566.302 2421.12 568.242 2417.84 569.981 cv
2414.56 571.721 2410.68 572.591 2406.21 572.591 cv
2402.64 572.591 2399.41 572.006 2396.5 570.837 cv
cp
f
2433.37 525.449 mo
2445.78 525.449 li
2455.96 558.089 li
2456.6 561.34 li
2457.24 558.089 li
2467.38 525.449 li
2479.78 525.449 li
2462.2 571.735 li
2451.04 571.735 li
2433.37 525.449 li
cp
f
2518.26 557.147 mo
2517.93 556.606 2517.36 556.093 2516.53 555.608 cv
2515.67 555.151 2514.55 554.725 2513.15 554.324 cv
2511.75 553.926 2509.99 553.526 2507.85 553.127 cv
2505.14 552.586 2502.66 551.908 2500.43 551.095 cv
2498.19 550.282 2496.27 549.291 2494.67 548.122 cv
2493.07 546.981 2491.83 545.655 2490.93 544.144 cv
2490.03 542.632 2489.58 540.893 2489.58 538.925 cv
2489.58 537.015 2490.04 535.189 2490.95 533.449 cv
2491.86 531.709 2493.17 530.185 2494.89 528.871 cv
2496.6 527.561 2498.68 526.52 2501.13 525.749 cv
2503.58 524.979 2506.35 524.594 2509.43 524.594 cv
2512.65 524.594 2515.55 524.973 2518.11 525.728 cv
2520.68 526.483 2522.86 527.518 2524.66 528.829 cv
2526.43 530.17 2527.78 531.753 2528.72 533.577 cv
2529.66 535.402 2530.13 537.385 2530.13 539.523 cv
2518.24 539.523 li
2518.24 538.754 2518.11 538.033 2517.86 537.363 cv
2517.6 536.693 2517.21 536.087 2516.7 535.545 cv
2515.99 534.832 2515.03 534.262 2513.81 533.834 cv
2512.6 533.406 2511.14 533.192 2509.43 533.192 cv
2507.97 533.192 2506.71 533.335 2505.62 533.62 cv
2504.54 533.905 2503.65 534.305 2502.97 534.817 cv
2502.34 535.274 2501.86 535.809 2501.54 536.422 cv
2501.21 537.036 2501.04 537.684 2501.04 538.369 cv
2501.04 539.053 2501.19 539.688 2501.47 540.271 cv
2501.76 540.857 2502.27 541.378 2503.01 541.833 cv
2503.72 542.318 2504.71 542.753 2505.96 543.138 cv
2507.22 543.522 2508.82 543.858 2510.76 544.144 cv
2513.55 544.6 2516.15 545.185 2518.54 545.897 cv
2520.94 546.61 2523 547.522 2524.74 548.635 cv
2526.48 549.776 2527.85 551.152 2528.83 552.763 cv
2529.81 554.375 2530.31 556.292 2530.31 558.517 cv
2530.31 560.57 2529.81 562.46 2528.83 564.185 cv
2527.85 565.91 2526.46 567.4 2524.66 568.655 cv
2522.83 569.91 2520.64 570.887 2518.07 571.585 cv
2515.5 572.283 2512.64 572.633 2509.47 572.633 cv
2505.99 572.633 2502.92 572.177 2500.25 571.265 cv
2497.59 570.353 2495.36 569.154 2493.56 567.671 cv
2491.76 566.217 2490.4 564.556 2489.47 562.688 cv
2488.55 560.82 2488.08 558.944 2488.08 557.062 cv
2499.42 557.062 li
2499.5 558.317 2499.85 559.394 2500.45 560.292 cv
2501.04 561.19 2501.81 561.91 2502.76 562.452 cv
2503.7 563.022 2504.77 563.436 2505.99 563.693 cv
2507.2 563.95 2508.45 564.078 2509.73 564.078 cv
2511.27 564.078 2512.62 563.942 2513.77 563.672 cv
2514.93 563.4 2515.87 563.037 2516.62 562.581 cv
2517.33 562.125 2517.86 561.597 2518.22 560.998 cv
2518.58 560.398 2518.75 559.743 2518.75 559.03 cv
2518.75 558.317 2518.59 557.689 2518.26 557.147 cv
cp
f
2541.77 581.018 mo
2541.77 571.735 li
2580.78 571.735 li
2580.78 581.018 li
2541.77 581.018 li
cp
f
2213.34 403.406 mo
2104.97 403.406 li
2104.97 558.995 li
2077.6 558.995 li
2077.6 403.406 li
2040 403.406 li
2040 562.194 li
2040 581.192 2055.4 596.594 2074.4 596.594 cv
2142.55 596.594 li
2142.55 436.311 li
2153.88 423.929 2167.6 417.603 2181.89 417.285 cv
2174.48 442.593 li
2210.51 442.593 2231.94 462.413 2229.11 492.913 cv
2267.7 502.823 li
2267.7 533.143 2249.92 556.772 2205.25 556.772 cv
2179.99 556.772 2167.06 570.515 2167.06 596.594 cv
2213.34 596.594 li
2255.21 596.594 2289.13 562.646 2289.13 520.807 cv
2289.13 479.171 li
2289.13 437.332 2255.21 403.406 2213.34 403.406 cv
cp
f
2208.7 480.463 mo
2208.7 475.701 2204.84 471.846 2200.08 471.846 cv
2195.32 471.846 2191.46 475.701 2191.46 480.463 cv
2191.46 485.226 2195.32 489.081 2200.08 489.081 cv
2204.84 489.081 2208.7 485.226 2208.7 480.463 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 23.0.5
%%For: (kholiq kurniawan) ()
%%Title: (underdogdevs.eps)
%%CreationDate: 11/4/2021 6:01 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6H`pdHEZP"k!.BXoO+E_S%(#i=]6is7JFam(kBc.(aA*]lJO!0+Qn_#:'P1qFVn]XjWp7:l+Z6%89H4/o:En,gcL1Yrmco,"
%>5`)`G5(^"2da4Do@pmds6H"1WGOT/8DCT/Pc\g^gS^\Afq85@=20%VocH<]iU)PA^3ob=rNG+lIIZmoYOCA_If&R!?f'T<meN?A
%?TnFkrT<q#It.:jp"Ou,\U4;Q`BRLpgV7Eo5C<)"jg2Gb^3oqZAq.*`=?^BX^\QSefa7.(jo+ecpsMR&]mTk:DT'iFle_[,^]2(3
%CRY#iYI!D&5O<fq=o#sI1AbKtWO@9IZbQC^bMU&1qYe%hmpEbVo07\a1Yr&LXt,"qnuLsMKjDlneil=)?f!oXr.jIm]RI%g\iGeV
%+5d+r#,h72DZ8oO8A8]:rFTPL]+b5.>8g-GT3ilAG9$>8:\Zs-Pae]=r;,"U\45$MqfYo-rAo:XoYC\Rq&+)`0DM_XIehO[kO2c`
%2qtc(BfEfR5Na\>Y]UNgbdlg_\_d6nN:`q#eOJt&qJLMK`fiO_n7*TRr9%-7s5fS+s68Y:04)Bark<gTrj,]+TCj^i&,u-,r8sL#
%0Al`QRof(Gh<gG$ou=2lIe!!:*IjU;g$@hfrmRY5Da36bT>19jbP*o,hnK'oSajmmZ**Y)^A7=QTE"=*7V;4Lr7+k%hu*0%s2nQR
%-aDWnC2Pq/E[cG)erA7CZ]41W]&/HqlHM:Gc@`IAq)^Y&f/@%:lJ8Mu^3]BDHWGK7IOG*c5C`FmMdn0igDp'J:\&%drh&_qhlo9C
%qtDc$`"SsEq>IKlP@An0X3YbLVf0;ZJ,:O<ibNqTZgn%7-HbY`^\-J*?hc]E`A_0"ZV^/eIsGf=?G4135Q0ZXk]c(Y?bcT[Iei0q
%hL>(H?bH2i\"A-?ZeI.irr("Z]<-91DtMeVhu&F?j5261?[_V=5LA8!Qg'(]"Hkrso?T's^]!G>@NG2KcM6_Wcegj7GJddh'E7*o
%J%"5s\&UO)M$%,!s4d!a:@$Z<?G:[1Zga>PkPm[MS::-:0(kR7hL'8Lb+?@ps"A<JrKD[.Mq>/ITb;_Lm`EZPp$rWan[!^kq>S>t
%5!Gl;J+-V@X$+ncG;cG8\G<2?s.AugVgtYYq<N7N?eF<4rho\eoCr8ubJ_R_?[TOnXM,aHL5qMb]=cAbkHA7-qX(oX?iB#c(H6R,
%^A7UIDuTV#gXkcX+8PlHdeS+b'j?'QMgkB30E;%=lW7GC\Lqrhr7^$&Wu%sHIeLCWhnT),!u_jQh4)0*U\FB=;tpBS+2Duqg3g*9
%s5/12e`pXGZ=!T8]#nY=pgu^5NU*e!F^4ioi)QM8T76=Q-L\G-]\e([BE.PXoZLUUqYNK2;=U+TiRJmR'lH54k10?qa4u(>j]=-#
%Da+'=k?kp`b_[Q/4&4Hm[l*QcB)U^*T72r@mbXJcZp0'7r/4Xb,l[AsB7KO8c1<S_BDpCM2_!F:4t<ue3T&V?n`_ENpZX(*c_mCO
%aZn\^-XAokoV6p&N'H7HVk<lWhTa\B)L7Rp7NZ-qNJI%?DJ&Y*=_F6$*-9E[Gs<D5ZeOk*hj3#C]AN>:EI3%ZGC+i:E4=Zb]5h!A
%p:GcdB&)4T]=khg]>&^&HZm0[kPK:,n(W9*+8>C+pAXJ$Iie$M5&Bpa&*9KK[()T<&'pj<s*OW*n8E^BluUMQ--,aaqfI;@Zhgcm
%PO5\>IJ3<L55.ikTAG%najX[jahN&s2#G&ZVu!dQ-U$9,m">oGF).EId,T"maF!man,15ue?f,GBcm<'O+,5A55(l?N;8*%qWMQR
%5&iNffEb&i)pdm$5)ah-3O`MP#jPp/YuGR.AK+dAFjO'6V>'qkhtG_nmsXZ,f3WdgRm"pCrF*Iumlp\\^YS':p:g!BgZr2>Co6f9
%O7fkC[/5$uDO]>,Xgc!O<a0:KV7<"*""@Acl?;c2T4B&B.JBb==HdR!c(,rg_*%Ou@@_6HkBhY!o#%AtjJVq..k-s9&jJ@@r`&dI
%/X2eJH^J7Qbe'i5J+i]o4&0sfihc#UcK(qd$K)0Td_4Xq=]7*UB7!PCT*k<JVn$``Zpga2K/:=\s85BZkg#-31ao-92_k>KCBZ;f
%]qq8`_mG^K:==(kS2R4lF43]Up[[?>K0-Vj3)jdoeDK^Ub\pS$GH\c4C&0o)ht?SDjk?j'W>GF45MLVS_gfriL=;0T7c2pMp^-S!
%b1CO\$2Aa]cC`V]-JI<EduX.X%rAFEqu1G^gm,WY(S*VFcelJ9io\)DF7d9<"hsD=eQ[)Mjs;?Qrk5X9oCDT14)JkMB%e+_2rjr5
%gLf]Yk%[*)fU0-&HSpF5Mu!+FT:BNc*h"B>jnWk]`gK$5D6YD3(6<)cfr*>'D5>c\B>(EkotEVlce?s5SZJ9Wg.c3Sdp9BbRN?ff
%H7mmg(=R<[o\Jn`BDV)]riC%8%u]\kAf>]WVS"dGq9Yb*f&tk2lSL2?BA3&.=6XO)f^@MFl-<<*DEdR(dgoZsd^OV05'BEn>:uPj
%:ZH(p++'I$mX1N%R,,"&nRM7m<rMEb5'BD";g8oO'<g1,l"8,F(23=t2*2^qWQ+5+5A!>HR$GL!g[(,Z_2l:;#CE?Zp9r5QYg95>
%R#t6"Ej/0_m+>uCR#QVph!:#(/7tL/RZTAM<#K;Pi+$O9HHo3OHI%&\./`_$qd^dq(g%u%h`M7\:R")O>Iug]kgg0:@A_G$f??c8
%2NlPFB%G.(]Bsr$Tl+eH),o@MWb/,.Z-f.\\+sjogTcOF[n`K+KQT)iR[I\NC>&RX'/$q#9/#a\4&d6Od?1;UDZ+Xc551u$K7BJA
%n;6hi54N)u<QCQR'qOYN<cbA(]<C7aR41pKmbHMIg2"#4Q"r-2jf,r^]/"6Km@:^F[k[K(p^$o;L6cPm3OU\Sj?09dS)!@IDYVL2
%IB=$P/b?Hn!'Zgc:MBg,0S,QnH(@7s><^q&)q.=FqUC3`nDQ7NbF6\C_jn>^7a5>c?(6S]$0^oB9ZrhYdaO"b]B*S9^%]i)8,'C"
%L@JPtHtODUAs7:Xj4Aon)l)0-[ZBc:NbVM12QD[pk[Yq7_++%W8?Ok*@6?`@qRkY)T57&G=.=Wkkkao#5L`a^+%BS[jN!jUhFguB
%@B#"s^;6!fAbbU@rlCk>&I#?Bn':j!m[hW@=Ik2F]c=*tAq/L3F#D?kJe\GMm/[[n1Ti94>AW$hqD.EF`u8H'M6A`+#E*q^h0m.%
%HA,/0UUTm__tbNMc"X_6r4,Ronq#&&[Vskl7b/oSGs$"Y.dpkW<5-tpiHM`iB;B]]o?:p#O\^/LO#W!?[Zju8369s]NRnH[;n([!
%AeN]59um7Ok0Z.ors(E*.t=u7UV*$aOco,P8u&"SYff>:?bpl(lb#);pY"!pZ)?S%0nD5pp@dW4kZ"s,F6FM(PLeYL>WeVHgus)'
%X<5Gq[Z?2][LY\`:MI#j&%#[Qm:W%q/s&l>pa)B<Q"FlWEu$+hr=95d8E1eAgWC'XpEk5YWo;No_G9Ercu.QN0AY)HR^A&t>"+.R
%cpeu<@4ACd9%m&aKlU$aY+#-2H;[N4TnP/+1%gKa.Jg9/S<\8EJt[fMk':>SViNi4hm]GCralKk8)c9d)uH>$O2&32hm(.]*G+o=
%K<0MU`hM(m)TQ#DgldC$rKK4H`ZRaE`o-JD#idI&+>sSOL!_l=0F&RG\4W0L:cL>]%'=k4PMt)/maa4=Cuj/0\79$+q;g6<F)C?h
%e:).E^Dr_8f4MO6F2-KL3&oSsSGhO0fRdX,="Hnq(Sp1$&sf?J=HKa,XmfjP8?jFS;=\:T[PQN,\)7ndN^>f;Q5j_OSTY;j3n\Va
%[-R-ngYKIfKD"pUX?>fr\1k:C5FBK"4b`jAY<KSk5*O;+^/"<*]CapM9qQbNe^8l-oa%tHlG;P0=?QqD?G*uFUWpgV6!p?6]eA@7
%H=(i><:AUBIG19t:SV!\qUNf8oW7o?He7**C[\!I<tEdD31Co,9b-K!1G]4E&+m1(q<7&s4c[7:hF;ubO/($0N2Y(ICgsTShg]$@
%`=+ioq9(=!cnY1k\YfpcY>E3KVdd)_Uo,\o:<!(oEDMu(2D[G$T0DV@LJpu[7P<1hJ%2\V\'Fr+hR`T_M<OnLIAL*"+8+:8;ibef
%+Cg/+h_\"'V:Y.e9_GsmIobM+#G1Hqk3P*3dajetN&j&\_]oW\=?fV@\6csQK2.Lt^aM9r<79q&B$4-)jVUo5;:+=K4>aHEG;CXY
%A#ItX5sPe9W+QN-+V6MJ/0G(loT2)P#X)>j1@2AQSu6[Nmc`@5g(-ft^g>Z,-2\nojl*F@55jR&<XL'.[uARR`alf)XMqj#mgs@+
%=Ng)UM72&`q!MjVHqe^14O%;MlL.GhG_kFsH4XMJBt`1_<)O8YW>i`$%h+i\,%P/rheane\64:GX.T7RVnW!@p!q%;fr'[`*Aq\=
%koOJA#2mM.;-Ll@o(rA2?I'-EJNMR5@,YT[k@;:)YqAcJW(YTgc7=8qQfd6;\CM1'f@jJuO#Y`HMqtf:^tedKVT$$=2&srI>]]p,
%qqpT*RDIa9=Y9CHO"es'c7Zh*o^=rf0Cd5$jRS+2hQFBMj"Ndt[P.aBQd8D]9Ekh@a&F<?@[Z84B7;Cjn:O3=9os/qF(T*#><`%M
%mP,u[\`]PJ*e!h?9n2M7g-7Wbp;_4\O`6d-Pn%?5fs2b>K1ltlPA*^[>F8iaUFjG5FdtkZ@!tLWoRX,PI\PZDG*VHPO50,"l[6;'
%pM9/YWp0R(5]UaZ#i+0bGl%'#%2GAAE-1$0^l<lf9rO-OEodK)[9?oor.a9XAN73GK';FLmB'=ud+4H$7t+9fprQ(8"C2)15PepJ
%UA5nI7m?Y4+$3rP7n;oj*7-`OnWhBQh\(`*LLT[HTpQ,*0Hak;a3t=;0`AH"-ac/c#6*Zu(_Jre0a(_!mg?D;a=T2l/SIsl(*<oK
%dO4Zjl`KhB>c)l1o]_0=2)d2o[cT^)g2gnf2,Vb/X&?8;!o&fQ)Eb?KlbORM4+$nIRG0]F5Fb5%MsS+4kE4*HGVVB-T3"g;UtG*K
%H:=9^OYT_@m<lCfPA\>QDbB<3FPE%7njM9N7t\;Jgf2Kolu)+rOkN0iV=eiAq44!G6gs`OG3(_f)T@b4A)r6*m*r?`MqWX+L-Kj_
%c]=+Zq1F=/h_B6M4[W<.1!'+lcMAQu@K5kE)Dp@)Du!`=d(fQ_YN_+ZboM*n+m:fjLGQUd+I;gA>FQ`1iFCQ&+*XIZ/cNS9qo;e,
%?iGBek[D21^AjG[pc"Q%YRc;/G?d&NnZRVVkd(rjdKt1:KY><:/_tXK@qR'qlL&)/T!$DG1P"aPCS[TN.K=/IP`#]h*G+DR2JA/i
%BKN:Us-Wb)s,kW9jZWO+[e[Cr[XfI0`lH+h89J-Y?_@>]A%,uYiYXW;Z#b8NR\/"qs&RQ86mUZZVi@,g<")Le_$=1QP-$"SL?l4C
%_,^V<#ZVi+I8pNO2MdVaT715_AN'cN9dSS_U%Mdtf/$eGiP*.%s!_4PD^Se-,;=OaT6WQmRL'nIps%^Y2?,K[IMrkaNJX:I`:"][
%(O,fg;npCHreQ4+]po!m>k3pi1&h8HNhYEV&[luTs7t20K4.(GhUIQ(Z=\;CTBl_)[FX\q[X+.dHt%`-kZ2Wpcen^0rr#;nJk+sA
%J#Dc8fm`pm-N+`BgWcp>rpG8P2d^sT<klHOEN(qfc'ON@E4qaU]SP1!rT3hp+.$;0JVq=js2469pCFH6JEc1k]AMHBP39RT%sMsL
%^'8G8^R!2GS,W6>o,%F;09;neTDsXV(&o=,rbq_BT)@JoUU*)HZ2[GR[O:3H!7AGB60sa8I2eBXWc0`&0f"JX<KR6!T<h[7:H"\?
%2n_DC2S&aV5\f`(9t,Uh>2;GOdkX:@a[ZB(P_*.X?Ed]U:X\G9dQBQ]L,M9pGZ*"\-EoGYncYiFI$'nF2VZ[oRreO?UaPkF6#j4q
%.;?-[9KW,XluN%rcY^E7jiLQDnB76L?@/Pk,5c5.LANkp:3IHXUZ-VLq`Hgl.':R8oBZIeS"Q$!_'j_(;"F-u%>D#GH`_HnlVCC[
%0@'Qmfj4'c]"m1Abk@3T5?lm7bZ5@0PAd,I_q&f`qibinZG)grZQYU+R.?,I4,`Ere?IFO8RnrkUn[.;'%=chdtTZJPck=D^87pk
%>4%J0S_KBH[*)7Hdh4,>B#?nrT48AsWh"QP\eDid='WG`?L=:cf-O6KeK$g.H!&dX?(sVm?!Rg*EduN^Xb`:T%4Tb>BcEr)OR0>q
%V:htbg7G*Lmg'#*+).XK-0sM+0jaJh&@9:Jj=eV#n24I&F!Qu+*;9j2OEbZNnA*$VLm4KIaM.5Fen:.VS(HLR5O%=.;k1/f2r5an
%G<Dj!(VU;79J[T1]>BkVF*4ei@Y<l9bBr>$Ym"c:1ALoS63VOk*h*abDsH::L7NWIq`T7<ZPe\5*I-K:_;6EK>8N!<</GrS3tH0(
%b,ICKnkcWqRl,1=Rig:-R'#RPVf-f1OP&?dUm7@BiHUMEbU.GEY$b&Y\&,Dt2q&g^fEfBB[)'Kf;bZqdA^));X)hUlqP4+T@Y0.C
%T/W'](UQ!Si3s%BB=UUCffK_fh$265QO.4n!QLc=bf7`%G/\oIdV^^gB.l15-?R\opWWoW^=RVDBpu2latfsL1%mf/FmHEHZb*Wa
%+&<-50fpP.&RCd+MtrZX25i2b/tNbN1[E.<2\VumWaJ'+:J+KL@T![J#WA4("?&9ecB]l"j!iVZM0;TH%8qNhptkDF4:anF"aJ;%
%geo%N<U82+R_!;=06<M\[C`NkGN`(SbI3!2gc!Z55Fe]>N#biRB)4?mi_alfI7soC[U_UE]]9c.K@Ja%UmuK;'_IKh%sCa6!iS\<
%hq'qE@EN(X>.iOC7)[JhR-q97N>''_52\KMTl]Rod)A'RTPT2$*P0udZ($FT!Hkn:?IJLmf*JbbDCWe.=N?<,i@W_T[9K8m0&Y5c
%fAkpJW@<Rr_m#f%JEnWP#Ub5^gl,VP'5i2bVF;@-Q-h$G/M>@Rf>D1K;PiB87mS$CZjDQYD,7cDN(^dlMXP_]ohoHLRu8/.hX-;2
%ENnt`7F2I8]gF+!06gL'DGJ=_;EL5Id!XgIcDs=:5pr..Vr;.fp^N"en(kuCUgkaR$?e9`_dq+D@DgY!',<K"kAo+[J'IDhZhI1k
%JrMFi@k&QQ6bPi?g.ErVJpoV!*5g3`U-u=t^]:V,D&jPI/sjuA[K(JLF1t\!+$?u&@-&T+@,jqCWiS*NVl`I6s-U'/(RVS.Dp(%a
%<&Qgmh:SDL9sA%p`=YpVbFFs;`rqVF"^$q,p=>!%#rC,U(OKr<jgJl\aAs69KaLU?bW!BakaQI:iYV;*]30L[E;!`u9MC=]2(-N"
%CKR5<O#A&VXI4Z%(?QFV'Z<@\k^gRF\Ai[C(EZb@D"\Ap9co[\OD,b#JXbd[VFbVs9h8L=lCTe2lmr(spME]B<G+M^%JXOs;I<8)
%-"oZTV]an39@DGKcBR2$=u:W7gp+lWJaD9aAI#a8.D^p]"17L9@J4a;qJqcX:<dTC1Dk%f4b&>8NKXW`ajeRCB[Jrb=G]qL28pXm
%*[o"^2CV.h8]*O@TVG<?D8bmZQ.F@kq\e^+%KjiV"d:\$Y(uA=%([,deC%eYRt8TpW8J8VHnUqU($$n@oR3YCQUs8:DDr;RBSIOB
%^U?>;.JC+^23lOCk0i:\fJ$NA>LDsfh&=K_'C7\"K#25:o6%C+MKYj'O*5TNB`i)<C,`2m(_]`HZ5n7j<3;GbG]m<"1..mSkTL5/
%l+.i2f9K*s(;U-/.<d0\:/%$IR._)YK*T5[R&N.ujhWfsm`QW%'R+KeclXWN&VQh)KXNftMiQF"HbF3RR8/q!Z,\=P`bgNTkVQ%R
%fS"G*43#EkR/)-ac+PKGb\X<5(l(1F-!-dM9m]p16K\;:4'VUOEp6@6WL7@I$ku=UQm61PAq1cRU\foW$4&_bcG#c3d8:?/_$#UQ
%l6_j12)@1U/+RAMh+.NOCfXtrabt=EEVcQQF#B:@'t@)m];oh*2"OHHHpSd$HqfujZRdtH6_Vc)2&,>tRe^6L%6gL\J_"X:KKrVF
%q9;oY*G1$o`A0oj1h9*tXL,;cM)[c.6#pI@`#/Y?JX*u.?QTs4%NE'(qdgX#OS3LjY^0A<5cY=q%a>.4D_KK@'h7%p2_hR2W\0$6
%2_E1]K2im=l;IadiSMlI2!]MFDG$>k9?dKSS)Ir4H(_43Vt;ahjP3J?j.3M'SbLsFg:PCAerfl[XQ,)e1at'_.48dM>/;<u=JIVQ
%!r^M]%jAO>cCSuX*L/(p)1qqPYn`%GZ/2?,<N8+hA@SN#iuJW*%<5Q6LVQC"^/j/<*UZDNkrDW"l9^Ptc-8.ppAs[DeN1e-S;7@h
%Jnu+-KGFqE@N0FL9@Cp4gd<Va0euK#G-(`#F_6lRfJ=u.D`F'`L-Y^_j::gt;MLNi:@XH,jDCBnKEF_o"Tk&!*9*_l?h!`jG,=L6
%_en=UJ4S':Y_=O)]BmC%M5;IbfZ\oPZ)c*=W7f`%pT>>g_G!?k#,V:mdH@%l"U;S.=>hf>/#O_UbqMU((s6!J_n=0i4:o\eMM$F&
%-O=D"_H3+o/r.JRm5AWc82GQ&K&&n\$-K?,m'.L&f*U'hojPkIFW*,%m^%!P,0aUO@%2lh[_[35!pFcP!'P/0Uu7BKNJbeHKoKe^
%MuCg<F"N-C":nd)Ps]nMk0,&T(ki\\a3:&VcXYFo/XfjqA$`+8m!Gp\]k@V&3l;<[k0]-R)3$;.0jGMJ/P!;RK-"MQ1R8V&>%U)R
%dN,;Fh2AsuRB]RiKGGKnJF1]5+jKL)&Yd'%Kf>@2lhHKZ\+[%;75R]\!G0]je':]DVc.dc$3@`4b;ieOZohfD_Xa]uj4=E;Q*EI>
%)!YDHQFDK0LOb;1Z=LkDas+ZUE3"GcjdG3tY16OYddEraQeU(!G^'rX3?"J,dA$;^\OZ/.Ne?7ffP:$]$2D'FS(=HgoL:HL$9Q$<
%)dLafO1!#_pL0M'>94Y`8k$Yc91_ta";<'J$ngWG,@%"W@aWHM-;^sp=mg2o.VA`n3SaX>4TkjE0PHn5O!E_*MB>0tA,W&A_#&`%
%N!Dq#Z,$\PW6cgCipe2;E%iq>F0%uN+)8rl^m/G)'4-;7:4#u&*6!l1N#30C7P8u>ApWnelK@H*7kM4f%s3;t!Y(+!QAZr"fec2n
%(r!L7S4aZPL4L);a06]g8P[e^AB6:!Q&dXjDsGLk`JD9-_C:40`@.A^IZbJkrH(p5/Qa6kol6MG52L4p\a2lp/1O?/1"ZB$PAObZ
%Jk[HT>YH.$BJde,IP<=t-*nc(_C\^mI'0QER;HZ5<l]&2DN_W8$E!!I(i+jd0r][]"o?J21l[5mD\?6k\R:M2Y+KeIrGFP)g-Q4%
%$AmcMGS$6qPi/uBP1RHPdR&Vs_6N.5kTUhU&1g;\-=S*^fYEO%XmYbHXL&0e5hukc"P,B+#o5V8m/c6n7GBZ&Yh1W6M(fgAMQ(=Z
%+LFV]/F?'?]SM*-F<ng%cGLPp*/4]&Q\>*jp`S_WC0AS(0gf\<0I-A3Lg\dkGHUH_iOi94.<Vt2Mi#"jghu.RcG5rt0uBaE#s<Ud
%I;7EnVT.tVK#@p\!X-4Ba3mYa!:U3$PoW*u[CR(7#R$$L,>uU:H7">/\b+33O-X[fS!YPmF@1t%4X.V)nEM^mk??2nP<fbAGnE.m
%j,8=ek(LK9'Xk;(CSPn[%>ZqC`G'7P@0Lg&-YPo7&Z9,(fA6PgC.IpA%!G6!,)(lBGJ],/rdEG_S:fdS(D3"(*<C30)q<=r$\QZU
%'bV3+j?]Xn$m0Y^K!DZ(XN7X/X&;'I4IFK;:t\&e*;">5CT54h0]n%.9ojQD5-j.\Cg$mPQCG?9fF\IC1iXg.I`A8VFJk*"KOdg(
%Yg0Cp45q5NV88GXM-u=2T^9'_^o0<ukqoS595Kq,m_K!GZqSdO69!<FZl>V`i\d+3E&-V=ESe?B3fZp,*q.(Ng3r\jlu-q39F?K,
%mm(m`3tc0;0NS>WVWMV?=0q*jQtN2h6q>6*@gkkpY6i#ophe/cR#-MJ.G]C8:u'jqW!a:tQ^_.=c[4R&5fDaq+GF<mWTLcYW244A
%C:_tgO[+S85RM9jLRjEOSG^Oj*e'a)W>,jR8D@Hr(aGIr=I2A$XIDA?f4p8K&QAbje/3nDX>m]sI=_n-$lWsu=iG-1BLl.T%et\g
%:lUln@8dLOnhXJfl"ENKC0%/QGoBcq-D26sX!'S?=X\3D?e^+=EKafHi$K>WA*0H2iaH^*,HXJ;bT&Qg5rPh-Y3Zu`WSn2&;biWV
%ZVeUkel6hG08FLiUKV=?knrCl#*WRk;W.Tcm&>O3d1"J9.9s#"3;Z7h_/UWMA7nGrBs-LlP%XJ_%*UIK#`oq(U(*HB_eG!/)6h3=
%_=hApI4N&2[%_>'\MA/4C;C\D/mjX$2-k7K&WFN=@<*PUVT!@MI$9^ap#`hT)T9iXS!\2'Sr@@lkW$:">a<-$8<0_p"N&og98CVq
%h4QH]Xs"D9a#Oj<FN^k56@3d'#7\K`krplic0h9"R/^[\CLl!2%C55N5R%GGA1BQ=-'.Zc4r>lu)%.V+D9rX58m,^p9pm?SZ:/HN
%_tnt\YH\XX"A"rEUEoYP0Q$N7)fY?ZT[7J!au5jQ+i#eI0X5W2D-bi5Jq.!F_p0<n$hfU"a1h1kOqia[T%&5;/4!TUpNBfGFrtk-
%h$+MrdcAR[i4hCf*7W5SAGaKh5s%+FM"b:76=,`UW`GNrbQ&jQ!dfB'\QTO5<`_7`;..k[Z8Xb.6Qhk,A.W(6j02k_6M?Bk*V+"T
%r&#b9=&]l3F%@G8fL$hi*/GH&(h6+Z5XTS!mRJM)(iAjeTa;Qro:q]%K@[h@&)]cE1;XG0O<u`SN)cu0%aG@2J1"p>_8!T:<+Ne_
%5nb/n;<,4Sa*0LrlXb`##mQWk0@K!(d$auYJ?^*om]Wk9BK;*qM@a"L0X8"g'p7U']Qjggk!Qc5@r-dgL[5/lnXQJ!*[t+qn\-/^
%T!P=Q7*_t,>n"F,3mV4S8E%K_NuAI_!b%qBY_%B-*.fDi4`&L_#jt@q2SAjJRc:55pN4>?&.\3"Lk5n_924`O)I=Hg\BQ01,B_e5
%fcC.a@+Fh>-:_a%FO4_W!Q3<^J/HC(h4G@4ASsfVe8KMSVGH=G\6('5k![Dsc*l.)80r/=M4e.*R)W2<?^"@DYpiNPo*U]Y5/q*O
%W%_.dfB"oES_uqVYsKeQef;Dh"i-cb;94HWc&f@h6/MEVS"a7$bYp=#l\MVuEWIEe^]6?okpta[3://%\ARs+#f%lYL$\TM/$2E$
%n^XqciSq#Y+-8Wfb*\9"ONF%E=?pt4E'LkeC*rj\_(FN.NA+mEbH=5l9r*Xu&"%%&au*V703(^q<\lNujRb_<bI)@uf(4_:f0-m?
%-P2DIKPugi@?,%`eA2pqS5"HPH_RL,)AB<g0TR*-.g]Go<-aAe0_;F1^C;<+OC3X1"HTQZL"/QV0SEA8!V3iS&,$VNR$sVfi"E\#
%iY2)N]]12CE]UM0+S^NL(a^ugK0j3ZWAm;O>N\Z"Llgq=Q8>lMNMR1/Xj`W[(;f=/7_2C&^cc4=98/Z^f:fpiCeAQ^]LNdS8*oA*
%i\4/2=!<>1X+X3YS/Q"T'QM#l!\5,&7$8@s/&BA'=]6lqK!U/2P6/t][1#l.\4#"@*iiRIJ/Y*uKdI/*M)dX4+sXhD?<]_8]X?ea
%7V<'/H#66>Wh\3h^cfdZ/:uTc=-Jk=LD7oV"S1'tf-4N.SgBE<b?dV2'E24epu,X\OU/<*<g=[GM;1*Pe(\^p;p-N4SKl0djrK5u
%#DUS'ZAJS:hsg(Br"d,U4N/P'>,Nko!L!AkF#T;^%82Ad`?FmU?Y1u'VBPMgYTLSa;J&(9a&=]ZR!>!mc\VJ7\dcJr(9-2BiC#)S
%h9+2^Wj#PZ4=V/lLtKN".Pb&g>:jKqAbA'"@n&iO,o18o/oVQa#.Wj8ZaFq0-`c7(ob*gs$N?ES0cQ])8-0'aDMX68"lg;),_QV>
%-[[Hgfn>Ur&R_!gaDJag/5lhiqj8&(c!XZ3VDoiTh;CnWd@gQlHu^XYZP;^4^E^`/FGD'8Rt`cY*]Y7c#[5@ln:?,X%0Won.=`a2
%O:uO*M[2cXQBD*HLsI6-=c-ZWkU(Ub2C6hh/Kih\5;Oht:D3_**0e'Eq--d6%`jn[iX3mI%I)jV4hN\O#m>l<5rO!27+g!f.&k[5
%<sY;%L4M!Z$9WjT_+cBEUDX)PNpKF\[`'2]f"olr%6$`)r@TIkaEXJ-"?9Xg?7CDqNqAdoX?-RMZuL&PpB`'V2RsU6\RUHR(%6FJ
%5IK9@4E"kF13WpB.u%ls"f-fO2i1chVa)<!VZ/(##[d^SEj*[t9kFY9-4,Hc6@,\<.ljX4164a>$boWr6;T.YLp)+^gW[KCmkWH(
%>is6Fr@\t/^dP8WbtroIYBFl#8ri#,e#"b>n^-):LR=Q84.uiV>WVu^h8>DCk?RSh>DCN)A!p2Uiai*8[`Qd&'"PO'JUl-o$<B3h
%GM82#(c)@[&1"X%_/u6`cfR",%Y2Bm$)_D<a9sL$:.@%QD-@=/F%=q+aZ(Wp!O79Kd,cC(9`gh*1EOWj+kf@aB2q%;HlN-UD`&b#
%!E,Au%E;`km#r;I#[hfhp:1Ubecip*7E@ARh-f=eHGHH`Hq9#cE5MM4%:t+Ki6[r!>[YGVSK4%"QQHM,'<!H4E4@:9=$nYf&0qKg
%)<a?l`Yr:h2!+ffj(X@c7%eBmmARL=jo`!$9*L]tab_9-!AKZBq"1_c\[`cn%sNWWCXqf&?qV)c6s>bAcFq=a#I_/p[i!Og(pj>m
%]<>?;37F=J1!fHMF4)#:$0A]J!eB`]&/Nt5JhC1!Z6*bo'<DWmGGJjJOB'=\*hAmr&4;qEFh"R<M2^8#Qr)*;\H&IaHnqtGLk8[D
%93d<2knn(MVXLsjlU(ten3Fbh3!:bO]E&sddh>'&W\tCSj#i:PF#D=p@"L!gb7l8lC!7)U?3().E2nc/6E2,gmj`CVBj(O;.8!)a
%IffW^;)#..(gq3PEoete21-Uj^<'#RGj"E..Hgi7cS$I]6*GNWkQoC`%DWheA24oIa7+Mn%j@`m#q8q('/1toJV.o'"]ZpV0o^=Y
%?1g1eH:7gELIS@;q(XY;Di3n-fR7,e6tS:IacjUdb;\X2amBKuTRDU>#GaJ1iR6:>'(CI?GXUm^<bh?7?N=?$XQt@bo,g/Cs6eF,
%hqn:tmdBefMf6?-c.i!J+T?A?RDX2^:(W,A]WC,9&.>65Z#$Npc]f&/?oH&&0g*(@71@$F_#Z:_$miMmK.'nq2D=l7IdKZl&l4$G
%)h\%#.W_QX/>n77l2HCT9o`L]R,b]uToU2F0"9$1@(WGQm\?1T:)$FM6\4::FM1CSL0#5Y<08<=+aH(aaY?V:Kq%EdiA_rN/eL#>
%;9M\W.`B:$:r77F*b?HceL?SV?S-It`EP^i%eibo#5M(>JG_J/o?]/6,3Bes,SL'6j?OgJj-o]gitSHF=fsQVFEqL8mLTH>ars=4
%[=me;*DH(TNk+r<Q0tDt7<A0MJ6,Xqq42<+5967[H\'(5CmffC;\_H)gJD2&\ld)bGff(OR6^8IpgnM>)bV=94p<nHWk2:kL@us3
%*`@u;0,stfQ_sYW4:D^%.j'1GX;K3Uls2V@PXP$+clG\\1p1rpb6>nd6_&ijhjd[d1&uR=Lh0c@L>^kJ$EnVp[YAEOkS>m0cJ2t8
%Ad]Mihp*D<i`PGnF(JK:)2H,^PtZZAU)n$s040^M*"*kSAI6Cp1_1.nj*@lan%Oa-Zcuj%F5J8TC`P3!(pL6YnWj`.KGEV[2\^c'
%l9(mJ'bR&Fpugp`.0Q5Wkt:ZQ_m&'.I5GG#WFQht(b)Ck=N4*Js-o"!GWp/)SMgY7VHe:K;3ZuMFmJ"T(Q=BAS1s1eah"ChiGQQ\
%)-m>a[A/;/E&cH>#iG]DY*Ft5=DbIhH!&0]>(@i3aiSDBa6B&qpo4X>U:i@#VK[l]++`,=CjT$:NbNl#",Hqg"@#c]!.1CjpUh9V
%>SZlK!nDg$.2rV%OMd#:n3>I0`c-0Y<oRPO!qme`9XRe6T($o_]$<-sGr(FCN7^+kIjU0Q]313%lFi;f4`H3IU&Wl2N8mSS\Y.bK
%'b,+e1u$SiV((f_*>El,VS%(jkL.a74u76mG'[U&0FqVt,5EtZb00qO%@fq/Ph<-:ll2=MXC[$j!M)T5E+pNWs,,#^c"a'Si:<7c
%;*3q0?rPHmS>UQ&_f.LT_qBP]adNo/PG$Y?m=k?GlPfTTQsg=7D\3A-c%6FqN1JirDpukG;=JHB"r44^Pd5?#?u@i5gt2FR!le^p
%43sfY%?1sYmkff&4dC;lUV].BP>\]XGuT1S3`K\6;*\)GQ&DmgNLgA)8hp=,(M&-9C]GX.J>d,.#41St7&V(mKf,L4+4tQi;XH%N
%jP$9c\0*"-%WfM[f46(D%\M^qS1,tK+s">PicV`OMN>YG6>VOE9b;)N7bLA]->8PR8r,V*EqFTG<o1\)',5G"YY`4"/7,AEaU.71
%"S+H5_?F;&BP9'j,,PmscNSf,91j`.*'HV^9_#E(ojdM9C'#^u4<7mjXe]J:"jA2:&,EIV_+4iiQNLgY0hR&B0_!EkP9sf4?kOT1
%`.4\*/K4_L$m3idi5/Zs4HLa_nf2\C,J:6j/[YZI,@\^6!re2s5p.%h"i+*EmXc[r-?-^A[Q0-f&Na+@&i^MFSB<lu]R/TiL1!oF
%?UO>c$iQ.T%'XJs`D`?V<UjBf!mSM+-7/dJBh"ZK0#Q^Hj.HYREYP;JN3Ec`@J16CE@WTdfju4<%>aLP7W<\uJ$TI,Jm]QfG[X?5
%JcXb'";0a/a6;1'cJ>K[]`cOn*G-NL`u5/]+JM&fEh#<_Jc&o]+Y+n;VZUZT^[92&,P-IWlG*NFmaTWu`R@Jk(^gQrDJ<VQL_Z0\
%!u9+)PuoeG?0G:jJs$nKYU"u(V&.@-AS'chSRF@V4QCfL7)g14%oIVf[QNtu#]kP7]SDB['@S]:R"Wic.e83?*COI7iCFLoe6<@c
%JYs;U!&fFsgo,l]9*Q4EbRAg!Afe5\Dae/uAel!h)o2'N2/*8YFlFh*X,d'B@=l-NJGVp;?fiiRi.,ECpn09j(b6Ph_qD5T8X[:#
%Z<BE4Ke<8g;>#]X*.getfT7.CScgN(`Y1rmH!Rr^d<@1>$`Zd\mUbI>Q(!`YNcKOJDAIshZ">($[0Wn.7Zefp2t8<3>p<q.e#AnX
%Ill*3oEeFZ-cX.+aPJf:O3eel[0N*i<kKi+W>;'nX-c5^*iZ4Zq)Q&9!&k?_%h,4BlC0b8E^!"a`[730Us.?k02XDcZJ7nn$@ic7
%QV%NS;8JC$.]=b/%-]`T+"*ehThL?anu@Xa7/HTI_t'=(M:oO>`HCj%FIkgD_]`["AJf]*4GkS3GVUS;>\9l.Z,T%$O>W.#KisqK
%$5HY&,qBOH6l^dI.p6GKWs6:+fXEq*7O`B5]^M#8_.ArLGuQ70h4En!R38?*W2H\6`fqU=5r]X_H;QYd'IqJgA]PHg=6$>7;4,,1
%buic'it4gq!:JNQ5IJC\>,Kn]mp<'s!J)"7Ak'/<GZsG>U;NQPdkQ*l9p"?P8(PdlNgP9*4OuU?':Df%8Q7[>H-M9H!II53Z$G0*
%cgkB@?Q1'.WOji7D$\Z$!O>,<MdTUBH(uUAO*39;2!*fn(!C00EXcs;<NOUg"jL3r@Qso'=e3=%3-C+&>unLI<Qtu6_Qq/E/_"M)
%BQ*5"3'WQeE+s8ie9&Z<#S=5E$N_St+BX1P8?7c6H!8u-DuI0cQ!*E>4hc_PP.kNK9#dSt6j%7eO+e]J4B-<4$8mI\k&krS^JaV`
%LU$uENlrglJm.QOfLGf^"]u[>VBbkM@?_8Z:RCAk;(*$$ADC6728pR:gZE`%JsX'&;\\C"S,`^DYSacmQ`09,M'WDZBglTHj<7um
%N%RceYn1m(B?uf._"!t+d]@U#1nZJ+H<ggF"t"cKGJXE=<rfg_P;F?>Q,jk\%TCMF`fsJ.(+Hb)^6*DiAOo2=RT/1G-*!!ph2'BA
%00]HJ#]eoB-jUZ*9"sRecrFCs0(MsmEKt<5%<,jKl0)rDG01j;=\gu@n^[$TI\XRup_oHu=(t>:ICJ*W%<IaePGA=7D9t:_ZPDUP
%ZR:V7H65i,/e1Z=VW+XVB6O.0>af;`$6dom]A++[*R<t."mhq5.:GrgeVqQR<+XI1L&f#Q'KfQ[:%gf&<raP;jG"nFlqD^`e1dgj
%nJ_f&Zeg9QCi]l!'9e&%!LoY`+[Vp<&RpE9]iQk6gV)%!"C(gm"3)2]WKUgGP`2rX&29m2:@8_>:+m39D[,[H(kT*t@VmrAOfq0u
%#5&3/)oH4L0"*c(1t%R*g2rB:.Kj2]^C5[+rjJ)5emYo^CJcZ8;M,BITWk1[]JU;<5KJ]%"U@P+:a>[hS2c'!QuXE#Yd@SReK%tP
%ah/icI=<":cnm`.!a$Rt#M5faYF26i7_>Rce*n2t^MqTm6-Em]L%\&9&P\'9*J.-Ac!1US"\1]CY#Uc$Fk1=<j?;l5+`KM]B\ol/
%k,'!f%"S9hCaY=tP)e@b.Kj'4!(Ra9%;-_"q4&YKYK8$M]H%[dnN*r]:+42>`a.ua+u5qPTW?![d<M&$*c\lb%tV4U_TG+N,Tj)D
%?jQi%5gg#?)%e0lp=-STh%MfYJrs\,$k]k&oZ^L%2&XLuTK&0F18:tNXeo@8mK3jSkolL'5A'6R;M"7=1a"RDN;1["P3F9336slg
%jTZ+`9FM\gb)Mu'ib_p:Vb^Y(@hu3Y,?%tPA-T_6N]A3jA?Hf+:@8J#1[s[29[\C-f6t)[>!fG7Ns,P9`o.*_WuYP)Ufb]@8r)0;
%M--.5<@JRaH7R@[$<YZNWOfCXI`)Rec3_3l"[*k)i",#SD%OlNRc0c&JhW^p!a,T<TCC^K209kV+[ZQ_K!Zrbd`'?t&!5![&*Mt1
%0uXro1/X<`3_`\agA=&H\3NjX)Hh[-14kl(2%]n>`8pG&Q+:s"ig$7`<9=\Q?,GM/M(=JO:<5I-=W?W\`ZBn&e")$J-nZ]sST.DD
%HI*>oZ)k)Pj$&L/l4[QQ*2V3V5bR3sV]V&3e@f7Q`uKo.Y->LKKAO",'XJU@a7j[.RL!&.oS.m9=Uk?m`*]8DN+GJGZ$NB?TQ)"+
%gqb/IORmj]R4>^$&3oRB"@)J:pZfMK0.!dFWiRg%M5V()A$,-3b5PU)AT46>(<L9*GR.:j^`Df]7NL368?lp1pShIai@@uFK"P&:
%HS-()JdOaP_#'>UVc$LP1;p)Z<PGj@0I0.$0??s53@(sE2YZOYe52Y?Kci6kM3,W@:@B9i4(89T5*MJ>0$NK3>9%=C?$Qu1q8g0B
%7iFNKS*p=?L7&UqJ#ou)lcD?-@/LgJJ,Yq(?bLjdroFrg>73[G`t/*uo2fio^OQ.2mll6u&#;Dgo65,fq<IM#kKV>%Ie1&K%6o;4
%Hi+!ANZXHS,LD?sY:fIfR(WeL3sWtsF6;CA7a)35$_YO$Euu3#4C_aJa"@+TSbX*\/T<4Qia_cFUQ!0=%+j(5]P*AbK/&.*Aj$>(
%R=p>jHAq=&gYb36GFBF_c=8bq8\hPJcJ4'1\-qaf+7U?R>D]YjTK>Uo(DMm=4)R<N@JZS:Ne.1)[4JIj'T?o2M%Glf!`J235,aLf
%;Ngh+_Hg"LU>oFI@/%NZ>_@bkG`F9_oNVlpj'#D]GNCif%_-YMA&N:)DGi=3bu`U,bq\^\+r,-a@j^2N3`qCS#*MG8P8ke[P"Rtu
%N_uFl'L?8fL_%Se&]6?]!3(s1i4+UjFO;'!qu2E,R)1ioDI]2kX;aHBN2sA"5%6Ef8@VOqMqAlVbl[nsLlLBGM0.b$CE0"u7;KOt
%qtFPWhM238cCDoD'oM%O\@hMfe8-fWA"E>aiPWChEk]kPcFD16I5E9U<46*.N2'"gl&8I^2k8]kCrSW*bq<PH0Su'IFY;]<guf%p
%j'KDErQJg-4noUW`ob2n<"hC6du3lO1r^po*PtB&S7LLph[1!+Hr&cp@>m)qrYC.VoKiR+0SZt=Hi:fg4EdPhK>&2/)U<-&(ZXB2
%BjA`;!@EGo&_t@,'8D)EmU@f3Urg5f6#UY_#'VfR8LGZ.GO^9u?+>fLH6X)sf:6_^lW5\Ahhf#d(G;pt/oFK%j7OWB)q;jhF"l^(
%AhKYbF:$r9c"o)N3cQlUE<OQ>`5Rnb](gt&T^f6>^9UHJGo,UPNZ3X2S@FqUc9<k_(u;jo(/GI:#&Q*)/r3bQ'J0Y*>/,(n:R-G8
%@rZ`h6!-647WmZ?L(KP!k_]tF5YO>nMK'`_)/`NF/ecjIMD5Y"Ym,:dpc_#b:JA_@hK3OkW0i4Y7^;P!@l]7*I%_tn9.[`\?n#tl
%N5!,+gmeE,6;lSYZ5=k+TQn6t%?=mO4CGpY$Uo(,\6:R#U[B"$$AN#;ho$jf:_k661&t-oIUWBBb?4DTYUa,GT@o&me!7os-f1,^
%$u07ifJ.h-eASFEhK(@a"$Yi<5V&JYHsCoQX&gkV0/4m9]#kbDbTP0g5-D!*8/YA]*)f:W)e!Z-E>%;Y(Z4ltcO%J*?mK?%"dhLd
%'%\TSiX6iJEQ&f;`!CbBZ3M='Cp%@Wk!DO2[q_5e,0mnR"VpQ;A+#/"3i!Y:prN>tL`")Q!$I,Q(c31**2\GT(U3#F66)d>5sidP
%Ta:#[qU$_WpI@epF+A$[&E?Anr-)c3L0B$W9kXH6<eS\LV3mOm,\C!*,gtjp5gJH.W5pW?0(*/4[d.cB#DiRc#/p%*4P\`jG+N-t
%bJ?LR1UW*7p`LR]aY[It_)[JC4%\'=9>Gb;X.C2aOo>ScC_.(tetVY&7"XajR;NiFK35@0D:j4hdXDAQE'pEtKr51-0XC,N&qXj8
%7)lhUK2p7E`!pZ/)M[&MF#/&qTjsHNELL>6*h@:Z)/c0o#``>hlsRC0`Ge0Z<Gklm@0h9eURo>H.0&3AL/t9TEadU6jC`UQ@DE1(
%5D!&UoJGJ9\hFL:",\%@@U[&&B?H-6\GEoR(Kt5k/[i5mKn4Ph)H!L^YQ.%9?T<a*@Yo-WTG49hJ@fqn@;pa;Eh<YlJX\/I01')&
%I^Z][K^h4MEhsGp;bVJQ-Cbf]$nbtq.IG8'>`-P0'+#nCD(9,e#a_9pEhO(7p+D8mSV)/'Z+sfRhT\6nb?[)\Oo<@4aT*<SHPd1.
%)b35_Nu3OeoTF5_"N"7JeQ$K'fSWr",PGME:UGS4#K(]:qS=2b.A(p_%L/h:mg!nfpGbB^K/]gF$YqHI/qgoi1`6!^/0p-1\C+Zm
%:^2RI([K(M%,Osr\-R_baI98Z_8tVQIF/4n%]D"_i9X"ObJK1=.QTGcJpC27#?1++SFfDfgngb]:GAgFi4K4fE.#F)"G\[%Ju>=F
%:B(_$<VYonMI7-ccE_,:&R?s1Y7o6i^7Y4P6Q#I2.!!1M(H\i3\I1FeA1"o@DICg#^n;!Ki/J5SB((;a>Zdqt"pPQke`&k(]Fj:,
%`g%GZo2T&Hc40[Z>ZU4!:(FqALcCYM3A;pl$$6Jk@+\na05=mLVH^Yf"+sJaoLr!gCu^8]EUa+Z,;5*kJShi)7Kcp5kXV$##Zb>H
%%>In9XMB(W1gHcp?m@bB0EF"-2hjL;OTLHD/017rRre9,,r!1pAR$+(&Z#[X8e;%+e[)XrI)+)uRuNO<*AA6K^mfob(eb>hQAQk0
%"JSN!EWKh1_oo$0=nPL8"5s7L*L?#F#WR1^/U2f.mM7mJ6Vs8h7V<KE(iH:s%2N?aC*C/'7L)m*iLL>]E!V't(c[g9d\6a(>9S@8
%#n%8G'S]<n!!B8%jV[p1pcYUtcMYGr@r+I2>J/6EfRJGP+GT/\KL`%[j?oI7(F0'Glm%[G;OI17RJ@Zm#rGHis$Gas0fh:B)aXjE
%Hm\ihZ!Rta1Z'S>htVXDr`qi<rbYaul<M!:O3QIt%Rrk?aj88F^Y7m^/DAu\]pNX+rW4c."dV1=rhe\sji.+Tj-VJ*hHt)qVN!Vh
%]Y>-o?lnCBO=2Um]YB:,P'_Yrq[8Vm46("bqtpiU?V5Q)(Y[bGJqQ4!J&U1-b\>5H&F';?eV3^`9^i*$M=q`;Pp$If?S^=.TJA]=
%GS#c6enKX(_smR:D&N>g/D#UK=(K(R*3?o&5[p+4op<EccB`hhL#q9)KYdN./D/P9_>;=bU*@:TrZY@=S=$Y^ia"!a'!/hd!_gG$
%=auj6,G`j]In;K?+H_leEq]P<8M?mS\:Us;62HLD;Q;??IsForHS;J8.0m1eYl5947BY?PrM>0Wr^-M*VLkp1m4Tc=+9q3d,cok4
%df,C_f>dkoIh<K.g"56^AUKUX__^[51Nf-fcMPfSOcj]J1M:c:m=k9N9GPND@.:866:o73Yl8*U1@:<M-N0Je$>uF+Q\Y6W;#]HB
%XJIlirZWE%%M$3[L:pPVifq3&'W(1LPeV;99+T&"R2j<[KYL&N,j3iFpjNg7eE1aW-9iJrZfli]+>s+Om<<(Gis"*h"JTFKY2@<k
%>cE0L`npPXoZR#7nP'Z[ORGH[/($#BRipTrqILHQO6L@#\YA<NL$3`d2UbfX&IDrTbuoMc*EMd"j;5*GDI,fBE!"$gS`6!CVd$bg
%r2.^VgOeCN_0M'AaB2qp'TM4Big4tNCtV,Eb;[bG[8["oA`5QaMI2,.HW^clr!noF(k*oQB&J=#="0fn(W3Fs1c$e>?Y4;ng2LKq
%`Egsd$&2e&)IXd"L0m'"W)M"N^YGF_EJ^@`KuW<"EJe,;(Y0%e3IWEr'(6gT/0[Ts4#h[4@.rTsnI'&-"7M\/?&M^%r)1<^l-:9`
%6uN\<j;bqihk_cV/c5]Q%'Wc;8:H9U[-In;0+VQ$W0@.VTI.8>r'JQ=7e$<[lr,aUM)7c`b45o`;3Jcd9*&)e@/6XL>Q1.,I\Fs(
%?gKVag5'2*61^#93d')/jqgoV%70Rn!D-FGk*H-M\t=h.-+-ed7)(hr.kmOX(BRXM>_mj>M$9IpLji>AJkTg"Xm_`">_mj:S(_0a
%d4[C%ih@J^^HcoXkN4p`IYm_5hmY9\eX;bpkEk'd][&^TPUb'+Wa-ggMt..Z2JNg'?YFll&^SUD&50lWSR;[*c0muK?YFn&!,A)d
%cS&Uh7hV?T(R5'uiPP0oYqTP$o*^C.?dA79$0)+(T&6pKT5^6+Sr6R361YK>s.!BuGL69I6"Q#ZbqE.6jboZA%jhiDKbp=fU9fAe
%$(>3X<+TF`r8M:D$0";C$^eZW(H]kpL6qt$61^S7D^0S)q.5sjW$Oa1&[E)Ra(^!:]T[Bu9_1n+D7uV<Q,IT.7c+G_s2cR;Rb\+%
%5BqWG/s4oJq1[ZOQJ-V52%8VrjnY_eL0O0Fip6e]#L>%+>dc7I^J*SsE>OF!B62)gi;&Y2f.50#Y/^rpnGI<mLs2&p(Y0'DHoh=P
%8G/Z#-!5Va-d?@&pd.9+]j-DCU"hcX8KgWZp=Y)\GDGV>b*D')_Th=iLQ5et7i]9o*Q-#^;uCZ;6A:O>b1iKabE'Kkg!c5DGOI&U
%5[MM!%)#EkMk,RV61ui#a4[n+#,icj]\rLCmq6Oq-$*t]iN%$]p4CAO<D$n=hsRo%lQFSL#Ht=\4gY!>a>n\9k)#RH:>`>HT/382
%n?Vq!oGsE68fS<pS:Th>k<$<p3r")B?DR%Ac?F(C`YUPjm^jDAR;[9XE,bW)K7R!UB.@9Z]%40SI/,qU7HBA72\a2a`tq&NqOmAt
%GDqnsnO5j91r!Z9hnFAJe4G$""%P7#3.)SWcfn'\]=Tp4%)/*Y+=n!,h]<_$S-aR/bI,[%pj99@&Q3m?hn*Me$dS+PP_nRjWGJrX
%#+<<`$T=iYNU7Jo'>.gdDi;.BajnnA'DI*"XQOcgm3Ug*jh+@CMfc5t3#(T`EsngO8UJ#</IQO:fo,]X!GZSOm)=B`CkR.Im,cKB
%e'&,FGP;u-YEor>^d+ITH<KS=p#Kr&/;_8(F0aZ_,U]bO[<8HIou;17gR?hke-gR5`d`@tLNI"e*O,jlRAC^%1_l#H5uUN[E:c2f
%fS-#ce/r)fPJY=@R'/g&)[%?$Ibs$o^qn>)E'I"+S=UOM_pIBZG2B3#nfm7NlcP2K]QcKOT;d+&baEamQU<O^!tik0r0`jp3n[94
%o"q#?rW22Z,.(SOK,q&+O:!hHJ/D-3m9o%PUZ-C-VnGd?3Q6$!YX*dUb@:2\3BN6DV"W$TMhR1k3EUQ8N#'f#ZD_egIf@4+$]b\;
%_VjM:4`*7&p\Dt36+V%+d_<L!#:H]K$h5)r&BqU#^2WWqlQS<6+^bX.3-cr\\bDMUQR3VhhDojQ6c"32S<N[L,NXC-07QSh?:O4Q
%2D1N4PVVXpS@ja:Q+eYk)3lFDs-](;0c-3>_9#@$%%^dq][Nhm/sO"nFSbr%ah)rDW+8>ANP=A*P#n,^b0'6&U)+Bl'g(2^37LUb
%d$[+MOuIu:_8sg*8)2pSOdG#WN6bnmATRrj>;5V'3l5_0R?;]]Q-RIo!JrfPN4d3>(M?4oZW,m6O"CJZ00(dk^Cp)M@UGC'(3^!T
%O`Ol_]E\tgR?3c>8$(o?a=B$S2ARGhHBLJ@Kod)S.e$)`OV]lU,a)*rn'o?+(HPlqWgjZkaq+2^<YEGc7eRj[c=FQrVQf:&fm![s
%e`PR8["+f4,3+rM<5HF!niUAMM`T,L]5aFqGSLZu.?%>(D6[<7k]dubb3@'hMa.fcQ_<@ZY2=hjQ^&e@?HIG_NQ[`7qZq'^l)1\Y
%[0mKuA47f6`8u+pX:5s%maL/^_@(l7)5\+)kY>M('YHT;<]`,,G2KbV#^C^jJmBHL#iUkcr_1(bXZ2tlK7.s!J[qVr^.WXr\R3I&
%61@:&&guQ?"&s,SEUT&&WaD0<pXiD3`4J+k3Pi;=H]mnc\k=`7R!>%T`ssCuAcLK&WekTU6Fk:AX-'T,`a'@YVm-MOX/!<[I(R;u
%beE:aZ$R`=-,I"t)UXimZ0fC?7=$Q,G2X&"@kOoiHj<jR6F@1$%!O=CVHn)#Pf=p$"Yji,ZL";H'Y2^9fki,i>n">qi;iP"+kVLQ
%[sdf4!l!,e?So<DpV<c=Yj42:PNF(@D;&n"eAcBR>a]_37o,)TZ[^>JLNhsp\gXO$?MdEs$cWZomc(=Zc1_AO;I,LhJOoXSW='k9
%Bu-bV]/g8X*R"LEadH!BBQnuRSPU-5c0kM@0NgZ>:pb_t_1%%"S[0q0?2-o,\&"r"P$4Y;/nDQBrM/<!S\?mY;!A%a9R=B.PqJ0&
%Lt;lq0(@D1k^uDBphPQYc9/Z=e.*DQl*9hfdDbjicskC663%N5/@lG(%hd^W+T;b(/rCJ0a#]"DF>h+2d%)4C^+eap)aTG8*^OTq
%F:T5VU<^>(kYd:p*t5`;e>@LD#$hG\ZNe32U!$`i@8@&\/s^oTr.76o`NBke$Jj`QHW9UI:(.V<<\,BWHK!3s#6SHgcCrGB/GEOr
%%UJ1RCV=cPdQlj,*rW#<jI4Ll];AmC]-ABj7qU/>*d5&Vkg%g4hC3OYln':AUd9TT5<5S.!Pk*u'Y!jYkDV",S3@bVR)QV?kH\p1
%.Nh:Qh!)5Y6&DY@S/[e"FfpTG>!<s_ICkm%%J&:!_/s;8V$6=BLaiSe/o`ts)U*QE??9PjA\^"(rnSfMUPKM+Ka,MBp-D(5YnY]u
%WXG9[Ao[!369:bIG:m*-Op#t]T,ZpgF6B^p([bPJOi_h*gpnnG*cl>a17)$1ApY^'g>"1fmT^"tUKZH`[$AUeHRca_OTe*,W,iRK
%kK]_$/B.]Z9YC[R/oRc>`LNE,>DQ\4A\eFIm"IHd;GQo8+.K;LB?m?B_sFrgkL)7&:MuNPmtPQgk<ctr].iEr1W@$hFY;&XE$^,t
%QRZM+.s!<`<P5hLcG]eHneoZ^b''(rA^2Sf#J*-eF-V1"BlW;[28GQ)iQ``B$EG)83u7t0JAIeWPX=-.gpt@,+:K"?\J,`tj_iU)
%&ad`2Mk$AFG`-D9PfFN_\N$=/.K7/R$WI<tMSYh+e/rQ`-uf:B.46HJ:L4H@cIYpt1<<\Y`4<t&E1gHlF!5*U:Sp0TQY:jRF"Ym/
%N'(C5F34:`T/E!W+^ciWQua^,]lIQ,,nj0VaBEfn;Bs"SE9:E6A$sXN3B%P:?-?^&76,=0K1!6TE#3ae1Jc6*b+``a1$A,AS#ch]
%SQ)+lmD>A$W@mAX\Z%Eh6#u*m$K0lKQuaDscn:],Go5Fj1[">Qan]<T)BaRu(q=_j1NY?kYJHdA";gXa6gF$K3'Caj6&V4gShB-I
%Sr6i+K4aGRm+tOBk8o42Hg[%$HYs1JZs_4>Z$@M=9m'gU\ZE)k(DONmbc#5'K**SoiKQ3t$&s$FgmOh[APT<TJpC==E6q[/5Z7\B
%@WtS:bMU1P]^Y'H;@M#-G]T8oe>B;*[V)cn47VHrSoNd?6/GiT/Kls&2j[Id'AM^;6Rn'#-dK\4;@!JH/d/P<0#Y;^&fM_5\J4i<
%[=V4@^dS'f3L?og#,!d81@#nL9j%O/pO0J'bdlqP`N+SNQRiDJqo9&fPeBo`_OO7M6Pbm!VKd82i'j2piQ'3XY10un[obeH#V;S4
%>L^3J0L:/]cK,p88/]pf7/Sc**n7`^#f_$AkL(Pc:=bhSBsWs?-CAk2M^&VFM)fbd(NV31Wp*aAW[%&J8H3jAc@oAqbF*Dp?qPPr
%kOK23ZC[J*.:u?ZF0;InL3)U:clu*l?E&"&!b<?3W,hu>&P6$AbYf-(?+G"o($;P-mTc'5&j#-M\=<SIp+pnF4e?a$B95jk)rhQ9
%LiX*+EuAt='&PuV'ZQ2Nniq]uca#*bGFW>f<KWmhCG(QnH>,[6Mf:Dfh&"Al>qq:,RC`hl^)1pHlMn&@\L-[;a448maFe1EVop*c
%:$%cp(Z+)!DUVa%'i_`(?bKA!U.Q%u&Iu:c(+Q&'nQhrrnspSk>enKJ;;ajQ#cjZ13#H<p!R+hYcSW0D!j<Xr\VL9(@r^S(KE/tX
%(Q)H_cjP&Y'LOLe:MpOhL0T*rC"\1_QW1j\2hE+f+FBb5f%g?g9L%Q*k/K4d!QWmsEVBfdYB'e7i$:&OM&[=f+YZnfgD0oO:i,==
%\7OhmlXsC+Ql6ikL9ol[/&&,:;HtmaenmP/`%=E.Kggh+`-W_IL6mHVJG@WZ&Jn@+,(gFCk5h0&&`T+N/SM>8\-3f_A?k);22a5o
%(bnR5RjECB_QB=3F&CmO`&>eJ_M.SW<eE1?0&doETYX'jN>?3("[MgrOf7B[63n`J4+[PNN@%e24Ck^2gX?N4/ugh_F&%6YXp"MW
%c@640#):curY?'5bcQIr/.^57!b"BD$Y,?(aIbK1&8l':c)GVY#J4Yf]@T5Q=Ds=kQ]++"G8?.1]L<c;H^lO'J]l0L[iMM+Yt=-8
%KCBX1Z7JJtKC9S:89/"6]>Z;Y/FjW+6Bk'2&KX\"id,(;A;5U`oK!c</Q;PA?(#RRKOkfb[o#g>4L`Q0A'_\Abq6E1.!;fMY)6=/
%\Lh.-I3H-)nh?"$;Xap-f$nG2g`kG[Q$ZrL,pu3OMr9nJGQ7a(c544(0s:/W&>EVofPNq%JHD;`\&FVqPMIjl*)ULE"G5>C-<D7"
%1#&E*X?PXO,pi\<$E(98oa,5mZeFCj!#Kr)[=o16L>]EB.40Z>6"p]NnD;WZdPa("K$b@k_=?ND[eL32`.cPRY6;:KnCa,`Yn>:1
%Jm&L2mk^FbMOmoMVa;"9P?V?u[OA/m7(c@LZJ5IhqAu-@#bW8-[`F^$rCURXHm\K4d+I>>Lff8J(>htpF!7g5<Q3[M_m]CA&qt1t
%qK^"eMnFr!O?!>gU:hTF[2?DA6(I1T9h7c.b1s4A110>-[>6fYUq;`?:=e*rK=eRt(A4?'KeaV-&T_e&T?ndb9tm>_D_2/^9ip'&
%_&_1W@]^Xjbm.r7ekA9uRBmZ>'BHcLb$"oqK:nP-6gpU]4jhdelEf,X]*!/FX>YDke<R,d"rVYI(0@Wu?l)fpM%(L^eT1-'H4\VA
%?!0"lp6BTR$V`2sh=JQ_MfHo\+e5?o(n^ATUUJ7`$&[I'CNhJ^ZM:u\.mYc&++%Ae[.$5IG!$O%/aB";oU)3#qOlD.:><;WB*rN[
%XGO$?]Pu=$5p8!(kGC[ud^STZ]ObS)YftFGS/0M!OaW;KlVF#J.ORLX^bGcJgYU;VR*ZXi>+cTaKS#[OW2bH<(+HW<lBRbQN]dfP
%+JqSa3/lPKV/9OhGbLsfJslas3dJSQ`mF$_n@e/>L[WWrGaX/H(3rNf5_G2b`%68K'%/\Ak_u/k32rP_K4br^.\7qJfP!bf#>5?]
%HGaK:/m>LZ3*bgCU4j/:7SqK-ha,)HBYiF0`H`W$7H>F`7.AQt%Z#,2['i80;"MOj4,/X&Jq\BXY8Qu<h6W(W%U'#)VWp&fgnBsO
%YZ&ogpBq(?#_RZ94&p#,bB@NQ\^8Y(29N^l$V-BM''-CbqjDdhKL%cU4_tkWZe_#t0#Y*3buV*s._seLVZcC'GGstaFgh0b`^)Z?
%*Kh'MZP_srNK,DC=Bi>NW&)^/-YEt,=[;Y3>BNfg,'m=tI2#$gr%:_nm=\Gmd^nqm%VP>=]%Q$]/d:(tn1DR3CpV#BALErf!TS:)
%fuV@.WFgc..@=_fn@a@(BQcB+j2s/>4@'lBZa6UW-WjusC7>s15"K97b[ke<ZI-aO@MVBnQm*?$fm.B[`rIC\Hi"l^ZE/,hm7K#>
%7OEeVJmEPGq;*<^jkKD:D@UR;iEVee/;l'8C-J1j(AG]ES1hO\5p3gRAT:MIPmg\reD@E%n\Qc6&1!+Q1Z+PA14iHu36.FbG!nsO
%).eTO4@(&.1]B]g$P]N&C.0L3+s.FCZ+W15gkAE;Hn+1p$n7?&o3d_-5e>937'^29g%KOWaHC;6NIs^/4(@9f,23.opR5Wtgqep6
%j5?"VJ[kJ-'XBeEbWQs\ZLD&>@2Kui95l5?4bR:,h4=RXOdPh^aKRIU/.jd&b^Be^fBgU>j@M$^7JCiaO9N/.mBODA/G\OXKMEWt
%(FFK"njm15`KZ7PN+X4uLZh\`&?n(h_B'(;9ji;`Gq?7:U^MD7fH(18([bBN1q<j\;od=il8f8@[%sTNU7#5I%hqPLIfmWreL^@C
%,*%B/U4D$e2msp?R.Bde+XgK!^aTUVgD0]mg'Tnd14C"7Z/ju5AT>^R[V"t-kk<G#S?^t41R@oZ1%tpLC[0P\_8Q^>&pX_+jnOKO
%LL_l;Qk`eIoTuJbJiFG0=XH0"(7,kYh*@=.>4^tY7X&mCV?rL@]kJE(!WBRs6(PiabYA799].@2a@L1+.7sRfVK5""17SXlhWCf6
%1VG:q>o(%J&IORfP1jfhK8]%e=o695JAWc=.8JlQa'o3O=8'nZ_2T/sWGa,GaU3r-6K[IIc,E]Tg,tmX4d$=pk=M0Y3(hFG:E^mN
%!7Sd>$OMuZ:/)\:)pYVU:oC(J9AoAMj_WZD&cqL,[UEj`EB3b&L0'AhY>a1"Q]88!PbVt<iOj[Bi)6;5MX2$+#[#oZ%?EYU$,;cF
%617<0(H8[USVFhZ$T7/9`,+)oRN/TfObqpFaHMqYV4F)@n!9O6QSd6cVLo"=No0B(o>]5"eP;non2FMHJ2?SC%g*'l@M:0Xa9]m/
%F`H,(XQYgV^-JUV2,\rA2gq^]^#dDc7I^c[MQ]HQ:,ER;lo%j?f8HpOhEJgD,:L70`roh<lmfMffOTRd!qpKnILXq[JWP,h7Wu9h
%3P+Z\Njl(fb<!MHL]VY3L9X3>>'C?aOo')erWNp'Q#Hc$]HG<`4dQof"/[aMFEG0&@opVi`Wj*YOQLW[`(#h9FNa/-ReF20,`<"B
%mV=tr?+4_iL<2ed)MPSL6mARTF/hZ$HIm]j%&9I-9"lg2FL3Usr@XQ`#9<jlLbn2<G=n-2(!BB+M1o%k5EaC!7J/E_4;7HB-(ZO]
%PkRGMpZBF(go46,8O,p]D1!s8=$OH-MHS^9<&qr-#7r\HE5T5u,KM^_C6)l5LiRI<FlMMp!a[ucHT9q%gt.Ph)c`e#'FK$iB3'7F
%LlupN;BI%rO.A!.bQ@;9</!POd<:T+E!')jBW2)hF7QS_\Mk'>U(qI<\?_oDC0kpk0^B-lL;">(LTbF*U2?o6-]p=?gSpo,g,V=4
%3qJ9n(1K*[_pHeHrt!m8E6a<joLRr"WUtd,Ab&L2?RC%6#WHAd]`8q/@p``5^h^,(5mT4>2XDP#h_[[-('<fVh-G884B[FDMDAZ/
%dL,IU`D#(f=A(1M,RF!/1:.ug-5BZ?c-Ar`//ajGi'!2Q)LTHHhimS\P,&ellS@s0nN"0n%p=`KW;I!sJ'e2;&>PEPd"2fbP=6sE
%I+:AfOWj\Imbh\Lb$)>Qh?aO5M(u5Y;+C.NN(7o6R9Hi)c7FrL9(t_P)^\8F6HDlHE6dE..Z@ReG"N^IR"AR9E/lrH8:nLTlSDIh
%!![KqAC1GQMVii$OWU3B5NG?T]6X\:9SsQ<'1RN,)/rg0nVeGT+N,rZaB!;-5aG23dd"pie#j5JGk_u7E9@L3!a'S;a?5"SQk.=?
%Y;SpZ11n\7#."nTaI>Bp$g/.TBCVdr5gUWGc>$5tpWcilU^W5SU.g?oLqd%mVmsmLDc'bej\1>``J1Z7KCoM]3_Yrr#BsnE^<Crj
%o=IN('4Pp<V*4UW&.HJbKg=3A;#+`s-D@`!@Zio?_Wj)lJ^@_UK_BBt^KraVJlb"m8NV$NCWB\&DY2$k_)A4KU;ZH%k$,9q!thjS
%`hGMr=DWU]\q\e&I0iC->ngmM(>L<lSFbMP0)PWZ/>OgcN5'hZRh&JKjk*^_DuuRVM9:?Cf.p,Sc)rjCVc.J:VMIbT_Z5aK_T*nJ
%JUJ+7YrLC@4[SI0)8RKCS8\'G).Mi7[^9.%0VQ#Q[+H-6*dHd1SAhtI!g1T,@(/;-Vnoh1PImn2h__5,DHSgYp]f,fbq)m9_;0jl
%S#0@%aoVl"Ib9h^`uT]^(2C?@$n^kF6?)3$P_2'W8o\Et>'A6e*f<V^Gpp-r$2s?W<91pp>IAn4OCtngl7p?d^ZcZ:puME=6X.<?
%B.um1iA^D]3bT&S'kFF0G$BK;TGb4ccKdZ!%Pdp$YZ:'K,;LD.X[@NYNEb6!fjJfHdnOdM%S1+djDSJ;j]8hj;_dI%[9i6;i?!n5
%mUHK.K%uHGAX_sNO9QjDd+7dgh8Oh(_ZTFl:qpoUiijjT@L/YLo;8Ch*d2abW`/U=(<41?XP)LcSuL.D@2@b,N!hPAQ(oCo6CAPj
%9[#EtG)>D"WcGDcJ_35MMe.t>\?/JAcSk4.[A>d0IN_BRRtJ4JdPVU=+Y'!>bE;`):7YoQ88=>o:D:(G[S@DS,K7oi^)N([,XW&m
%Mk4qKOODu/,95Vk?br4d`CL8o,N/@8+HR_L:A-_GN">cSHG'HU'h'.Qq#R*Q\7m(1LVf@1QdV0Z1baNS]I:_C3Uqb7L5c5rEH)`e
%a!O8^>>"A</5O;t8]Eq^G?@67jj5Vu]"?65F?pI(_2nuIk?TW1&R2-A>[jlYA=Su`&8]=IWn&[Z,@0:25O?&C5kiW=B=0J>'&d93
%AOr:HEg*SdQb_sckIa8;W*j"UGb9-[Bs^U@[W^p4OCb\?#nsl_Dlk#g!abWA=1<O0f+#DbL_JnO0trb!K:>B->Wgj7rN`dl2`du9
%DCY3_d%c@3"Qp[4Fe\Sbas299\`qnO#`3QXJjQuM?2nqEV?%L2WA],[RmP_Z'dB/-?m@iZ2OL6Bj>)gc6q4"84=/jK7>>V^f9X0j
%DQ(`o=)BB44,+[]7LA9G;hh>Dk]0A),dLL6Ke`'[Ls1t:[X$.egO+V_B=TUI:Q&:j&+_P:(*9:\NG:10]-W&'AQAaR<_W]W[R/EZ
%JA=.A(thlV81B-1P3-d)!<+03F,Di"I="nQ`K=]CXNg^24C:f_0`_rL"Id;"&oC.Y%?&7/+[PS-^),&/G(?`I]Fu4")6oB'4K)(j
%9Itn)`$BjU7$^A%T/eL[=sTX7$Jg69La*Dh/W7qL'Ol`F64ZBAe->P!=%bP5/2r?I,[oL]M3`W,N=`aIhY)fdSVZIs\K]NhX"4=$
%Lq=bgM?#PHnb?Ng3Y@3dijusbd`tWgTL,`4=ta-b4M076cOU\OT*h6)I_,TY`47Pu1SiQbA)*WN-r6\upjm4"GRo'9>uLsK&ED45
%:YS8jP-[66fm2@.((K76Wu'^Q&2)m]s/U5,jl3M0>^[QebXr_j>&;R47`]-\O]+ep;2mh&+UAD,*9jtk'GptSI\`XV.tF"L\4]KS
%m<OD]n!P:=LCL>>,iHa3;rZLJi#iHLfc='T#?.UX_K((PF+TISo0ABGnYnFsa(=84E7Nr0h"*.5TKXM7M$9N'Cb&f%4\?7sJjc^8
%goY"%!`tmXT4a\hfBZj$%5aYc=#DfV[0<F](Zc<rVSrTAqUL3sV[=8q7qOU#>C*h%\t5D.ACLS[-\WWHfu-a(-]Wp1g2AhpUH!0A
%BlN3>SW3d(a#\;t"W>GO[W[L`gh\==)Y(?()hDQuO7TG^AV4C?!$"8(Lc*,'mq20!20RZhP<aX3:m&tD1o(-Z1#n6U'jOO*oF>h3
%PY4X^!4#;./Z)&2ID$K(Da*%!\)(+_Njm9[r/)i@[,P+M$32:F9(mHu]F%dl+m<A%6cf*m8-]QA86Db.j4Kucn6SuPR-W._n1@0K
%.HGJ6&j[_QqotfdPcRS#o!XoFMRK6eEeJL&438aTWn>QZE/=j<mub\!h(6%>B'^5M<C"QEK3?KKZ;n)F-'Is7Je0qADPp0C-V1b=
%"2%$V-s5#2Z![[J"OK]:S^(WE>A0+CY06?aOR1!t@AJ%F;eZGJ6V'WSV3[Xu%/8"=PT8C[:Pot8e<1bEZ9,D-.@NobR!1%fr\@#b
%6m4Qe\G70;$$QeY^1dfV?i(aC`GF9`ZQ\a1%1H7Lnm%'O&$?Ac_ptHHH&X!8m"+]32&RK`1Y#E/:c]R@do07`$W'I@:+F:0(ZJtM
%%4kVs\Me>#PVukS^elnSo##p3M4n4Q%F3`@&bC=4In0TtjnPiRcui2JMN6HL^%,F'lTbZ^1\XT`fd6GNb=EDhG9mTc+]<%pa@n&&
%["s@CVJQ=G8#Pg>4?]-m$l\FDa)o:]QW+\`V'4kKTt)D)W+u#DXTIqLOAJ\YDR*"?i7do+6tUIY]j`4!hjfMS+N>;>OKS[HINAN>
%JE09(0Om<fJ9ABV]SD36Mg'$J;RG\ApZWCk(r9Q_$^nBeh;cDdCI)aIifQ,K:3W`U3So2Nh*FUU2jr9(:pOKI&Bdrh_XD#%dJ[(J
%.l*e#Yhd%ED8=PgDdCXR7><NTI'7I7)n@sf-l$%tN<1in//4:/$$7Xh[M?']:nf3.<<jXTQZ=@YPG\JU#:(u'H-)AK;<R2,<Noom
%_AFE2h(f<D8X8i()[,1"H&Ps+6T_q:GJQ%qQ=IOsiV$7Z)C'Jb.ingJ8[Kr/H3dkXP@Jo"&'&?!9P"ltVV8LlM@:o:rR/,'js!?>
%0h>"R8paK,M*gR@M)c!%HAkIPgVqIZ(.Q^cQ6XR8J/.8DKhr0%-R]e,:@]Im<g]0JfMp/LF"#W=^=a;i/Ap9CAG8\"8C$<$=V5+T
%UG8]m1<]hIe$TXBA!8<$Y1fCl!!u<#8_*3jfGu?[k%)uRLsim%k\N1[0'GdPUnJ:]#"LMQ8O8&'*lQmF3DL=3WZ[g`+ZE7)#mo)K
%H$AE]9"IDF&#;Sne#qf<_OrPg1QQU6@.;j#:TLJA*2lfqLteJhP3YC#]'.+k3&qgX#O:m%D.Li-@%l2LE"r$\KLC(W4\S4Rru&?1
%].,(3Rj[)*[dUq<,U`HV^/#7b>juu/n+15'AHs'Vb_-@Ynu]M*$'ZiV\=]9;2"_leMO$'jl!h@BfRha5ps[dZEnpT_:#Qf'B9p"]
%AOmplX:X@b6R"#`+CO:!Nrs`g(PEfnMGe%m;$oS)$Ksg8D\*:E#c:h#$VA[N8Kp1s!0rj)!O:kVG;$C$!j:&55\ADGrOm.7;/b/.
%is0Nd,@"dQoanmtCSO=PhDbc"VUKf3#L4[A(][G`;+N;>,>_SAG>%5N\QJR(j&h5sZd9Qs1:b3XY-Y1"NlrL8Y#4Jp,`Kl!`e?cb
%Kg$e!F5sBbg^EGE@^9j@En!^fAkAmf,/h9L=e(j8GM5X,Vb[o%iS-%2C;'La6=GF8M6,LM0rU8:!;umn0&o]*q_Kr5cYs7!,<$eP
%L/MH9D)3?28-[Kog8$,`4-]O=Z5AS*!bR)c-!KqDO;:0TXS5=%83p*r^ko9bV7"u4M[pUO.lW15ED$+[)24JSnu*;ZY%jVKY.?$]
%YRN$K;TOZ6K*EZBS"b%a>*$q7"!jFra)"(i,Gp`Ka\B,kb\f+Yg3itj%?8"IbN9BZOI'n06uS)Oa4dpq"mQi"K;>$,qA'9+S.-Me
%^]i#[I/'T84@mc.eQnImibJmsES#(4aLn$&XZa"qrC^J(l.pD(&Gq%HqGDk(Cu1PPfN#kEl[EDb6-T6I@cgW4OKdkqT*Nh@>:oU%
%i;f8]C+VtKYTe&UT$NZsn(5$!jX06&CG[I"7QVld2+gF3W6B5Jg6F&M_!F'^P-#ANifr(gi]>&hNfO9T:u%kLarhmQLj^Eg=$+p!
%Dh1`L^ncX:'DN@s@7E^6QN#F?38LaGE0qq0&^$[L7jS3Q+<Ij'))eCc$c.kfDT8OfRl-`?i9X`2e=X\.&ZXVpApVOdR4N<c&9P_q
%hC-Uc67833K_0SS'hJ>:<!'"^(>6U.5j37-[&oK]%3]]Q#iGOr'&#0)VOeo7g93SnFTi*IRCQ08_0l?JaP`&9L25hK*\is)niB8%
%\],8b`[rnV)2^Spn=2mUf'8Vk30J[D$nW.\R!cp_]X&5T_G`Q["OFJ8PM()g,Ve);K_\R)I[SP:-V9:q1q"g"*d)B(`+@!#&tDeQ
%]''nKHYftQ?_d]7!/:%=JMhVc/@@\g%l5H#,d$$#[R$fWZ*M?\"5k$k9Y2O,MMF0Zrt!6BFG9JkE-<IR1rhHRG&E1oC!;*)-c]9C
%1]rZ*9jA\LNuKYE&Id3%U$WJ-/mdSV4QRj]73oP#MSN9UW,'ujCfQ.HW$lO+M/*[.JP'MDi!02h,l;bBUC)n"6LH+/=bM=(s)1p:
%TTFfq)<^Ok@9(?#bSmaHStSWtg%Q@[XFsC0(eu\)>.Q+jEWZRd3c!D!jb1/nrFd[@RGpLb6B&I]$@/A$4>,k?f&Mg&B[6[t,Y]Zg
%0h'o`7A%CM*6X-MDI#dF`#2.a[(3@[7!Z__1Q/Lqk;u.G*5Q6[#F5>3mYnrnVJ[Qn^ntKQ4XblRU/S<PD(:"o<_Alig4IU-#nN_]
%,<>T[7Gj=dg`4\14DrD[ok8eGWdIA6E]aX/eeK$4A[mbCbE,!$i_<rr5W[nXS(p(r[JT$,3chqC!L78T%J5$,,H[gkZ6Y!,M(OJ%
%Y.D""q^SZ9_=uYD_O?<tBjK_hBJVEG<e&^pX0QUS*Cm8hrFec6V`lQ0b$Z?IQ_<%R*^8P_dgej:lCJ?,1>Ntl3E\ke3T^X@<JHrm
%E!fPZ)U^XHal2[g&iV*HKokaE9#^-?VJH!%3a:.kFtcEdUPM('\X%CL;K=Y:bFX?RCMBpMS@A\,Brth;7.qI\,>$QW=i+\q_'$WM
%qT,cG#_4DO4p@S>r7$?#TZ>8)/kV0+*YbMXF1)5N5Vj8V?<a96`%2Jg^:uB9S;d2b0@teDgUJ"2#-X<oK+N-m"\<=\au+P:Osnn#
%1(SmqHkdC;(I8`A>,5k$%Y$GW]`q*J=a'^?LMqqSpP^0?mWHN#@N]h(3&0u1olPAKp>AmR8KM=8OA(uH.YSh92FUn=?:/[UQ:m*>
%';SC8p77[f1M*0W!9uUhH"%*<eAWEOP8skW]gaitIO+[H"6li$A[8$B^g]cG]B]))?"#RA)#;-%#'')AItpn,a-'!gHP)LbcSa!]
%K&,bJ#hq_rK8VbK,n&eGX3u]7?hOhT%H7/Wk_`+Y_\2`Y_B;)VR#/Qi+P<gQ)3H'QmR#M5q>m&7`9<pt"UW@ZjsPfbP>:"kM9-:b
%"DPn7,lg&#<E8n%RVJ<Em..rjh<*B&*lt,^f,(ij?b@)]b!"Zs1XQgQR`&ka_tZU\g;K]P$RSC/1C`3\&r3mP-1FHnadpK^m,Pl)
%^f'ir\lY>0'?@oiLsKDf`,9:;=]X39QMZJDP)E7[U5NTp()C<KO9I4i<7Pt"F7DVjP2(`#"?32):PPM?Lu]O'Cgshc&/)tN*;sAK
%/6C&fq\6]e',OLd!\s(hVX-=#L;5X6)\H`'FWIk00K'7%"_O@X-sATS%s`P9[iU[V5;LPAXV^Ek%7UptK>%ca:dNP=9<ZObVIZl:
%JYJ^Pk6^n%#\A.j9j<B?_PfUag!,FVBQ(4TX<#8F:->;SBDk>%fEDR-OrH-sb*6a6gp#J>?28K19)i&^-J's"N7\GS/k^>2bR"[P
%8E!IcUI/B$lNe`P)iJdAX(P]j?IE5:QmdC>>>N]o=Z3%`Sp8b,o;$,A]G2_eTm3aj8m_,mik?WXfqLa9$bOMfCX\5:n_#3sZ"/B4
%d8GoQ8BK9D8WL5gU3:jDG#_1X7C-$UdR.Z\=NsIgMHC:Mk']q'!]D'G3gu4gN8i>LbH!BmE3JT%`='YpZMT7iB5rTEW!<d?_\!ae
%BK0a@ka$qd+`8r)8lW5S:V-k-V_Us">8)V$T3@,i&u"[S)(P#R#mpQcc1fg8moilM;T3Y`\2;`B&m$+6q76lM-Tr48APW5R\a78R
%cV:3Z3)I"P?p6itN:PrSjIkp1A]AJb*I=sO'bb2IRft2-B7Ok&SrP9,n\?@m;$&<[0bnKo*EO[u%l9&A'UN>BdW-^8D2Z@HEs%$^
%TgT)6GqPQQ?p$E'I+b5-Wr#^Tl@skg7bEk`*kjKG+`G3`$CH^,2n9JF.88&49N@tN)Dpn+n_@-*rQF1cUli14RO+\]4tIlf,P$m8
%,`p^R&4``'Yu.$Med;bL\;E5Cj@J&/@Qc1j7Hh_:R*8s-e!02/<5@?b"EJ!:M7bMEc*o!M=:6]+j<;?_POKpO</#e5I$p6LQH=u"
%"C=uqmWr<26<I=1!/o=%mn.cfrO*J1G1]Qe.1*$!S3cepam<*BE!B?5?h"\,@-F=b(!f.tlfOoe)3X:8UrUd:'QZBeT`CY0j/)t'
%2t5m+=]N9RDqVK(2q/d+&CC0`f<R1g(Z/)+>F(\]Uf%'tYA*Sh0fi^1Ka!M,574atVilJ<%Kr90M@6JBf1lt.AM:64M.]b%-$.[1
%+s*URg"4S^-EjeA&$M]i!dmDW^4#V/1?S);8u)WiZ1*J`Ga3R+ijPX>!VcH4.MppjOM!1C^8e@r3U"rPHuQJLCMfM8`D'hj8a<1:
%#"6uJ+X/TK@n&56c9s+6)6en%A&L@%mUIN(<EL^$,hOJin@8%0VI;5<7mX48"M]a^$G^C-^LRbU.L%8II!63:#IMb96'DOb=Wp&H
%oXORadM#36NN.s8H;8&MM'L';Qo`>=jqZ[U3^jWjb0/H]#*ROHndP`-!Nhg%Q]70nZZrH*7L.0Rf7;>ZiTdQ\5\VU16;^T*#,tMj
%fYm9``en[q#BA5Fou+(R$Um<^ju7rtaSfd%TG&k?5tcu&&M:``866!/H-FupT!kl5m<Sp*I"++<4KAhrdj1<?<lIs+9:R!k6VLFX
%IXCE\U3miS/uMU$>T?ipF=c#fcc@n[923WF_]he<5qkSZ]*oOn6*0Cl@1IibBaCgQgR$6?P_>maE&"_)f-g,rP&d,s/F77ae!",(
%\(Dr;5iZpRj[MHHd:_n17AsF1J1W';k]!"=0bHO$[rBULlUc\6D!HoC*oc!Kc2e/BJl-2`Ic(n;n_F_AObiUCBV;DFPT(2l<T8hD
%!X+23'EnsjPFK@X;^LCi[%,]P4^(4>'1&)R]T,P'Gm2U`-:dX76]O=?RsiV!<V[8oc[(O$'G(pCoH;V:%L#uXDT[2\NST6H)No>G
%D2"L*;<F[;',^lr[o_*5FVSJ4"steEW96Q4`p5qoWW6LGNu]8ZLb"KJe;iFe<j-g$2P2+mLkbepBj\fQe=)9f@eXh[g*2*84We"!
%k7/<k9@M2DI*0/7Z+)1q"Gn(li@qO<YBq:MNkt)=Nia8/s.?t`>E8$Z'".0C_0;gs79CoG.-I:H,so&XrBnJbjO9"Mk[6Y@;1sp[
%%0DjWVuLgtRC`eK2eBj+"]`1hc!&bbQ+:s>\V;b?'nl?(>:@N&%6dP8<^Yl&&0V#IHn`Y;+<Wl.@mOQPWI]!O`ToM1fEp?64JZ>G
%LX&N/#%Yk%p&u,A-<T6Z1MMQX.Y0W'7^Fj0&jZ6oI]/SI*use^Uh5Be7abh`Q\dV*p][PR'+QG[?#JkBmN,l2rug>16LE,N%]N^o
%KB7Z=f>GX&YIeRej<ESDjY3q]D3;n/MjshU=*('B?)[(e@b;s$]G!@M>Q?0rfO0dW9!H/DTPseu<<C+VGt)6Ka;"\J4FpiH'2p&j
%eS6L)MUL$XE&N_^^Q<Yp553,;+O48[=_rp(4?GZH>gUQML-kB_O^CD#(GZ3+FV9j@ECtjCdW:XhNV>,)=:6GsTV,r<J/I,*#e8ut
%fnpP(@2<?UR@FQ!k\WAJDp-hpSAdWrc,(pG;3IAmWBZP@V5u;:;1sY]/$K*0QSIJ#Xm!S1kBjM_U3kIRDhm=,f_L4r@L=-lM`_uI
%:V&7qDf\1T=eOZFoHsg8AS/rTA/In(c/1d$FrYP>)>9)NJ!@0BW2IFV5qNOnmftHX(eb'VS"Nt$L^9=<k%Qc)<9>lC(?'*p%%g(2
%dn8O3-U*.P`u"u\(C6_V>HeSCja^^2)h9DZJKP+<o9N8%ms3lF*"Z<n38+Qk.Y5:Bp^N`oODL0R%L9\J(F*0J@A@M1-@oAdW%5IS
%'-mqYKdH9B'Jd!KpGF4V0Z%'Hkc;Mu2#(Z_0!V.d5YMK#M(gT>4dmdlRjTuE@ecF\JM@]RkTkco=-4odWuseHaOu1:"8Ad"7M7^g
%$Qi(/-OH<BNAEc[dH:No<BO]@(aJ+S`.1*q0fTOg3lVYAEa7g0"$]9^rEep!J\.uH-S\a1Bj.M)L($-idYMmj+%i19V/RY5Y2L99
%(t(`X"g]!+JS#C?ZCES#0+Y#s<^L<u)qX__F9@LJY#>$o,RGi5Hb0+b,'eqcbmY,6G]+G1B]V.B%;Ap!1,A,Lg6d"4cQ3V0G70&U
%$nDV"9*0F66j3":X,RF(;*g6DL_1$rL00lbQ5tpMiCg]BRGQ:9=*[r#.q<"A4es,93g=>r'2(0="uH@>?A"cKXF![;W#Gf.3DNio
%s.sIkKP\LF[n<Xc#g(%N)&V\DDkjoZ%puoM_*3j%+trpVgpoF.)i_QWToI"11$=qlmDJNhTfo#[!Lu?8hIRsKc')-tgIV_nga[pT
%-80ZOk0kc'+jdN!,iO?B,a%SFQjJh0<*[9`g56`A&_"YEZ/>:`9V_03=!@#a"IpW0!O=jbQSj/$6l!-\F'q6cI).g4fq\C>;,i6k
%)O)(2ePA=r:#el#%F@q?3hk2^OIA`r4\@iRE<RR]fj9b#?PT-I38,L:%]^eX61>+7LX/M]FWbu:D^VE;<tf6IfGgdVj&KcaHu66/
%JtsVM!:,5/'8V>S6Ph.:@?l[qljF9?#nDE:Jj$n)L/CWqZ^g!7nVhIjQAK^&?)@fZU";7Yos*unl#8M7Rh\6f!fRA=hm.c<VFKA:
%r"p!%km_Wi2ql)%CpY*AQDh-TCu0oU06duI4P2SIrh;.L)C8Z:JQk_ua1)f#*ZVY"cK#4-K$+fAY<af9)DF.(cc4=:EaKSO2VB95
%99on&$2N@bGRcA<a#p6A;%Y:W@IhYgaa/\u8,t`4m-:GEBj`oo+&aGdB,5M`oEWd%&BUg`_t_mnJV#Ak#348>!UCRd#-jo$!u@U#
%<&ZkpMpQc8$s=Ap_/6U^L9",T)(*Kk%ug@lBCu9VlA6T.A4P`C>4>V")^P>]\K23uE4CXe9N3mb6LC-W)KC.u"+u>Fjnoh"4X8EJ
%):^u0`FC0PBO&N<Bs4!g>*iZXP_sJ"2"IV14ekOsecl8*Ag?(F6NS_T9_"+:2]!a)_Jq$]$,/DBiC#K%Kucj4(a9r'@<5G?l4.a$
%ck%Dj(.:hgaZY[ue,D$5bMjAD@KL0),lalUA\,0NJR?C++8C+OAWaQ-R>%<kUu28mC?/!$A/%F`(LV=8,\CXskqNX-?AJ5?\3cP1
%JHOk]^at20'r&fN$-j5E1PUrZ9PMe"HE2FN`6@t3(.Cl1MI7LS"9GMCp`f7>Sk9"q#SFo94BB@.hP-4'\Fc8h$@iu2]hsC7=`E8a
%B%T^Y7:37#iXHEQ=[eSrJXFZ@\tU`).cH[s1_=*D3^*eT(1&ZV>G=jroRHN"LkM+ZbiDrU&9].;-@kOLR6cZW9h_(!*A1I9HA1%9
%peAK5"7mj">)$_kH'2B.3YR%(6a.i1IiL*EiW'E[P4rMrdE:NITRP"IVh<!.f/%\-3=LZo*"c?]]>^iQoLW8)&;K480DTIioQVYb
%n=WDoiE"&TQ'F2(aJktK%(:9a#@hX=?pkEnlj.PLkSb5R*7_iJjCJ-h?/uE:q$Ee^3i4go,7Z^=Se,JEAWr%fo"@oA<^K7V-sO49
%@fRQ=DY=2HbNN(sST5to%GaXeqntdDPj-gFNps!8,eFt;I\;C'5!0o@&N9cHCO@BHV<Af./%#%91kN!R4KB]^mUD!*Y'kOW9P!Uh
%I6`1CR"L9)I4Hf"d0EbDp-A6D".DmJ`0=mEei1[=<1GrccCMhqn]F9UTM/bU^61ui=lo_QVpZGo%LOu>1FFGh85:b.'KH/]b<9@X
%0o+d1\MQgg4lg&aFHe6:#h[71Tb)8VOD6O;bjg%GEcKIa#K:<ZQ5@+FYKCLsoa;sJpuPn$6Gok^bMcX`ib9M!oQ%K[8E&Z]SKJ7m
%%iiJJAX@Ti-Z7sY*<XHP>Rp6n,jJ(=jT'scOFIG##;8#=Z2FkZLpND=khu$I@FN@N#;\]bH8;rlb*G/1b9;TVkm(Zk`u'Orc9J]-
%@_tL*0IK:(7.Gj9ZlDuadA8M?Ef@/?AHc4s=7O8XM</]YT(BfLa%pDA.n<aE*EEY]+A,+*jmZ1c!B!0.8#A-nW>s,c51r[\LVmV6
%ZpR@UU0ft6c7)Q5pfC.7.NI%u6H\7",L95'\G61E(p?"96of)DL0e$7_f2qX%&Ufj->UZ<,8!`b-DuB7an/Lq3J*ijEe7+5&6/YB
%%aTkt3c[\GS/e;O*@3CIY\FZb:DhL?R4U'a-?&&joXZK=*)?s)0]JWr%d/ef6t_J7L[tef7u0bIT:,0'i=].(3eAW4_Jp+oOhC5g
%e5IK88aIQ8*]\a-i/F`sEbG\akr,5tf0U9^.uYI3m6'Q(THP1k#9h[ZK_B<YJf]W.j!>j:'PA7C8B@V_JWX0d]WFT?_E#U)XZsZH
%7f`e2Q3f#onS)0/jDYT!,eC5$iQ-[)cj>TBnl>EV,)6P+kW'fKj)l\^f:.lC8W;G"k(SG@&f<B6r<t'$:/L!o7Y6\_aRQ-o<5u,(
%4a$lNY>!\P%_5gS,oCYn7#?<"<sUg&-1G,j+I>H`'$+jN.(^'V%T7Dc$@a$h,ajkSnH9?PM1VSTb\jp,SErKL+,>cX&`Y@7ehseC
%@tGbW"#E!&KKNQb;/$_,%OoU=q`!Jo-bbC0Z/`*HB#`JC9ei8:a!1hS13FT3-"s\!kW&')k[':33?H0/-cki!G[<h!K0X[H*<uqC
%+A+(pi4.PH/%fj1dDTkT&N>_&&^)W-@&crf^(o3YR/1fM9j$H6M8Hn/6&e7QRSFa7=I!-n'@:uc,W>a`#<"puB,jf9,6sZ\bW,Ac
%JsC$G[`edMK.a?8a>aI25jm1DKV`,"$R<[=)4bH4@I,c3!ML6=!0"hC&Go)pio&.YX=2)HK5u`tnd/UWV4K/*+YLF\.9h0oGO.4l
%N_B]6!;"A]A9#Zm.cdPI^B.\qr2RsU#?:cUcj<`X82<dP7j"bk'KWnc<h,6bVDt*6&EkW8EVM[Z1(#ELmrC7)"Xjl[(E>U_`=/k@
%SkR(ZbC.9,RQ,P>nG4)TM$MIp'I=5!6&]?BOMiB5!>HI_[2Qm@THshtK6N2tA:g7:`'FCdA7^RLJ1q-O66+u6,'1=M'Eae^`d%T@
%GJV?2QXiq3LI\Uo$9^L@$:1,t_kZ!Z-L>]eP:$QbUG4OpD28jG39IRj/sO32E2FnY&TbjP^0IWN3]7sm'jZTL",I%&$,R+3J\>Y/
%A2m+ks2:RN&6MD-TTKu?-JH<u/K?JtNZ$j/Peb@i@>+g)M9$;S.NBGJ=EPd@#@RZA-p1V*c]=Uc+RqLE#mYAgnU6f<mU\&C5f+[$
%!-uDt#S.oYY)%$MnG!;5ge7F#&AmC\g</.\!lFKM>)nF&HuK>D2O;'Ij;Y\2;;pI&2;VSbnf3U4S-VFc#Er'&`%hOL_oT!NF0/\d
%!"(]r]E.g.RU@VLmmOX0:SH^'SSo]/GZ&[k_dgo]_3)TY<=DE;4QFCU"Ab2u83Ck/I`!TES257K%G\0`9OZk6h9](9\05a!7tDUY
%IQIfTe1eLd!JbNT;Rr.r*q8H$MX.1YcTp@J#m7i5d@14*#m"p'>?2'gPoVna!-i(!V!u.h!7]ubn.F\6-G-tOaED-Ej("%/+W!MB
%Lu9$=2]Dl7r1,7>^2q%h0Yr4=<2e]>N?,n,7VegE>sQr!D!BKj=J8dTG8C\'D\WWJgM-5Zi4`c):2&N"_ZI\A@,GqU_MC0[I2fP?
%1=Wo@cpATa/k2p\i]..n=l0G$Bmj,mI2etk@X&6t^(8$Ja6[N;I07`F2W4u0)q:+j?iUO;A($+;^7>8B-`CrCZ_N^P8Db/)>RH^I
%3J=75^KBHB6dCf+W4,3O"CG[kQuC'F-Rd7Co*lTP*I@q\D%OuGi>*JQWQl1b0VNl@UlJ=q+"];<^+;cY)O_9U8j>al4!lj6iS-Fd
%cVVD9/7oUr2"J='X9GBF"Rk^u433-D%6/J;pDi/K:+d_)[^Y:dU)!&)!`Z<MA8fN68HF0*pct!U#E1?sCa5EW]g8!\#Z-9(@,?:)
%p0o'g,'Qsg9VL;m'rEoXCg`..0YR!>Z.@L4,*3C(\'1!ObB"kn!kmP!4CV!7hHhal_XiLA$-XJ-S2W9TK4oS"-c5_<m4`HcH1;H3
%[ta"(-uXp:_Z`_)hN/b0Lj24-".0Ca4!An0q8<fl,eO:h`N!<4o'TC&H,n'nH3&;p.H4W5LP:S!KHnR-mTV03j,G42R'nCcDiAVQ
%4GjHd)s/bJ1'Ms@K7qMaO>lenh:X]<]MXOm#(km4d>fnn^52j]EKaT-H,FSGVM]gWdCh0Vn]&n/@F8[piF`M#<K9#VE]RVHP49@k
%W''1_G)eL*1,*c<38PJgMN/q?GU"=[1RWUr^]cG9SXJMt*Q=$tapW8a]q8cH0sV"o`f0H-R$poGa*?VhQJ(F'T+<[_0O7[4hACBn
%ls%JS6d-*-+t"4G%,*'e1Ln'LP*Rh^Jhc+95RBb>_0BIo[`b6$%0D2O.)hZX;k^?j]WL;]Z]sGYnP\Gd'T+h=5,4s$K(0%"Ys&?O
%NNmM[T4X$@$?43b38XF)9WJbc2bLkNTcA!4TWs!hnV2cACKiLL&:]`)JdV(g#V'qmNZ;uMIT`N_=UW"r7QsEKH%V@aJ[6TB)pE>9
%/f'IkN>/b#(iQogOm`,e.,HgRAiE)inYmKi_]-atG(nj[KgmZpD`$XNR9:B`ck6afRkhW"#mr&6+M=ad[&FVLOabO8Es6f@h3IED
%A:QTAj\V+!o=H_La4#1"*T%;b]OMGXd(;S/J5h8I_tO6(]fWhFN.R1>.sPGgX!7gU#e:mmLF5^[8FFK048,P5;p=_?@#FB,/Dq5u
%@S6'kT(:hWoa!H=io2`%)_[+FoL,U#K@D\l)snP?%%3]Dfo;?>1YbK_h%g)?/>]?9>s^lO'kTDl16EP6S_6`A4jOqnin\d6V-kbc
%nQ5cDJSY7<faVE5$YO!/$K/?66$B"g@,E!XNFL,Q&nEs#!o?ZpaDR*dV5P&<2jh$N;c7-bVJdU<5`jgK,Xrc7aDT3>_8'kqG!d#L
%J^K/(NA$,D:.JtVMDIb#OeK[)%aYr(2^WL:dP6;r@iC?t^.D&?S3\IJDNrMMRNo0YK5)j2MP8jN6PSP[K\?mi(BosqW8//"$bn1@
%DL=,n?'I":B33Lqgl9Geh/^WqDN2[ODDqh&e$hEI)l+1Xb1LSG@*4I:]2:mrMN-D/2";0Kg^@pu1@KnNNJ8rgmj?h-4B>krMf?9o
%'$(g,ghr>fJ70^IP8Jq2R,![T;*lpu]0S[uE(n@/Ge4DS<sZ@+%M$_RB(T'jSGQ(LVX#<;h`=@I9V-A-+a;s,7l]7ogl::U]^?oP
%)^EjHMD2OZ,r?E-E&W[-3>]dgQmkF)\_[%M"FV,th%]MM.%-A1O5Njq3s-mZ6)+1QghtU`$09FjDKp"4$n:+P15g*Dlk&.Z`Y$?P
%Y!RaN]_r/HRnP,bBdX8U[X'#)F1]Q@idL!5UN*.<m%jYpCFX%>_X0g(OaQP:i.]Dl;g9\JDE'mXG-5)""=GQhLdc2?ipJ?ZRle(u
%/^&5p#BRLc^nF1r\_T0d*QfV9)q2e\1.\q2GTe?O2)2QZ<I_[2@)D;#0rg,Jm3[[HS_Li,C)B\[YV7$<Bi&b-\0<B6:r(m&E?TS;
%U1f1p>st:@"Pf!rLm^h+[g`\D(N;<(.-uBamKRY\%+HCPPi4,@'\lCqFLmIiDYR)?F\KU,i$0Q.#BRMnV'q/<NpT<&.&LYa[Mp>"
%\;goY)qI7D_f]uY(`^X`bYfQt;$%VV]2OeJV%MGk;T"eRgj;:Ocm"3fVpIfaqjAS3^IOFB8X:]K/2?I*$LCN8;nDP2!Ej'f\rO3R
%\;!/,r,0rf,2\>/dZQ%T>[cG<R)$;FP[WC%GCF+B"!3@ufLAncNh$'ANtH276/D*WK'?;Z6+V-s86URd",Xq7`>$^Z^iJRRUAkp$
%gj#D)68o26T#))d%GrDN.Kd8UFNaat5'J_DoI"nO/@VM`SJrt:FB9a*\UjQC5gYY<NATc_p,fY-TE)*M9]jWdq3<1l)h^1&L!'pW
%^f_$.-ien*OLmT>4.@;dLH\TYbb39YT\L[*0Z+3\40d)*88bZ:,)oihgf\7Z5i`,[*TG'BaIVAnA`7V2U_P[,-9,n-1<(;$"lO`P
%+0`PjRt/^t',GeTP6%Gg_<sr4[kSgh=l^5-2hn3h*Il;l"t)N9!>r]`D\qk`S5?`cL@AA.KKDaTZnT"`6C;aL6#^>A@*oYi2nWm1
%%0XHU!`\MVrjDe.'u,`2Pp(AJp/k(FDsJ.`_VWSt`"LG*Xpu-92P;NKc^DW(R4jIpS9C$a1+1`AOuVN/+00K]<9Q5n,K;i7DBiIe
%&tj2<$'HX\`9ebB/ed/d&]V9[[iqjU4bU],#-Kq')\_"M2/I4Gg,>J5d@JReD>cS*D0IG([XjJaf2,rY>@HR:KX4s<5:)\630UAb
%67F&p^X)WjG0Dk#kmSh,4cC,5"(iKJ=G"leG<A5P(=Ko"ZON)a(thXX3l!O/q[$jRp0$*4"LDA9K,]KL%0n*t)AC28CEt*-'XE]5
%_j;p9D+#K\6"9TD),N;tm/ks1#!ua)3F++Kjgt-lA/fk1F$geMNPbksK`]ps$*f(Pa>R?=.]jiR3p;BAj!@""f/9HNeZ'Z(ZAn!:
%UkqeggF1',%"W5Y=jlJne4+L(h>8on[a?.NO\Go1L2Q/2@)t7Q0QFm%(u+Ni..^=Rg\lXRN,>$KQ1'q#<a`sF`QHh&$+:tVGr1BK
%4#N'SgI<(8+<aE0,IT>A(>"fX@N/KC&U&cYL1*VT/4"*)7S"\B'?#(GIl45-`[dYY"gLd(O$Z%9Nn>DkN7c,XT$bq5Li&5]K\M0a
%NOTBZRgWZZ,6"+3"2mZZ87>bH-A64Q_%[/$KP_,NU_I5aCdU-[k4XJ4%Cpcj:D:Z),cq[@T(C>[?/d^&CI<K>>Rl9S##N,VqmUe[
%3BH=skh9]7_UVo\g1W^f+:Z/&UEm"j[7M;$Ri%HKARS'=i3i)6ks")=Y>$?@6WKiX4(H@_W-mu9KS)Gg[NV+G%9:9s/t#J]MV#l7
%,"EL;:=k5YI`PTJ3tVUHU:3bAg6j`?-X^d&ii4G4m4;DsK%8.%Maj^)*0'/3GW*$AJIMuc)i03XbtaASRI:tkU3=hF6I%i5!4&:-
%B]*UBNBi1r_pQ_fTc]$6.*u`p3?s0r8CIbg)Y,A2VObA%0,URG&2j#XGEd:!4+3Kl%HS!8m3FmL#t5e9.*U8^?j[<DA:au^MaB4O
%+hU3UBL<=7)A`RN%K8[N\d1S`8BfonTT+o@8n!P>lNI%cY0)@B%[ge#VYFs5oqK*,VIr8(5:1jf4?H(^`.XZjiCQRO&Tfqfm`+of
%`=KK(@0N,0q8l%8?tsj1BTO@CiE1e:[M*+.81=Y"'C[0j$;GRC]nT'/6GJJhm)\uM9$<6BrUTG8`,/7Hfm;V?OL"DlJL=e/AOGYh
%3]SRXChNt-6H,>Y-o\17,o[K@kcUruOr]6O+cpM""'?pZg$NoINMrK^OUXA]g-p[V%D,PNA2_H)7aAl?!jY,R`s\DkNt'XW&MA<E
%#g"QP5T/e<<K;>+a0&:B?Xu'<9cOF$ZEYQD)P_N\N=A!D1h6k0)j-Op"JnUQ>Dt?N/p:e2KOV2P+@"J_f]Z^/N.t`F`<W,:C^<^%
%e)LRg?*`7?_,0JJS5Wj*=0]E!88N88:qh0P07]]6,Yf;>:7cBll:>_*UWl/ffG</Y*%f7#Amc\(KS^/tMNe6P@O$@13?uDZ[X,F-
%KS_jVaA?]7&/S!4f[b'Ei"V'.TFpNPJRYDS4##<DDO<os6jP;>CfD3Ji=ICq3h:9&'.ijgVV1?k*uKnF.Ylu0JNFUY<^]n8',s1=
%GlP&lYsH:3bfK5";;`!P^Qef(6/X`k#^P(l4nOn3E7gO=bgosn@95p%$fd]BQ6EE8YRu]M1#5eM"9^*(SV;e]Gjn0B2P)Bbkqm3=
%dQqi'^p)4V.VZ>^BT5J]_LjWQ)_:)=B47QU*r'?lkr6^a.4f;"&32R?<f?!kRh:C7.4fSi0Z1-"jV_thAJhjJ-8992-?3JtL(2TG
%Y@gZK2X"M!P''522MgV[B7XKD"@Co[$H#>uSIsI@&hk_U8?ERA2BXX9C1T_?itL'b',ELW%2V9!@9^ES7Sqa)rdmf6Lr)Vqi6*q_
%E!?q[N>RA/b9<b@9MjB?NXGNL:*GqOgQdF$&rLFkTWmr+NON=&$eo,cTVkUtWWaq%`N>f;nR1`Nl6pI.$rc/DTWlP_N#.\;-u:`Y
%+R_]pfQa]rCHiYjNA.rZg[/D0LKFaQP$o1c_WXT<$6&TA'B7^KL5do@BR=5+2@;RAY7k3%(Q$3rU9MI^b+6<rCku2eCUsY&%F<Bo
%S"R!JD2IBg6"-O\'l,=QCXD>EaMqh1:uSK"I1E\E@^@`p)pXs1MC'TbZt9sRQq>r'PL;`^:tT00+T'jqKh^@$l8f7k@i&iG1("sH
%R#*^e@8f:%p)Si]0JT@D-b3>,o&uX;YgFdNAFtbY7@$_@K#5N+.'_W!'K.s$NUJ93C]P,!(kiEB0h-tX-u9IdNtMd=m:TBY7U`%p
%D+kTW2M_[Ia=(kPNnt&:Yd&/j7-BTI`e+ksDM0kS;20en,XlX<$77Ur6-M<)p^&_.#iut!:_[.giiqC;8HqM0d)iglE7feR`*mkp
%i3;`B8>-0F_j97CV.!S?RS[Z;ciPnq5sX)da5eaIHGh1'/$"];#_4!1O'0E;7TUjHK8gje$H)$J@CBcY5G)o!nJOGE:I*PH@h&/<
%$OE5<-%'h=fc@lr<VVmL%`1\gW^/R#K<Wc!KYRus@H1UWBS5iTU-P`8OK_$4d'5)HCp]EMTO^C+7QV8M)[(kS'&):MKoH.kJf%A;
%fF-n5(DJd=i9@gg7U^p0JT=sB-u;;-"f=Ra_@JV]1LHeBV\I0C[Smku`h#0#!<\Yl-\u\L@AEW%YCN7LYX+3fG@b3X"?T7YfI4T*
%apAFp9>h)[@:>oC"trOa(,jl\9O:"nUB^)[:(T=l1!<*bf]]^cfYrZ`mUAIjj7ZPQm3lduDoJUh'K1b]bR"Uq,S\rY-u=886ae<i
%C_UBG#n!0cL;e<O2TA#1[4GhA+3&IBAp\mYY7iKD$H#>oOCQhP_m%NF%SND1YVEU)_^C.X%2oJ7IA\c84EfCD=s[WGpo#[0OKc?]
%@:+9F&`6WLK6$>nn-J1dI.J[;VAsE5n(B<-K+6Xr2b5A$47OV<;[@PUZ\pTC'3h7IJR+Xa0dU3D2EE>,RM5Q[s168_SD^RY>5?1A
%&[PTmf7ig1VX/*>S&:%6AmaSCM,)FL&E&/kn-Sno5f?:/L7g>-li\[&3&Prt]`oXB2ApiNSgRGtoGW-[eZU[1*TmeZneqXr0?5A*
%#UnqRGjkDfA;S5"LOduqaU)R5CE9IGTh!rsUhCmW=)camTMjRQQOCYXZtfsB!gA8@XteoRPRp,d".s=^F7#`9SW(,QEeC\pY0jRe
%apR2J4QGK>A&^Ce4lEa%_RT<`4II=p6&;+=+^B@#<><;-Gf0#7mg7njdXS:_G\ce`d&DPN&gZ/grT+^&Ff:6t(Uc1>%BJr2lQi1&
%'='K?N5EB<L+!p-l3Z#[DLTB):8la#:BV$4L@6:Z>+!l;0\ZIP88AL=W!nG/dKq2V\_;Vc&3u$RE5Jr99+Gsc$dK[-CiI-'RPjlW
%;*CJcXRVBa-jKuPcl%pH_Qeh+GR;b#@h"2_(*^[8&!8P;KjbEt_g?8J$u7QTBSm$A&I4=b'S83\#<KRi\-&h+]`cSlIPh>W7'bRB
%q$Y)-.e050M4?Ba'OHcM%"[2+k^19FMaC3]F>ZTDZW"rq$47>`FV6%[KNjF;j*3V3i0grbE\k,W$`RN#XbN3Ag_'co%1Hh/-OR1@
%1/_e;X@?e2S6VF`*<cNl^hOF2a_8ht"t=0B$a(C52JDas=uH5H<ID4?Z\L)$_Q!g*%ahY8W^\rD.]=7j->;i]:,QF2E7,&ig2i(s
%PZ$oAnj\@56RE-p9pnk<lo9qJ)]@0uGnNM&#\[FQQQQPfS7P$cp2VI0!3-(`LMMJ1WKkdn_,E]n*@5$4&e[<])]$8h?/isf@8f5o
%)\b+d\:l.l7[H+^U7tDmeDMjs/OR%t+M]K=#YXRGY1*cC]'04u,#B\1OR^:`lA4cX.ZujP.QJ'>@H0T`ZiI(6I&"`&_P<-QlXrQ1
%YCslZ*7@NU#&=qlegE<>MU#>9:`+?5Hf1/XSLGk."\%6jdotso6/Dmj]=*6g3G*HWTe:Qo@ju5.'Km9L8tdkn?=&=^"-WoWaq+c"
%iH(Y'W5Tsq_OotX/]CLu\T!/bdn\?YVY'+@fd%S%bs@W;Sjo'a)L<;B/Wu_4PFK$4j\E_gYai;V\^QWLLF`eK:;c#P'+@SR>S63W
%e=k?_Pq-9<44+ZD3K9I)bh?+W1h?M1aur1A$I2#$n!3((h>3&5\/oY=*3Lp$l%lbPgL8P8o*9kOJPDoa%W<g.fJJt..Ag-Rdhn0]
%7&'3S)"9!c@\s9!kgi.q9s6)6+9#(:9/H*;#MO9-hk%]^Kajr]l0&tN5!_nq4b@XC9UZ/f#i.8\T]mkMYS5;=+@Atd&^3)95ficD
%P\C\>I\IpFU15E-1T&"YM\06HQj.c6>Yrp;GG=.:Z^i.(?ZAMGE&:g%/ac'H9,Gc",8MK>2nBKcY*KJ/;mnMR0i(3idT*G^&[XB&
%Ftn2Q6C+d?DjD*A1o-n/D3,il5G1ekJs@sB0@CW;FQ#n*V*tL?"5+"pW,uYDKh<$AT.3cC"V[]=8<kS4c?m2s<&i8:R#EEW#u;H@
%MTJ3'dUJU_9/Po4EJ-oA<*@Y*_QK`1UpJEN-7!;]YR\O:L5dZQNbB)d1^N.H`^,fRgZ!o2SL'(aOO6(o4*AE%#/V0^_Ft7",.BN;
%5oSmJ!g8fl>p?0m#soO65';H6)Tuu&!D"$CAMHE\n>1*@O2h([;d@./!u$lgk"Lhjcr0L]1-?Ia8F]t\f[7hh'6H(Z0@:f\jQOIf
%l7"\2ZF/nZfrU$`FOdL$ULCQMCp*6VBTtR8U!`YKifk;i0Q+h89p!bF]Isq!395-*'UaO"R"4D[$83<RBP9aH>VsA7:kB&'U@IVS
%^B0<GN4]m)1t]_q8XW/t:na9S'GN-TE90JTV(f;Y0[\EL&FpMK%<E)E#DEdr,o&rnd:5J5&RE=>/;WLVmP2[HbN^eC6UU>q+fLe>
%%CA$<R7_nQJ`2S%3]'5P+<+:Ui(^BW)B-NYF'TqVK*r',Xpg&>cNr!1/p'!lS)B*V#1$E1<-eUE)?t]u'H3KXaNpA1Ti7bW5%R'u
%3?,N(!ej[kKF6P3N.k$NN`%2Y*073K:C.^RmPgf^PPJ;_M-\6W:5'1C_H<^4B]*r#I[TD\K6*5LSHoZ0.`Z/QmL+bJ)5qN^KSIBK
%jGO@bhLPYA`X*+nTXY8q'cJo*SEQsQL-]GQP7KA2`$&I0K#U_q[[dS]=BY)o:sc/\=kcNpE\^Z.1nL7:?3*@03?)rqo$.?8La`NH
%"A!:":nWBgKbq<-"WELSeTV;kWb-AF_0)r@6D35*mG,ka6i6nUs4P0^_poWkKRsJ](LLHTIFBZlgZj*(_"-[3TA$IWIsLb8=0M.4
%L&UfDk3gJE/aIV1\[ji4>b3Oq-dU#ro4K/5`=G0tqreOiGD_&3MuRVnqJ2;n]EjEK(]XFuAoZD9oY\/a5!"3mdNKV"nc)mH,ieF9
%-4q<&$4YgmF$09p]gD_p("_a:p0VLV73+S"Z':?hj\%oQ;>)ji#H=iWm;)e&BJVkQr!->i+PNCOih:VTe[:+<f,D"[P(OR7KR!E2
%63mg3bPALoW,nW79CerY<.6g6l-:SST;brM`n=h7!q#;,W<D]c<W&%.-ded5_*!N\WGiR_]i=J+^c]Nt;-Q)1TU]Nf$,FL?'')h8
%n5"Q^-Q,Qt%!s1lK+/NK(rJ[)>%#TFTdrMo+F+17,#osJ[9P4">A^>0D=MZkLXWWOCF\n5fd/9+_Zk:&Sb7uYC"62NMZa6o99D;4
%kGU$@2[<7'UNR1KX\afS$WI2r_^pku9M79m&Jbrg,sY?3#ot%K8T*9J&p\ZuE)SKl#a5Nq=tqpSV=7.B`r`7QJ&P%_H`K<2m;K2b
%MS'I_!;@?"T2>./[u)2^EXWpL(3p?E9ml*\L%O]R%suV["M1,dC:F-o87e5r*G+YH(-`+ROV`gSML4Z41fQPgBo;&Ad8pMNc,a@Q
%76=Oq$9Sp&X&<_4GtD]/ikBHRhPm_q@:^pA.(o.!EQ7K_+KqT3LNjlY&@@_Uo8L/e%.C/9gN]"S:>_6=(,Rs<a4*`3``d$R70=-T
%g:bT2-VL,S1,e+89>B-UK7u9bW6S4++&g-t9`ckF4QM'+6T$;I/afaYdBH$$d2&&m3%!l&<C+<3EX:tZTe@ZO'R;m&ne)rrBf0sC
%5Z+>kKXh'G(\do<Y=oksCB,[M;WQ,\]P4tLXqEUG()Y,c@puZ*bh=c!G84g^TngIFG:[cn18P!]C*Zj_qN*$S`4"H*\$=X;5H<7O
%b)U:%&34p8cduq/&8,.-1+[\;*bnEAISosX5e;d^X3,R/Pglh!+_;nA](*MX=3Bb8;l8J'?JrKi#+Y&_^N]inaCC?FA,..clslBc
%Pgb*`+ZfN9bknpb\Z7KXCstB[,YWbq-\Pm=^d9=(FKO[r9$"(U^_Y)).AD^0-9-68LoCTaFB[^O$.Tci!rsm^=IZBCWC_anXm"S?
%LHj`o\eM[[V1hE]Y$;Y43)M\eGJT'7LD1SNX#WgW0Y2p0!<)rS3ZJT7Ci#52=*sT_5;ZtXQtZb8=pSdO,o'lK%8@rL\WbgWj/8,X
%LI$N"J!TsW-)YQJ)"$>>\rG6XAJEPW_D!_eqGD0A-a;Nj+^pjZZKagP$Ob]%b<dtIb-SLuZb0C-TOSaGEDl'oe])/e2@2ksS[qL&
%:35=-\Fi=u:i-(tY='EA<VDT0(+T!5]!/<dTN<b/XUY:5a3[Hk@k\&MNB@FYjlVY"C.NUTcb,B_"S5uCiJk,5^>O%]LT@At"s1L^
%#,f@s/(VdK@$0mCX-^uf0jE72)=S2:;e1H=D11Gu&L&Y!8X!6n4O)Z.J+7dM`MS.TO1(D(/$o3iIQg`69S,GiI\<3N<Qm=Ah]&eA
%lDdrhlC=1e"66IR#`FJ>!_#jcS<Y^"M<?Aba@]omKG,Cg^/eAb;is]LRYOm#7@=DJkTCC+S\7b2(Z@t*`n=RsNaf45C@dDXODUlq
%0#ord3qL_D'kHHpgoH4B,ZV&4F:7n)H.][UKp+Q2oal\SMA`3Z?E2f%jDfm\6#[JI-dF=qNZ6u1W08W9IkjYS>bql9L!be3d(d7l
%X`;!1h2:*4!8U:TBW+sr?1:pYcrX(:E3j#I[LJ5HqEffBU8arar>juOK,*;b,6feZiL_XkE7Vu[<#)RC@baDQl<^F&kq6.6iLR)3
%h#lE;_UUH^M_MIAaV61p'"Nl4=acV3;j6B=*`'lOf&::es6)#._SPQe#IGuE-M#lGl(C-u9ZS\W+cC<h@][i&^o/`D[Ar6<PSX#E
%@8?Ks*]ENWbaOmE;.`I\mhd*_Mj$kiVZ^$r)CW%b\'<R(nn<WhU*'h0QT`\ZAH1*%MR8!!KIqSG%29s]_@Yt)baHX"1tB^3fnpCE
%\a&&B_gDpoIt#PGG@fsp1#mD!5^)In0]aP`i;&3&=_ia),+i_cSi.ak51$e@#_nXqBH\)P*/8S<SRe<%Ajmc\1g(M>+%2K!Q%OVQ
%k_D2u0-s`K:EWugGs3<Rel=k;h,%3O)="HS'?;R-RP;lqU-Scbe#Q#qA<M<:\9C.MqrQYOcWl>i36UUo)@2Arq&4Ad97^G!?EM"1
%Nb0SZ2-VL]m:O%9H.^";Zr+Clb(aPWH.u4,61ha=\k1/D/NFkQ_!Ig7#5iG#5j&;b*@XNhS.kikPd[Ug+H2^B/:]Ghf$D"]mNB<r
%nR9g1#Qb>&H`XI8$4jZuWbp77k&<eS\^X\mN1/l%GrsNLA2X2P1/`7h_V1170_CH=KBYVLN?=>GF;]p9'W)*o!j/[U:.gT]XWujZ
%^RV<"eiL/^<@rL#R#H%oj:e4.5(HA5/dt+`als^HjB\X]M`2VuUu/Ik2/,s?DU);L0^rl<;+DP+5F&5fhi8DP3`I-^N.[+-IA#<Q
%m5-+_H71`n&?3bCE:9e-$\OJ:IPe<I&DmEoqm4<8(D-O.*HP$F^1B0Ag&tBV88,:[0f[PKS\c$B&o/X1YcDCDg&AfuS)kc&Tt<iD
%g.<L+-1+Z3f5?P-N4e_9IXWfQFGI^PoNE!Lg3J.F(_8XVcLWps#1P%9&UQe,g)$7r@q6a<:)r2S:Q/;@FJ_cPZ7-20f8&'mCui%g
%(lX\?:HqpDg<tjpR^h\U2rrM.$*ENK861/THHPPL)@io&<&m?iPGkTq-onON$,2KF%>dL`cUF/N[5U3JhF%B0AQtG/<2u<d:"3Z!
%"PMHbD"h4A1I%Ktj\e+Em\i>98!>G-W9,PnTkdhqacWRD_:#9=HT3`_EcUKShq'K'?*+j9RibsXdG4psbK"s9\bp9og]M:^8A&kB
%kb[;Eb0cg]$;[C]Smror7@s9%+=a9['*.&+,KifXD?M,p/i!D7_rBO9osMV1E]j99hPQc'aP"psRC2U?+IJ)[%Rg*N@*_\55?Zfs
%lQtkX66:&A_c!isS)O>[otKQT8e#)e.u,0YB\`o%;L;kP-XHp-cfl4F^.0_WG>V;8jI#S(#)^mCFjk(QM"Sp'Y%/Zi?)jE3)M.7i
%,`GaSc/QgY"Mu]^I]K$L;F/T?LHsPa,RgdN"]A)dk\FOcMshsFm'pqqcP3>tf(i@QHWr3_:cuE.&LAY5.$O#EJ^F.UpoPm!jsKI"
%@cW0kYULWYKY6*D(Tb@X*8E)T-ZkCf"BVlX/sF;)/92/6A3$dDKs,\e@:G/_HHH#Y_2onuYLlnX-L1ffH"kY,8sKu-X)Tku&1u-h
%T_,`/37sEek+)U':/*:6M6>H=S<W%.Eha-P+:*9]&$0^nZ.SWb0p@3FBJ-8?*q52sA@;"U<^K(876?I:Wc2-srq>^:1.CR!V9")5
%o.g,al.-92OdTIIO:"sHW]aJp]5SRA'.mH)'$.FW;[DgADh%eP'iiI/O?-Lp4`Q/fiCYVrJSg;l0F+_i<e:`V*f@,1\=93(_IH/>
%\ra=-,UW#0N,i7KZIh68R,h],,4DL`<Y$N]&2TgnU2XjZEE["5FrCoqh<+3Q!"p3+lm8?f_1?ViXKY\)92Lgs,,a@&%Fe&]\aN;&
%4Y*+/\03A[dgQ,Vr%(JRq;U#?I<9t4I9-UuK:F?RpTfp3SBZ\jN0(@LKN[(1R>jNS.1bDEmT(!OY"PE^f!"\*%WUC5`iN6,?Nh^^
%Ur:G8^?&"QBBof5#Y"F:&_`fA/3M>n]U$?'653IG37B4]?AG;LVu$2hF2WB+l1#NP^Edo%f0qD<7?).l2nsO&;gXtljTLIkj53]"
%8fbq:=cJNZS1q(:iLXW/0ag^A'uJGfNo3<&-JFXLHIp^jb=Q+q2a/eh7.K?+=g,_F]r5p:'d>$4HD.NBhTLh/Y)o+A^jGkDGmHe#
%LIo>Q;8Z&"=BjZ;>I$HYZjK)$Ftg)nhF?_e`>a=u22Y@k99FR](l=K>a?iP_Xf.3`Tdq=oH<NYb9O\1RYe'phCrq;]NqV<%3ckN\
%&kj7::YgGOEYCl:mg1WRVY:3*h.4\4@B<?nf,ru)Cdi0B4Ni:k$$0f``o/J!6`P8W?s5?lX<PSJe"ICPc=PU\MqRl)&&(FMO0P<L
%6(t1fR^`3,/Mq\qj.hL7^@m1Y'`\NW"qU3q,.e=5LR03O@kOKf7.CLs)%EW5Th6T3m+oeK)h<NC7>6!3UBc5WKG_>GJYPDOTujU^
%)YN6*8-q.Y0/W;CM`_s3-s]SG89U"8p5tBmR8FYD$lTtL+Vi8l%UL[MC`2^0iKpZh959*2_j<D-n:27;oQh+g9["'0-P.@^M6XLc
%'*'Zsf&KdQ]D0i#`(U9u=13HC$-A!"<s(F9n_k(i)C>'.+$/9s=*+L?X+LV&!dB[NP`U(NG_DfhP^bBcc!kp9!3O@@Ju*E2b"1P?
%KBdutLCkkR`uL!W=[P:tBS430P?o^^k`8.b2ch)J_4J@#O9SnM@F*mNM1Shq#e37>_qG:E$33SgAI,$Zj&kC%SLC9cOjHN7nMm7/
%LoI452gj$:$)"H,8Z'j7/lY.IEiQC4Hp:`7Pn*J%*/**-l`:L%;L+Al>%CH/(5X=rd;<Q#"*(BN2Y3-HM?GR@-)(+Q^qS`^#2jdK
%lNrMWN?-`'kReU$>KC=[,[jB/lWUlF/R+3n6u&CXLW*I%d5!gZ/UbX^o_?U!K,HIre*+u+ULs$G8J2q6Nppf9ck=9)"0phGr.iHt
%N90S7H-HP"CgXN:G67?`%O.4:>$G&@5E#W0gg*>U@!s9;Xin-hOGg7ocKOf1W4sI;o#X3.3_QImJhY96HuOrhJ<%gjM'Ett@4*9&
%OuGrZHZ:5gZ5.rmPI@&R@g)AWXh8`^ED)/PqG_3dqKCdX<h=bsf!gl#\eo0NiuWkCKXH.2!A:!U+iEhB6C28-O+Gfk"@,5i)G,K?
%G4[EQ7cXP+;udOI,%4qXX\nh]<(NT\JWFVi!aA218#35`?o2<2"n/<,9(4si+A+l?DOb*s1i+qLfo"kp07q#,`#nRdK9>>\+[eRc
%WLF$i"c^fY@^F^rnH'X]_0GLW`aIn:3U$]f,'1#:@"ICc4IEg6H;naj:BgGdZW_kJ<l:>A/5WY>DqK%OV+Oo6#^)h2'iRaR<]/T'
%.n&C_-V3I$]ZJ)>,>Qe<&e^\GTnFoa+WK+R9_D:<0pol07T\EM4JaG^:<e9N=&a,XBO:nN.tC[&.U_Q3kI_N$EDf4G`UjM'qa'2\
%N&-b]otMls_'#H31Da^0e0.k:2^G3b>%Q4s#KK)Ye6D29aSQ5KS`hc;XS2+hB09pJHuak1Oi(03fWT%QQI1t',SuLQLH`&+\$AD&
%H4krXn"s2Oe0%;u(g_Qjngl]Cbcu*5N$pQACbPuoMA9PSI3Yt<,m=`#_efLR?KDu3ALfLBaRW6**b(4P>XG0%M1jG?=mW4'@H8,k
%6oN:r65HJM6km\A@E*\<-_Wpd`c44tS#(71XG1nh-;6m^"jjA&%+6um1nlC=c8.&Rr$DH>*bF'7ZaaKg-8b;AXP"h;JX-bN73s19
%(gQp"7J68"[YL@<P:2I$qN+Mt]cuSI+3BWoKu@mR3d(hF(+#m$^k^d61hnNQ_*JTA+XaNM71Ha3jG_+Q"EkCXfeUVTbrPNYUT%@q
%&t>ZsK:/GB1tK'cr`\F>@%ra3^Q6OQb>aE=#Sbg+J.tcCT--cYde@>C6=k\#V'#Y][__WoI)o`fX-Ok_Z!Gt9LP$XSGrrt!Zt,RD
%:24__UlgG-%Jm:F"YjO@`F?b5:JBRuU8KO\C0OTnA-<E0ia3Bo#TcaPQ8gBZ-Q+qs%pH,G;cZd83^>d,/fBL7_8p=T"kCPc;[6<s
%K7Q(dWmSp/C$ghER-M$taueX1X@W]86="&\h:(;bamq-WMRbN77>h^mjMZ-"ogfmYL.D;LQ@]h/W`:-C1J&Q8)dpp0&shoAg'I8M
%X%$]:hu^]tfZ&f;o<CF5_Z1)qDpbMh_15`&p8'f^h:(=P<h6H3-V;1:6sE-e!uG`a&#_Yd)K+m!m)Z7/KM\c($%f7+L)eSdKJB2I
%[,P1O..&.\H)gWA'TCYX7(GQ6j?k5P#RqOT<APsXklk704&e5npdj]_&/]+`*$5d^Q=s.9WijMG8bKAdZ],ah-.5(V72/1)caN^W
%fSDnUne)c.7PE/lZP-as`N>+V\>M`-_4[):lH2Ye"$':'XdhOIYS$E+9Q[Bm%>ga)04:cB*##(!b`c4,F+7cWCm/S"d1ToS"^du^
%"+nR<%$sY]CN0#@OK]2,K18LqoZ!Kg)PRGN"Z#D-&@HH1/:%^:;R`Lc$ube>:+%g5f`hMSl>,lCA[R'Pj="`]QPM$*P?oM2SQONg
%oW4a0!:Fm%X!6do8eCqNa8gsS87l;rA*mf7Ajob''BcFs(6ToY@&^!q2t6*%MF(/d'5mBg&o^o`Ti!]&'lecRfTd;][tLF:MPsBH
%!S8Y^.S1OFkfJd71/67)@l7R^Eh>U1j<,jB](\6o5RnBAO\<csQN5s&Nrm\[Zugm!;GS@2oJ^K>g$Jh]7_pn'$4M:=iPM^mqGohP
%U(:7GF^1Y3Qr9(F\5[HUbD:nEmM.FE/eKr]%U?4XAd;OVcsj,YAn]N<&gBj<6oC!XY3&3uRJ&dY16QOqrf4#@PsE?9XtZaipN%Lb
%2p42cD,L6pAC(3,.AGal\#RJg/;gWqY!=eQWeCXp9oG/Y0?IKb.BKfm<mO(MQ-`F9?s)6j!4Tf[p2l-:'oN>]:EeO64eC3JjN-K/
%-,<YNe+!f-_=DObkG+NmRYN!KRKBUCpcK]dg(f(HGZfk3-OG*P_9!0mC?d*U:"]+WhZ[lW@m2T4BO:a/*p\5?:$+^]ATM`3)m?t_
%CZG^HUY'(T':07VE@%WS,#U>"HGr46#THX+_$=V3e:C\>FK<M'*XjAlZ4XJI_,SH!(KCJOPq'L.UMf20%k&eT:I4q_ZJgl\YL/SR
%$!ttlr/a>q^*6?0=7p:eq2.Y,M>H@eVEFW;Ob0/Cd*A1bL^EhRA<u745QRpMi5nRo]N=g:oT2nBs0;gOdgZXh25%L<QA<R%a!)$c
%dX!D/efO9QQ.YA<,T'ln7ul6->d>RkLI[tR,[1H/9dd+RH\mE@G=\TWBF/./EU&F:GH;B%\^64e9pQKfgbB$&JqJ;`&Jrd^X=*sf
%P,]%]a+8JldS%Y^n-11Q(\K2('<P7#6&0X2fJ[oU^mK-\gK&E:QltX?#XB42TTq3IVt7\Lc+iAriEhSY4=hYsBT8C>CIe)7(A;P`
%aAM.IA5,6`h6EReFMR/l[N\9L+cYqVPII'CdMF3&3.haq5p]'D</>rj`?>7gZV9)c:Qh7#PYcA@Q_)>@qKkaI8WRo6XMUGr,ho2"
%p"l#bBoEnsXX+6c^loAo=QMgMSeAZ!@*NnYp*a&On>%B4RB?T9^<F\YEG8OH-,\V<ed`!R#G9)cQus1[=B.3Y=^_s$O<pHo:s&pe
%!ZjQC^oMIB\cq*u.KeOMi!mbkKY6=F30m9'l->+QC>STR9[[ZYIsX0)/8BLAF&j>77OEqPXJ*OFdPPRn&%+soPII6t?#]';Yip3W
%(!mmc5=iX9^m-q.'\9HKBU0:hD9+V`5aoH"eL+/Q)"&,IV94tTXZCe!Ym6f_feX3bRcH*dBuS471J(A3eO8Y_gtN7%=%St'bR6S,
%8NL&&e!U?HTufYsNY9M$:cm3;T,`!E]("[CWP+/4D%_.>@sc9-"(%IZTU4X,/&@5G(:@TUaI5jB>W8jSTu@X])m-hs7q=q!>2?`@
%<W*6b6%To*bn=M;U&C"9Xb2J0`f6Ahpon:,$dK!,:3JJ?Z#_&;*#$iM]<NaX>[Soo(1Rk^o6]slS23C"1rWZcU?+f0Pgok&Y;N8B
%mqZei67>DBFkR'1C4_i>Sse6[p"pD"?)e;SEN-mJPip+6bX)d!`N0t8ZAHiK;S3/>HdnhR5jcWI=hHf]?Af>0L4/4QpAdcN;FF$!
%"OU+H`pX-[ao9./!(O/Sa?mO)qZ%(_EX$PoZ5aG6ZNTS0?MVCjWOn\I#(V-#ko$GQWtDbWD^6>AbcmOq.IKHGP*IIUmc[stq8>pH
%A*)Z[MBWpi(o,&6N;&/=Ff:1o5mN0Kab)(Q.E4ZFS[8R(ZQWcC,GCC!.)Hg4&!'^XFPt.B<m&);^-h7PJe?M4Qo*UAO/sRfLST\f
%eRW/fhsJe[XPn)jlUMPEcHDk\0"K"g3GS3f3G!GeH4%5F+;^2qC8]I[,>\iq_\2E::i6dk';fba%7,boMh3M2fc'CA@3c2naf#pc
%<tQe58e[B:F$0J\K[S&0Ce+fpHL+Mg\/QEe9/?-%J$-#R<548b#Jqt*ATIP#JQ5EQ.'.>6:H(RZKrl%>mUT?A:Si`?ffYOT),r-p
%Db#0pWDg)R3J+h@4@m1`kq;?EU7]#,?B40>pd&'bO!X_L!P=,&Q@6tM8qjo^:DoK;c!\10;orG\n>T_:=I-j9#1#5AR^EPM"IU]`
%e`?g#<!4'^6VN5fSE%kRlGU[2E2ddb'%ISp;HQg3Td\NAFS$ht:.g8Q(KY>%/]Xmq(9`a[g#otrLNbPq)MK*GZ,jPf87IV[[I*jU
%%kJ)cIP#+?PY.LR"CYXU3LB#mh1g\OH5I=^r('tDCNVMVh)VSl?G\3IkGIrn0d,.JE/B]jV5Tf8OuJisO>83ZPOu(qLRpJf)Oi%8
%G!QXU&=]M3Ol/,?\kCA$cDr*Ho/u&Y`%c.1;_\&3SLoP,OjIe`4,0:Pd>[nB"XW@R-gP2a)Qi?SqPomDAH**TK?UEbH&`/s<X=u.
%Np2nG<B"AXd%hLCjM+7:8a`i4TI]5VcTu'D*T^=bY\3!+La<?PkF]X?#t#$,D_@Qk&!t=,9a#(k?VZ5_:l<d^R>.J:0gd"D#W!"6
%#EsegTU\Q=7Rj2_./-!q-)"Bc"Q%kX-"M.R@.k$m>R)I*@nS9W'o/'dB-6()C-*k-`u3s,X+u.;Q'W][W[,*k]`G_$ej)<;Yo8;V
%Bd;PC["H9QEJSJ:l4O-JK(_A>7\pM-<G%+-P]!1/'YLkfjimn/?5%_lqe"gQJ`u9U*e,>ec,q(NDH_^h7oe`od#0l1<=A[Z#]`)r
%A3+se9TM4i]aEUk4Ds(^5Yq(CP+l=Q\fRG6Nl,R'd4c9IVa,"td>P<$KVV,X!]5.QJg=[>$Jr=rBG>K!!T'FHY(<>C[,fBLQ@RT7
%i5:h3kcn6H`[XuVYF]t[]n@fg$t=%57:&[F)MsmbQP)AoL]CmMBOoL[n._,r[hBUt=7E1-Gl)duMejE661m?1pW@L_@DM1Q<f?6$
%A6X9[Yc0`1rC%3%WKABVW2h?gX%#h?kO(R_Jt7j&Tn*9>?W7&d\HYorM1ioardN8qhL6#f>'4&J.8h[9@0:OBV]oC%)"cbuLSiV'
%\VORUXD8_>5r<RsdY!ma1k--M02pY.4cR;V"a[hJh&5W0Y&\b$@MM#)b>n1E!Ck;)d\#`s<n\6^3Ofp"(YT1Q's=GIAJbh"a!-i-
%2GYd".^-:\_F:?Y=t"f`QDLTG=OdY9F+Z;S\8'WQOb/d*MWo*p?8s;T/A^NS.":Yp\r"62D$#A'^>^Sh"b`O!aK"A[i"kD)#^Vs<
%#9Yiu3(K>Q:Vr3O5T;Q&&EFI%kXbLQU"=^I/ScWM]4L10lTlL4NZDkFki"4eqFPH&@8PTS%)!-Y7$\KmTH+snY"#np(g*/`%T<:L
%e-H>U3)BtqGoCDp=%AOu)YiY)e&`ooD&Pu(Qk9&OX=CM!JhfNX`J<Ifb608k*L_aHGqANfEu*XN$WYdhQ3U/2A-PaN.CK`;/W+KJ
%=[/0*64Y/;`/j5tCT[.PSC"*8$(%LBE?6S4IOOa2<\5JpndjFtQN0=<dO\-+V]^`kEae"$=0NJH*tE>8[QJh#BQZM;?^elZPQ3/k
%9pEpRk9*P=$`-X5nh0a=+Vgdp`.W;"&*G@T3iD(+oM-=f$9d\(8'76^.-(BG0dqXj?o?/YU226*=V<gk/>l>Fe-!G)rmmU):d"'=
%4=kH(,Z+mc)W5r4O)[MnRMTCGoqc%4WA*A'.)M]tbR#JM\:d,:)Z<p([fcJm7."-_m*hgYa\L'%-B<ia4;ArC+-eU/32G\=jO%ab
%W8h;tLW#'@KJk$FC[@Z3'bLT8,VFY3<:E07,ht1E*c%(#A^kcu+tN3HP([lm3m#51l<tbO1J^>WS0W^UpISSc_X`RY5ER9j6qQUE
%6rp%55tc0cTTPcJ^>dYG)N"Zkft,<?/+HSir+[?JRd@r+-kp^f1@9h-IYg]40D/';YS[O"_5&/FVO&#OZ91qp,;$FrjsuQ;EFI+\
%^M%KK,tM?`U1NRk<bL+21_UT>IA)4'nheMgU+]XiU*(7>AtfRVA(eE2BcZFX9Z#4&<>2R>@"&JE'<:N5VlWRK/q>tuGn3%"8-TY!
%^t:-JJQ$>\U2<@m(4L.qSVD9>WhHpt$BPp),(#7u(UBaM,\%O?V+=a,*0C\heKjo\%P]TPW(*%CAN^fS@T<IL\sZP<Ys(U6D$5tQ
%&dgk)\Y(-XM*GR_6EY0['a`Hk;$uefH3/`Y=OX<c&C-`7e$LiL7/)M\$CE*\XN[57"Y-(0T]jTCEjZDAJ<D-ZM`SSF?5iJ@&+arN
%@5:T,:0*$=kU<S906WNj;5cjI\15hF_$Y797li`/CJkO8,&^XdR%je`7^bpa:^.3oeu1<M8UhUR.Bk3n@KY]%o#X6l`EVFpBQYk<
%?)R0G;=ohc3Mg7:1>[IG.#99RQBeFLP<tuV),pD]--864-sel`'m[FhDBV/76hHQ(HGMm$8f2/LZiM/t1f"/$4V&UTN$l0`OC?<U
%?r3qeJ3I9mn8P@X[R6Dr*]dm0'b1;P6,V@F%M(b(GtBg-Wt2QI`C]-t&.bHL<EC@SVll/pV">oPjA1+Q2"?F)$Ph-M2'AAWOoq0:
%1)t.`QpEIi;#:Jko9.*E;=eanS#0$GJFj0]:SSF,Dh8XK$YJWDM`aJ^iY!Wh<3Q$(_;2#"Juh_VX?>Jii<D@gX+P'7H?JLgiC/p$
%FB')jN3;4S*$m+42tKH]eWJr3Mj4:?$Hb\C@E@_YW,O8Ge038n"\K=18QJl@`@*2>$`NTuG"QONedl)r=h"SX,1Z*3c_DWlY4c@@
%;\l209B_$LcMFJO88Z@o<@pMd^YIEB"1QlQ2ACf9WmTi3X;YuTK@OAlVOsp*$L`#"^i8G<2;tbfB:>Hh.XmadLa+>lBOXZ_N>Ki<
%?IgblXK1-frpi,QX(/.Cfj`T+VTLFp\<iq6)J/c3g:_<e.44k0@$&i^D$dY&lX,Q`Bsn8GP^]/hO8&pkTHkS`B=`q9T3jmTcm>_'
%&)[`Sk^n^6]mu37'Ic"=kR7o4JtGpm]`og4AQ:/o`IpS/\gPVtGd4B;iLXb_.p5s#9F&]B1k?FN+_1YIX(bPg[Whn.r1$/RAIW($
%[pYJ,@<A^hd#q?cl7o,S_ebDWqog9+*q!/_*1R/ofr.heYUCmAm\BNo1&WD4PTJ&:,)5!L-\B0s#kB0r/Oi2f"M;ep+l#hkR$2Yf
%1Rc\]S>(,&?:Ibc#)Mn#?MXs]PMqaZ@SqkD<.>A4\]PSpB`<JFNn9kE%efK>Mld3*J5f;HhKgp$HYo0Q5J\u0#n06)Q3rB5adU5R
%V:'9#b(R5d5bC@'d)o$]@.cQ_h+BA`=8a!<`IPR*NHc\2@TFc;!^%Pj12(al&;-lKF8[D;(5gY-`,g$30kAA!)3F^)2N!ZJ3n)_I
%Wf*rmB[S3#CoKP`fah%*NEMNPKuNhOPp]Et\AEq[6:d)AHm-3anbXS@#[WDDp[RVgKu]n1Ia$LIMM@B!UoJ;=@!:b`$V$O)U%<mr
%$ZNcd7g_r^)GCo\O1uBSiET$C?(A/^k+^q0H/eCt,@O>)QD*lC#np/^QD#Qe/kC$T=rjtr)#Z+:0FSK*luFi8H+p_%8/2-^-:^ho
%+k@+kF?>WuJlci0L_:co]bpa=IXbN'Wgr&9oc6KEkeToWC\3L[MP<oe?_5e!&4VYUlZsu#X#TDJWrsTM:+iLP>!UJ['YKDq$Red2
%d8tTQX&iCoNpD[lNo?F^d,oe\%@iQD`,-$fcAK1Z2cF,HGT;n'&SLZ<_=Y?Yq5M#7#kBZHch\r1AuSo,HSufM-(bhG":&iK-V2#u
%lrNt%2+fV0S]<Fd_pM$T<728FTJ*o^1]`OfA760i$_,2oZG`fd-t*:U#P)EirHf]]pJssJ?BFMcjkQ!pX9u2jM7P;A#)$"*-[?iL
%/NYV!$7F_p!$r=6T8JDN]afJ=HceJB(sUF2Gk-;S+2B--9uP+AIJ0`rK@"1d+I:6-Blm>#c2eH>>Rsm12G!:l>KVV([9g=KD5.lq
%5\I$EKn>R4Q/nZEJDiBK-KQFQ;KsFSPc8#`#]_<\@l3HBWt%Hs!X`Q[(e"u@bnFBdg\A4JhRn`$#^tH:a6(8b#mFPk#psXWBe2h\
%B1(/Ya>FA\n.dGr<8VJ%8IlkJq7;oNG9e1Ao4p/mbXN2I1nhD(Bu%J2:QSJX--OGHbRNXtE(%D.CUV^)/!t$6Ba#;aM/3_?V^"'P
%*YrkV=riV-$=hIc@i%4Z;+M<pWPfp\P0]4m?N;7=md8tp`YOiP@`a;DMnE@9&Y8!g9R_I2'a!Y01hUo0fI/.qN:P@VfST:+?Y?lT
%cLK!Ee1'>H5X(Hp+jM(Y9JF;3"\O)QU".q!:;0-AWD''A_^oR4KiEVGOGlKt<npc]UQO+gQE2r]$acRf==qCs1J,#r^8S9npC_hq
%9Mfe4co?M'2TS:pZ:(e'XY6,hT`Hd$g0kUS!&J!(r0VFNhJ+lB+$WRsn$&fW6,'AW;WMj^"[JWu'DcTO%\.bS.Bo74X;R(a@b+*&
%8NcKh<GiobOt]j,Mk_@%]\'F<XM:*r-V!6N>`.;dLIeS)"<h,a&aA-]&dgH=Ngr@A'UZ_Ih8^'(iqN^(/"X:Hq?FVO<$dL@pUd_o
%1AQ<1g9Aksn#@%8,hUFeg2lUSfX3a[%=1=BP"&[]i,>DF4d;:N`<kaUjn5oi4T_dQdh/;c;_5]c%$st5^3=$E)j48`a%_KuOL>b5
%/PT$#d1/XpS<^CP]MLpMmoPUo@HEF^P8d+B:AK>))F/P^]"saP]&&=>Tn+_JCBK38OIS-\W2ciL(VWS3KL:F+<HTqA2T.rDWCHVi
%j-[EKLR_&^]tG,*[;nW5*PD=K&t$MU[U.+]r]lqb<qUo=J5E?!"?M@3<e%l=C'kaeKK\+oWU8b(L8h%Y:.BjDVSB!V!8L)JS4p+&
%Z@\U1fJ:!6N`E5'f>9O<g$&OB$!@noXd'2hIIt>$NAk=2,*ltcU+-CTFIl/4qg'KA!,OD:`#M!<NrDF$8ouYLY&l+5n\,c21aA\r
%0VD@o%O5SX6A[!YD_47qQFg(']aiO.m2/n@^\_R3_gefeqr?$&>[I?elKn>kh4%L'SD;sRDm!4=I/27eePuO[^Kb'8>V=><-seb+
%-dU#rF#YKFnFNuImbk&?q.ob=(C'p2__:ND5MNsPg13E$XBBq]q!\5;MmN,r+22S$C`<uIYd>S1L)+V6m2r!![nR#pa"&>>6Z4Pe
%H2mS*E[p&U.RKEt])>^"Scrqm"pPOHW"#V$[Fkq=R&4^L$[;k.i+`3^n:*<G]DdSLB-2iHQd6/Gi1\G5I3#>GT*bS"R-r+Xh]o/,
%2.74Drh-Y'@W)_2qZLVIm9P;O_)Iq'[,o]QkQJM'LAM1J8sAiAk4>hnXBC@8q''=fmLf+F@dSPIr!h0$=j2SSg9lp\A*oFpb7VD5
%gie='s/<)krM=\$h]6Gjm5=gtHUQ?:Xg[3M#8t^CYWA61D]HN53)$s_^-Q^l5Pr2VJDnqdp+O'.=o,LEY\BG2d.@175B3r+c9q/r
%S6+$#qCeEj+)7*<djIk_p9SH!GU2,@nX\J\)SZ!M:E'0D^aNJ`X!3p(&Kut;9PSd4W.4>ET/;bh*GQrb3DP?PdBn(tD.p?S^VaY;
%N;W^(hiZfO,coFZYJL#L6WN5GcG]nI5L*(GlKd&jTQ:uoDfCfo/(.Q`.I2Tp<W%uH-FHd7<X#`)@$A6)e8%"/og+>tjEE7Y]2R<I
%'kp\9WSM;.<eflEemT>6]@QpKf+`@mkAj!$ro/+PPKCY5q@foM.Hf]AnfMT%n%WAaRaA\#P6^_d;1FR8=W_00iK(@@lqk;Hl;[kW
%7<J9^qYV8TqCn+Ir8#QHDUqD7He?'/Ft7G)JEq[9Z)&qbDQ*8L*g.&q4MjpsG.e32&<5EqGfB8BCUm6j^\FMpH:3lj()[^D4$HL"
%3-JDIr,pEV`=JcrbE!(>PF`aq^3.i1G,oKTQ0Wl%l&2aJYJ.P-^UcSCqWZpgjgZCkIsLb8=0M.4f$GMRqgX+lj7u+olIe\"lG"/8
%d6@NujmcF(B1r0s([%^*kLWc_2o!#c:S04fpQ*LUX7jSd<l(9s+7F*6Da%>%^-28ec-=Aq1T.G%0@"I$=87GQI/<$,g\s_<YM3Dj
%0Cb+<1EV+Pq"21!jOI&T8,dsXEQ?E'j+0^."2lSFVl;T/g4WgF1uXeG25*b-)3+Fer9X.-N/$hCgYJ5ubO_?4h9K\n4LhBQI/`:F
%T3o6[Fn3D`]2@a(1E$B,D5o>B5Q5eNHMdX:mcpn(nbMiF;gW3,93f+.Eclj.Ak(f-:]GlM;mpR<4>cTan)_TR2p4GB/H>H^H$)/\
%H!,EA;^9)k]4G&fQX?BAT)=!sVo-Q12q=e+lgJ`;DbhHY)i(<(_<8Ns^R3Q[ajZ_oh!NqBO*;CWcn+)14SmVjgSKUBX?l;mb0BM%
%h8Po_5ouQ,fK<,GqmJQ#H]_Q^s/p5XlMU?7^QD:emeZA6FSVi(PLm"`:M4Kc=*$:2X)/qhk>r0GLXUFVbr+Ru2a'"XqXsFAjS&F^
%7U,_a)kJ]Qf9`\EhjiTLRkBb$$WL0`?%Ged=MA$f[QhoO72,Ab\SZ-+mN(E+r[@MF3QfT+[I<<NDT3gUTB*HF,kpllUqPZDYHH4/
%m*B_H2J.H)gRmSVm3(/Ujn<>t-ZbS8E)5CK2m3hJI\$pCkr^o*0tVP!HbTFTo&@8_-YM$qIqT)C/tR9#lc2B\'A3(mS8d??SpdmA
%qtUQJB@](NI!el[qXNS5Tq,qR[H9]Egq@uSIWG,ZiRVkThE5;XS^#i.cSi;rc=t1d*VXB&>OK/gZ1Y0Loui\?QFCe#%6H](^W*_L
%j=Ho8g@==nk2j_Lo"3A7M`E,Ol/S6ODASt(6'UBnou6UKJ,K60iUb]4s86G7)sOp3P41+^j3?oOl.:+ic's3&4kPjOBZ:m)XhMD,
%\bX--?=.%kYN@ZWr@8h&i;E9h?!k:U4aF7)orm`GJYSe+g]+q`*W:'!9DR`T9bhYK/%49l@cqmRI$;`#Fc:7Ac`_5IkF!NCs*3)h
%Ni2.sn#ngPoZZ0:[XJU4:CG3]g*a,\6Z(H#4R_IpfX;N&`jYBGLNK)l1Z4rYf#@XNkHr'DG8oZq>(>;bRPe_/4_0A;Zls73+*fnB
%o(Ueq[sh+8\N.EQFh,/UdkNql2dW$3IWKQ/i!FD<3UZ#QpjF^,n$A*lZ9uB3hYaa62n>.+cMWOm2#H<1CU&rkq-[7$O*BLD1b5A4
%gOjn?502o\endX6cdDFY`UfS\nt.]X>5PslVi\Ar%qjt&hjg4-hp$Eko&+-+RSP4Zlg4Q/A<(GNVbUh[3bE#PZ?$6'#EFFa1k"ul
%k4Pe@MsI!I-kKU-%!c%"fREAEd`(O7;R!U;/c3NQhfQ/N$F-C&@*SOfL<jOWk4](c1`gFamr0!-XDZ\aM.,PF=$)l,59ijITA@h1
%gLp7FdNUF/oWg7lc]#m1b/UdJJ:`PcFN+JlDXPJUP:iHF2EGVcCk'sUO#)O@m]9GF)RK+>NmD>t#*3)]>[8p7^0=np:ZpD8f"\Mi
%p3f$?Hi*g0>Q;j#GFL82hn6Z_3F,rDYAV*;H+fDGN`jGQ(2NrWPCL<Y:[t&uoMTsRWu$n8hjlAq>&c?gUq<<tc`jD9c5uY00oDH*
%j,P6rp<0oS[I%;XB(a-O:\?`YQ934cQsn4lSQS1P0i&gr1Lm)l]XbbH'<HhID5o7%bbh(*qVtpk"5__>Q01*VaHn\-a'P?E>g*SZ
%]%C7tDO.5YcfhI:Zh)rC^X)0mI<8Di]"5VEe"kIA]?@gqq!TSi)BRa7ZY$;'\(>\Cf'<dRiLtnLkQRO[I%mMseVo]MT20p(d?M)O
%hO`NHgkY.99f:&:B[2ZX);Q:1(Ho7,VHfWu/Pft(c^^S3S:5`H-O4+*FJC4APH4;u=UWgL+0,TA!6fU_p5pb-EBlU68s(NC)RCsV
%M]IgGRFMc$4u&Z$Q%<un?i*q>DVI>jjcPjcV\G%EV_Pfhp$?oSapcg@7q,>e`'ue'Ao)rJb3;i^7@DVlI4WN)(?OGYgH<S['`/i*
%7@CQ>D#<YmUgd1rT2I5_SAsoQ7_S,m.'rbZgSamHNC>jU9!Kdc)RCs#r^2!GFtok+<aWS]Wj0[[ghh;mX9c"X:[B-B@s9un;/<GY
%)E]HtiTG]>nHJJ_?@6,gd4XioF"DdP6MbtBE9tWBrbQ[bI6YluIU.;mFY3"4[2H/U^TQtU[Jd\F'C4?oDOP+>Y3jcID-keZ0M(r=
%g4!%K^K#-SXR2:\rMm;5eXjp`2L:$_Cr!g!D6IKi/,31OZ9..JgeX^>T14)jNFohTrA<5(UWJm[AeAZD,>t;OSJ@5G4M*&%X=Xq>
%SH!)En]f%p0/#M.2W.%C[(fgY`_/A-3a9<\^O#[Xb"3l.lfH7U(UNl@_m>its*)`&h1rPr/2+1KKUV79/piu/UG^6?iGIpQ.!lTL
%^II:1%4m`f2s8eU:c:+P(A9Os(,iW$2N.9YT='0Xs8Q7!_r>ZV>W-d-Gou%h[])_ll_;7G_a/K&n[YtY)W-r*rcuca/V`e6F*DHt
%jF;+:dFRKF5PWAcJFdG1)'@IsYHQijF84@2&$8e1id/&TL#>L*\!*l.$tJ2P*jV/mSH07<9^S@tL53Wr->i8,h1dp?fAAKrE6T7n
%&,GoGD$[bZ<pdur3*XefqRuF[k5=r'jmmT?<kktfj<MJWT>W(eMiNVfm+Zrch`fM-n,Iems6g1^o'QCjgUcb>rP-,)qg\KfhYVfs
%rnkEhpYM[`hZ*IkDouSIKX!Q)&NmkSHo=oeh"uK.e.f:OL98/8GOP.Zqg@;14+:==>[7=,mLHces68'NHf3fr&=#%4BCuWO;r6Z^
%SaU0rhBu*;EN@C1?bX1"ZTPh5C-()!S>BZ])]R6EAh<%f2_WndC2TqD+5cXsDqfJ>*[a`s;juO:Vk,(*KIp`@G-JZJm!<RsgRH<6
%SPHK*0Qq@]gRH<6r@.*>T5Kt<X3[6#\GWFF`90?jJ+iX.l\jllB/e#?c`V1]Xrd4Nn*ObW=RaHAF6:S/cS+a)+1c9-ZA-PdRi6up
%7WXk3mF+c+g$n?_bqrdtj,*IH<5=L5VL1Z7NFUO.GB2?F`TSc*MtY/GXYrAUH+c=WMXJ`aAI`PFW8j3Di?,8X!Fh?`DuD1*CZ(/b
%7;D]@-Hl(cljYUp_opp+Z8]G_%56=[_opp+Z8]G/CYK"K$Q3:'$A8&=^#<O\:S<'PbPN,_2Q-11SN*7D0d(nb#G.Kp+MHAEId8Qu
%:G&@8ajDFVh.3n7Q"d^9'6>9$gCB^?"$,"WfYj:<lsUS-Y.`o\gjCh@Y\s@4`@"<I\2_8%k2cG+Hi&85gu8KSgGd/9M.s^brqk<H
%XksrPo)u_`)`KqBp&q7j7::G&IbiJ>p@P1U%F`Z'r8P=i-YM$qmk:[9X[%c8<`]2.[amVmIqr#8SPNmjEDbfM6`\KX%d"k&)d7=:
%0]TTAHt^-ia4@G#f.ULF=l.#3\65EJ>`s;Jc@:gjr%4K@ISK8pc,7?*ounYl6$B/)p*[4Q32%AFq!ksdkT$.'K.=pS7a+^j2Q1]L
%?tM7TkOZ#_6%Ssh`Z!n#2!3>/?9jrC\>eV442r>M]XMD;i(5'Ym2.p,VV-5V7X5&YN&bb-gG-/1Uq:D`IW*9ZgG-.=BD-M-]cCTQ
%lkj\.]02Ps^p?7t4b`L\km%]Hfh>N.i='\JO!ek3J%Sq`n(mR"FH45Ko),B=2@#XjFa*ZSl0ZUMBB:.p%r\IF=4c?cT&6,'A:^3i
%Vr>2TcS&n<D=[=r)Y`gbUqPZDYHH47Ucd#uhUsY9IP\%C%"$gU:mU6#Al![.=jYNsc/@^.p#V\a*Zs.(fjVm\[3m<'.qO':d[lg_
%Dl&h@>L;d1SDF!eF04))T,uQ>2N*!0Cf]!HN'Hc`%=0SCchDWB5Mf\QX`6:ZK!Vi2D*N:6TdObqb9V(EPG[(.9CgdU8n[>t+7FTe
%f:41(Ha&i^9#4i?)RE)Q?@@`\nPFE/hP'GW*"(iT4C)IpN*qsb/Y:_*'t3nlG9%<>bn:NrH?rFM4+<Kbf.$UGh#9.>5L&RkF8OGA
%r\V+EVn!Z`rr+bK1er*J3!;<hR%)L/rF'T5%WbE"Y\JZXgE5VPa1;.gDL\2RYTSQGE1i]PLi#B)`M[gRS(3m33n!uYp%@!62^`ZI
%f)9m^.@fRmg<C6dc>\+Q_ralMAgYmna>Iouc^!/S1&"q0*TTh/Y]3HOnbOqiN6U#T/t0@DpW*<SNu'1AJ,=%JU?gDYVrtP(r5U@(
%opa]C0'3uTq704Z4)F$mRR]0gZRaMgO"g'HEYcpeLo7cKr5Pk/44?teZ`:])SE8/I>2+5t^:^(Fc,se9i2a0phR4Jc*OGTr9b"Yd
%G>N^3H88.@R681%Xl<PQO05\U(A9b$]@Ch9Wc^,WA_u4u]KA2[cL&"'j8/rF^XS4qpXAQS^,5l0h'W[nZ$s^J48J(8jkVHuPWlXW
%N_M<K:s4djBr8FfG]m"[_Mr[?9V0:&T>!;*h<&sR)t<T_=V4mAN`gATCNE^Yc0[B@Xk!p;l\=8ed15:m"f:=1prD^dX5tmTHi5I!
%I%$/>^;k5&r@<5kBWi+5U/JAMM*?/Q^>h5ddn8#7hAa5kHgEpkH-7f7O0/WQNSTYokkshAB?&5ILGh$&Ao-=RHO(]LBnP=22U#=6
%rjKXcCJGfiMQ`DS+`)HXGrkJtoBj'B^Fu26SDV&l>gBoc@]/q?Mt>\A:<jqD6LHeQ/RHf4I<1pb_/K5532[5_c#K6(WNG%oht$u`
%h]'%Sbl)/J`a,qomk5X8<i+u!(AZeNO%6=k:6(..FTqM<`lmf=HJ9[$52.oWkah47*S/ne*)'lZLAu>P^JsdlI`$Z\R:PmH/e#b%
%hmtF9>&c@&'K`Qnr2G,Ac!*N_G'K:fFIk/Celgb@9KXn\n#7Kp*^:lePB1F#)&WZT!KqFVj/fW\P`3Yh12WgI?iQVd@5g4DG8N+*
%*dZ(p*,7Rn/9u7:G2PuC?MaXmdXZO'LuA7.B'Ycd46LeZS^aRXNgc))\8/Eak8!9[['@JMqr-Z-k)\[a)mk*2>7\?b%0+<6ac@7]
%s#8R/3-fgK]oA<Pn7K:,XsSY2]/on6-^Tt5]J,9B0\`.,p8?^dAp1qVmF!D0^<tjM4Q8WKoCk0k=)VEj\Og3;a8GgK2-[8[]lu*M
%hXIe,&P(Za=\X3\qRE_Q0]_WmMi7N?kLYaGI>I"FKNLE9%Gp[hUlRb?ZSaE8E-8%E+e^H=kf$WT=5UA_O>1jmo&n2gcEG7&4T"?C
%f2<+Xn[i-\J%WJqVq9blmIf!WcckD?B-3P\%mN;UkjI+os5smGp]X4&LB!FpT-&N5:]K,Ip"(PfH""tWbJeu2O'/!\!e0n[rn)\c
%+K+91CTVT=ZZ1mr&pa=q%%ji-j!SIMSL";a_C*U%1K?W9=r'X#."!L1^5/EJ@BT5s.OPsPBT-6dn$J/JAZPu]3hBAm&=HR`APr=E
%X-@Q"a2"P1VcL'4rR>W=9;4mMhamYD96aTHn;gJHQbt1pk^tJ^7GIh+1Y-%jXgO]Vb7:_aIra[*`U'N@r)0&KTCA\,%e>A1cn,/q
%>9VBI`q"/"_=5dGTp+m/$Q_^a)YuM&(5ku&IkFWhdE[4?,7M]OrT+A5aP#RNS!12MV?eit-TEjl.Z@7eKW738$/Y/;X8bI8$gPu1
%YQ'ANqGUYpPKSmIV[n7Bq>K3&OTOFW%Xn>h9qK*^qku-k@>Vn'=a_6UpV!a"PJ5]H5-9"F=spl&P];m9ZeG6L$kO:C8*^7l3nRIt
%NFVQhg>Of7=,47&Vj)<'naL60*34^)I&!SMNtI1lIet7%s-FAmBqb*.OSG)*\Y+T9So6d,s'*kFaWP;-jPq%n_nDV@'Hb'qMq71e
%C')uTdr1R#(DJ%tIpDoS/`H\u[Vmg;Y3L3IkJU_C/,Z#WcHlL),t1UWr$(_21d(_R>P?t0hOsK$HeGD_IaN>EkL\<%P=PXl"_[Qo
%h4:1C@drmq[pC3([r-)=U0smF!CQm2T.GHdYAr=Vc/ub=VeJ1V?Ge'm.m))uml`@eo%`'a!(PDqA;9d'2#<3FmrKSeo__oW]>F[`
%7tu*Dn+Qi7&fK-q=U2?^m_`5OjC-m1I.ZoqXttg>$T%p+Plc))2o4dO*W57X[+E(kr8DRt%Ig@F0XT!)oSd#=RFTX4Sp8HAe[N'f
%T!]pm4X2K;I=8Z[gH$75mMd1NrD,Z4q`gR8dIlF1GNc&,D59_mU5t*qa-p-KCPL].C*cb#.j_k>hD3OAm'&,5?mnq2YfEpEEOs>r
%J+NJ'hd"oMs"^Z6D&77O^n,liK<=bVDnTl&o["mcK5^eZalF*&q8X!npqeM'5kQm'MgVB<>.F_cmr&+"A$":7bBeMJq)>[^J%%PN
%3IS<HW8#;SYBaE_o?S,F#c)b`g.3(2jHL-inH"E$5:j?qVNSf)9f4T.]8"Y01^2'r[1g+77(k;RbeJAUeY[-nCE$Q;8NH1)-bh%$
%nU!X:L?Gf3]s)5J=HS_&Ms%;3T9e^Tc-3DI+X]c%gB"74oE4!"o?`43(WhDNQp\5??bHK*M;J1s)n\o($iNdc%9a3L#3mJGIlpM#
%+cB.2]"\,dH$Xm[enR_XE*eg\-Gn0nJ,U+jnGAR(2jY-u:IDCHe?eH_QS1Q&F+)Fcoc7;.oV0rJ3b%'mr,B+D1>P#uk1U.ID^!6l
%8&^.9nT9E,VS0ZVGiY7#i6Y!uH&h8DG<+m:m=aat-D?F@Z-`<`:\m!36ii(*$L:@qLWP>rD^0WaOLWr)(*mu6ea4=e:!$Ok^(q@X
%lk>FoO?5SD2L.C"b/;f?8AaX3<O_on`PZjoD;9Ka2/=.74*)rlTsW/fh<.,+J`PZ7RPF2KDYVn8UCK2Zl>^jKlr:F@jR_*#SgCOM
%a!)I^-_Y7P"5X2s4:KO,<aLC.`>`-99-d<iiYL1"f$cX^mJF/EN5'8aqr!kNdM0XXco)^nZK+EZ81t@#^WMDUHRJ!T[UcahT=B5B
%d'm$/>Hfju*;2]<1q&&u*Am(,ltG6Z&O0D<i6,lMg"pRr+je5IlX%1ei,.f&m!4GL%oc89$a5dQ]/j4F^h2*m.(J"'Y;Wst.=pZ3
%1;42C3"h!_g3Bs:h,=8_pZKG/K9[;V:PM!QGu3EEBX1Nqa<DLLEdP32E9RADePc^]2M^/hmA-dg*Mj!>i6JbW>*[M)D'P]#f?<PO
%jk<n\&%Bf7KuJ9S<Q0;^er5f\gj7=XcX#@M"L56tG@s$22gHr$EHh<RlR[/.YDiPsC<82`YkE$Z?:p%1Z*:%JFi_#!6<BRWE@/'c
%UkYa#*fIZJgAYIai4oS+;k$l+4j@po!L>JTk29NP-+p&aC&KkcLRk:%EU2*74>.?P?GL==:BsKBplB6dSG]ok`Y&,dLkD4aXD7Ri
%gcCCJD-(g)N2DEq"BWYWC#'/i*U)53hBBA8)Xht5X>]VG1UKV/=W7U2KJ&N8"iIF?Z7,o6MmaKkmlD1#2c_tuqQ&C1%*H^H0KH3u
%>[!=!5Fdm3k?pt+@J(f:6/EAn[\D>`X3@0d\IJi]/9S>HKso/dSl!fNR62gZd)2NBdoJPdAY,1Vb;SuKP:;@_MB&]KmEspV3;2-B
%0-B$-q4rn#)=B/b1kHL9)`Y!!K5LM?pK=qn2B*E=4qf_rCLPsT_'!;fHN?Ts%;jPJ;?f-%P`(CrYd:,3ju/f:7:DZUfm5B+Q,?K>
%QJ`6?0_iAO`bJ,b,Hdes6'tkbWSf4YHAG4mdci'ceLocp#G]r"MV/aq(2>@!aJ[,c8mGPF3$7uToQe8H,cbcq8)@?@gJ4Tg@Iluh
%U(u509A7><W%b12^`j'qe)71/V7&UteL'R4[V"/a/\Qni2q[,)B\lM@mWqsMhPa)cq"M3HjNnE^[#U"<!8h9jrQr.0oEmcs_mI3o
%@fs$<R]4/1B\<#sC.\>Bc+*2M5N`q8c^#D"G>r:[8kNdY\Ve+S2NgFh2Q#]Ob_g64h8`cF^M="oP\hGrL+UT<jqIN+?N]tN4uBL>
%9tQjJ<'gdPbM)3umD+lXZ;e+&7VTY!R')^ccP\=-XkL-C<)Cp]mXe0sS0`N!gXT3`!h'miW2h/A4'Y)kgaV4jc8st>G`C?;D-^p,
%@HMj"i';joAUEb6*nTLg"KBsk(ZY=D%3]`>lY?U`kl,RC4BpnK-WH,"[!r5I@2+7;eJ?t!N7X;s%';1aFR]V4H1+>l$*Ec8%YE.%
%,Fi5]f-&Ym2U::Jr/@P;_';JI^+6cI27\dT[sHa)TYoK?_32$Q_Eej=7ac$6Xk%p*Kd.cO\dUrc2m2kC&fjHqYc,.*[<KWg@RiNX
%YuG81Jo>Z!KVlGkRc1&p;et.a9&$LH4$g^Yq4:ZU?mm(HB>_Q-C+FnXd+DCBls8SV<iG(YC!0U_R_W=m4`'7tR!R-)>0l%%eTQ0H
%:&Ahc%;g%QD5.?:e?Af'kAu,2eb02g8@1,3DEH1>@(MK@/5@?djR2;Ln`JBDlfI+=IIZ?sfrZ*'<d)e"oIIHGb.<5oUZmdS]N:FT
%B5oLL78m6o[L;%K(A:AR%#4T"69_NfVJ]EUY.PFr&eS7#DrX&bhKqAdbBaNWh$^*>ab_sVefC%lnJ[VQ@Y:@q5o\G,gV,T`*%52R
%1oYd]*OaB3fV,a@b^2^#\:_5!gK@h3J;Up^-FkeDnAD*P/3CS&/4=%YKl-FJf?gNelNccE7dHOq9seQ@_n6t8UF4f8ql+a8Q4hmW
%bULnVLmnNaS%N+;).":eUW92DKr8D!DLLkP*]CCVTJ4q>97'4'n59^b+req`#+#]NmF%E,4jh:(%M_;'(?^+=Y&%\5pR?J9,0M"+
%eKE'^F+`4<bUdSQYNKadeBmqK=38DlgNBBc1TIi>Tr";A_`9SnZ)1WK$V_^Y+3;IX%NBLb"P&tlk2ZXJ6<gC8*$#)[U[uTSC2o)T
%8;+H[-t8ob8@hBr9rkaJ7fsY7g,deADHL7Elc)sOkd38=elLCG^hA^FCK4=$.]cVk?50>X(61p?o2Ki9N]0Z?C9sk#kK1P0fVW\>
%,9A90pO!\k`mu4+C=A/*N#Q#-J*#!?TD>hO9=>R2*3f+D;)DQa=Vo=0EsK.F]Mtq0,,]P%SW=LpS/gork3,q+BK]B#iMio#0R+tk
%[V=)F#C]^=WV/6kG@PntS;Q/;6`r7YZDU+q-A!h;-VP^1]8b#G!fnF./9ktm);DYNP-,,R6gBF"F1(8:&!!^X=ft-aQ8Hr<B'i3S
%R'^Z`CU+g*iKLd1q(s'm$l\`kb$61%aG(=b^<*dVnBU:[8q?cUoP,$[%T$Q&nFr@.g'Z@+*5#cu$%p4Q[u$*q8iYLS3_Z:lU*1sI
%=;qA,05\5+;aGbS%^^K\^iq:YTeMY(LNSk/fWY5+kHfXr_&4pR=r>(p4df]%pK?##mc4Ei+,dD#Rg7hD#AjojL@&.cIe`^;dbgaM
%_W+?:7[GC-V<nn/hMlNW%m=UU"\'Us"t'o8:3!LB*Ph5WjihMB)FS%="L&7cQmO?Y5!eWipO*da86@CHbp=_-W;aqHI6R7(;*u`O
%*!]6iFTqEh.Z\!7=G/S3(*9PcX[cU-N/dPgj"3,-p6L0Br5\3f2p7D?r2")$M@"-rTWjj$(+O6=>K7mT``975ObN*"GYN/T=`A?X
%]EmgE<gYtN@fpfUc*C<[jEQd%f#eX)f"+8ao`dq&@2eD56"XNnq\]mDD/S@nU&SrrP2ejV<h947mXC"AlciYRRNnZQ`^KiWeM+C^
%mca]L-J\2Hi;S,sqX/NL`0h,rip9m))TE4\L)NZ26Oh80e"O2sd;RhseG?tr!0YG(6cikh_6,U8?u$DRf%UCr-0%p&O6@[&O)[s9
%=T+ZgoKn')k2NQBpX_Y/Fa8;f`Zog&(XI$fhRm$>H#e&ue+.,@p!)1\k*(#fEC#(;3k;a[s+sXXpsJQbS+q*a(U%`f(Z0g!im[R5
%gTKDUR!urA[shnjGUfJ:j6OIP>eKY9hd>93^0:CiQ1="%I(bN>YHM-]]UF6Bkgdf"l1N0;iaD;sAc(NY7\5BAUbZ+\hXf"\c7f1R
%T)N8?aIU[=DV>9/Z9(;C&@eq&d*:lNrrb?YT.WN39:mit5Hl&S]"h,PX(n'Url./VBX">NTVRl4$2uUVT:+HZ?hsRUNF7FgYP\#8
%Lnn^A>(lq;?[p#O*h!R'4uV1Y@`.Z,YQ$h2n("#RP,+#-lZo)t%j6oEW,,M"4B;r;mtHsYKE,F]cWV.J\"@miZO@,-e^H=Pp[4IK
%)?jim7q?/YHV(/KE_3f3QX]kgnX:i?o8B3]r[dKGgAbjV?a)V54,lJi&"=r'f]#($KY5W"L?XbFct"l/d^&EV&bdKcC:%HU8Q";:
%@U#\_/<'%@dP"\ZId!(LpDVSU52Gp:rVK=os3WsmWl>DkQgR%;ROu[:C6,X'*K`'XQ"4t\Dct'Yo06]*Og0Kg=>W&+@)WllbME0M
%IHB1bg7ZjnC.mH.`bp:Aj1"mr6C5#b^$nP*F\n8d_TQU$Z#ZKS,V`9Z-NEOh:Sf$<q=(R'UVNF*(^h]AY%)7g#'b?s:DIe4+BKXR
%DQoeKJ_L,em#YjqC6jnG"r]qM%Y(.eg9Y<=J?=+dKIQgf%0q;(n!Cn%e1po_UZHhBAXi?nmD":L73:E[OJ'ZI_BHYL#5'GC=1pZ1
%@cWm@MW:Wj]-2EEd-TXYe_*OS^!dD?RB#-MlS`lS%LuebPi*]]+WBX=,(7fDL,`;a/N^IAnnn0mC!X@d62pD<TfoWG-I!UZd6B/Y
%_fE(Y*k:"H@HHsZI-r="#2CLA$^Z>DHc'4gkC4IPa'i`NiWWE'e^qRV=IH^[$pZd-+)$aDK`2ar3o8*#NpF)\$;K`eaTCQ1gYtO=
%WJcAZ=7p13rK!V(0SJhJK+9cpm+1L)TV\d&13uHV:,ljif:[Q[cZ7[nF\S2uk)oX!U<hU"mBa=,laJfD$Zb%gl2l_lrb<YEpF%e2
%oufW;?+;jj^_m`<beU,h33I,)MK+`MUtMG:E%sYf&PqG>,ERJCUTPe>\%-7"Z0\K%LM50G:GC3+$;#LI",Uf@UUbdF_3<h<NCSka
%mm-*4Yc*O"fUtBDXr8o%Cl/K=*@-K/4q@=]!HkPrngpU=c![Bc!toEke^K6W7!F9mDJNL99]NWLP8.+TLFWeKCq40sP'7uXM)FSj
%09)r"(26sTXg8dd%,rZqQtr*PPOO[.5h3EES&>R2?oHSk"_UnR03k/]>E0js0Fck2e6jm9L]PDCR&Lpp_-dJOB/9>-OQ'e1Cs-1G
%@7sXFIG<^gM4_i:R1^nOLlOn0_mr!=A/:>f4;3F#)W,N(1hIgOEJCPko=;lhYZD@Y'4sYJKeV$]4YFW_!bol8L&o/#9V5`%M+BM$
%c*Y9Cg8\Y:@O*ML0dYQU;*:XGaHP**Ne%Tp`(..>f,ooPB7U[>UkFO%15"O.8=*;[g"730K0+Ys/_no3q+^rpiol1::hYVniX!Hk
%p_#3$S"WDokWVRjNCqJs,FMT::L0$?jjKl*F?R0CdYERN0PEFd(.%;'Too,_2usoJD'r;"-kV4K3NgM-OiC4aP(Z4>e<Ic,C*60T
%0\0hQTocgFjg+O5L;<H^V9@;Q"UVt>9a@R1dH-IOdrJ\P6pKp`LR"+.Cm,`tDo#k7QIH5:@85l!h';8J+as=N#o_LVI9QX8=M5@K
%Fdu<]:G(gAl.@,udX8#Jje0=eYY[TS:hUU&@%9osFP4*-S*.'a+X.a7hR"$_:h27__t[]76#'7`710MqCO$\b,,eG05A7VW[2-k*
%c>96ob1D)cG]/NecLLS7DM8]nMTV)_0l8t_YiO(9ND*lG/t#d8Rl%\ln-bD^S#b2R(XXgfFMT>!Zs^ceP4eTb&J"84eO?_lf,<ch
%_agU@<MZ4]\N%r.PAp;O3A;FN(ZV:t-^R2D_dpV$H>"?kF:D7hNlfn2E,okID<:P?,<U@jLX<b\bgJ*O7g*h'CU4Y_LoS*2RlK&2
%'.7%ENMto_WF%3Gk78+0X/VR($aCAmWPj5/\#/<WEeQt2?j)i`@n$gLS8SJQ+Z"l\%Pi)JZl9n8+`<D%=ZWb2F>OaSic]$qbWlgk
%$5l`uX)VFHQmGth&Zc=r"X4FKE%nG&-)Bk.+TqZrYXY,P'r;[>!$T2p/4ZD:20IZ:WmB-GO-QE8qteQKQd:_;/?+3)!?*=B0`o4p
%Zdj)UE*uYZ)([J-]R&fT,HuqjS'dZ!^@<t,Mlf\!ORZf7("&>EV[M'JA8l@nMe&tR6aF;j3"[Kfj\gK'O3eBLb8rpe73R7Cbi]He
%XV;,l^IOAq#%gnm/8FN=/:0X9`,UTB$h[D6:JEGVi!LEobo'YjMg[(m?a/r+SL.@F)OPM\ZDR=a/^'u_dW8cO8M<3cfFK&kbB)@q
%`^@X[[[X[,IaIE\3(DP@BE7hKZ'2X]J*\76Phj)L7R[)odQt;M"O/8H?b-!(kK,)0LcM,e=jndbE[(cJ#MSO,5.uOPgg(B6M66);
%).HUl;Qk3S&D!$?</H,=Z#V[g:4nZ:Ej[qjQm""[n:@90cn>WFI)66JDfMRZ;1f`g)<pD5_>[Id-;?O#Eb#1@R95F45AXtdD5d7>
%PC4/$5KOlCi+mWmT)l*T\/N5j9\*OeUg[Aj)nK"=[S)4n65'4JG9,YNi;P2('96Um*i$oujW[>9CK:g0fJ\6Kf/<Cj%I:5T,<0Wd
%Rb0tJ'U+YG9l/J5:aNq9:(i:e"Sppu`rQ-+9c=WC&A%4:)Rr6Pq1->"l!jFG)u\]UD6OB08;mHVo`M0\p16cX8>B_LVCkk&YoUGX
%,5CW2@C+3UF/]J,XVc>"dUOWsis<bY_27R##CfE;RUGhpS5=bKgBgpY3c0]G/'/J4i&RY@rp+W`B!I*lHU.UcnWdm8X@#RWC<Cu5
%6clInYA!Pqi,!'HAq@@L0ENNGPVak&kR:,*+A%!s&B_Wos)/HHZ6Nn2de'^]nLtoZC4_,_hb2%W)SQ,HhC=\Ns-t!jXoB\cG[[QN
%B;gP1I+0\C]ZSTpIs=8/oO(`0pW_.9`q/T_i4\"4kKEh0]F_4GA+#,Q)B0ZGF/lHN/(L9gkJ<'ie3*<EhO)Sq^KJTInESQ8s/f`/
%7C.C7\6O8D5PBB5l%cg;<q#".EjrOUj3)u&(gm49C2gDGhXI0;a.oZbDZ0K^,.23pX)I[bYL)>hrDtcB5JP$,UK+&ms86Ase<Y@A
%Uu("lh>C`WdH:I$VYKU)jkKMGV]UACM?XDtIO,lHU%JBRN:?S,_U9O@<sr^=n%nMGB9`O\pA;UUqYM@GdA:.e#@=X=,_s.teGfug
%3ViJ`fD`82o7*)TpR_BSDnt91#AEZL$7GkWTfiQ`^8(T`aaZhKIhRO,dP^FT4oP09TY,k@s%W2t\DGP9qF@=3J,.X'<6KcLXo4,\
%0D3?VbHD=>d.H4*F+-:!QTM7T.<L#/G^@_R4TG>^3\TW:VgfX5K!hA$8j8.O^4-YHJrJI!`B)lArGmnQX+.rp]`7\7->P)`ngg;i
%Zt>D:=G@b/p3X&b[pNj9]<t`U^G6le@bi/=NEg\u@\%P;hMq1Hmt56I_hu?5U@ag;=00eb;mUeOJpK(RTk]R2VsUZ8f-?LZfX)9c
%jMsDHEs^2H)b1+`^MNZCp>9$fqmQfYR^bNEN9D5if#R7MFNVN;eN^$1UILXLX8^kU8%56(Xl-Efn(#%"e72&/`<s"B^KbJ0)h$Td
%ic**MLA"Pc\T7"sEpk8Y_;*:A^"+%5a,]IRaFU?1$b21o$M&H&;@bgn@M:[g>/VYuL41\:%u<1qf[!m;pC]P?p\OQ#j"G#Aa?6J\
%W=<u1)"]nCc6#)9hNmrD^/DN74=EGG@u'GH5a"p/`>&<QST=+]*5%VbD[L*UWJDhU;+gIAmJ^eNEjO`*FN8$I>,RJm"Z<V,b7+77
%@#k>0q^^B:[O^J%EP4/Ap4i8\ad8U-44/07n<_2"YgKXk2e[/4n+JebXol_HU'GR?pof-7EI?RZ(2^!e<%PE/;ns:s'$WnH*pXJ`
%NbKse:!9Yf,=Yccqe2JJXgFCSrWq4^B"L$92LRoae#E[,o^*LC(q5ADQZ;ah-jk,rb`#\b#%bkOXAo4phAe>U'0@(R3lLU&(n[G?
%%fWDN4%P'dV*UDQJ1)!r*MXPa-cA&+8GQRRGREPRlnRi?SCF$4jZ[+He?5+,&A&uB)"0`nX_H40G<8%=2Z!A$_IZF>"#d4)7Y`(+
%C"E<Bo_1/D1uS#IQ*b4k0!fff%q6^1B>i<]<d!3RZtQ(lYM%VnIX>G\LNX9"3m^rdo$SGbPNe3Al@i=%Q9h#(F0n.p=6o1t'($g:
%eFId3b]`Y]iUB7Wo&@48BQeKm_i52@h:T6HF4CPSU"?gLg9.5sOE.ZfU(p1fOm7OXrh3?\XjO,p]&.sMf-U7Vp?HM/E&[(*Hs.[G
%kE/+1m.H=GoPIsBohYJYqt-W*Q&R"\Z$4oemFG2t(1HU&&8dAoYkjrgdH[EqO5C&A]U+puaDVXb?_);Ndu3QgC5chi:+m&bBT]%b
%INU%6esiAf26J6b8$_WB+_d^cm'ZXUh'W:f3p]M-GbG%-$&ks,=R:=CEQu)N;(KuL`42\jT:15VYhEt,Zh>VEBH0[=+mHEW>0*D5
%.J\h;eTTqfL8#GHAP)k%6dkE#1gFne4*PP;@jF5T2`,UBe"B_>WD/q%%+i4'=uhnsi;o9n,:V_TX8O&5L`%FuK['0d:VU2VTgVeS
%N3rT'Y*k(":Q=L\.O;mpeb;;Cds&ak9cYRah#G)'ECZW3(;Fe[c;ah8D5#l;NW+:81QKZ!#ibIQ>Ijm&U]'hLQC.tB^A,#4Hb'%)
%qp^'7ZA+,Vo]ft,ftlp$f;V8ELciKP"[ZDckAm3\^>s<WA*ee/h/kIs2P0KQIT*6':8dgAZo$KuRb$<%@=:"Oj.-T\\k-eChqC[I
%W;Nf@^\s]Q_)cA;-6uhE?FFmggq4VMLf._CTfS(1\U=@4r81\Znn0N2,t)sl&0#_MBF>bT]T$Qq?od%6(@Q$rck[eEc,ei<A[X6]
%*_Hm%jXY)AOS;B^_\3;Lg!D=VZ0Hs(V)ir/OeDE;h9"%hRkqfU,*A7%*)f&/qWV1idsYtd:>o:AH@niY]A:Z8,0KKn=s-G]?Smhb
%__53fUB^-6r=rV[0:GC3nr))tDbVgmjigAoh#36?g^p&oKA=YBg3"W!ms^e>)_M]j`I5-;@W',l;,R@69]#]VSBT7!lLZ%ok-l*7
%m<ZU6c>SK%)E)&[^Dq4F\JVO%]!XAH_.L6AIediu5JEO&mJ;h)pO4n:or=Qpp!7Q09fB#[6AZ]N/^&>!Aj'8JNt&k].B?,$l!F<m
%ri^cKX(/Vr<h-/e`bc.dYDPA!p_IqhTUhEmpTGYY*?MH`".rP^h5E.)<>47Wn$MuL4.qu9#N(n/WJd,"IM1Ei*plP&m>"[G=cJ:i
%eb<!lA!b!GiV`<F[<f%Hga`?b.EY@J7n)J(7R+6:5DIg/3;1YmD55MQ:j/4R^!(ZDs(S*-\Q)SmiboLKZ<%?(]hDN$iWT%S?Ggj+
%]Z]3(9Qp<PCk"Mg*R,_sQG-!7rLB\H+hg[p7o+A5m4c!bCUE0_bjrfkrS7UE3?Iu]j\\g/ioo>Z3FiA9.Q_l;PT:ahr$)*!P](.n
%FYS9V_.bY^lcDusp,=?7kktTAL62Ea+no\pj4C#R\`PP!,oce$<G;:6Y(@)U#e+s!Xf//^%q]K`_o'KDeXM?emSge[-9$EPrhI1t
%/olSFQPmoKrKKJbVk4m0[q;g>b'D>P<>F8j[i!92UH1_)^iPkr._<GPBm9Cd8&II(e#pV!jB#4D3r"8\#_Abq,"Gu@>t,>b:0N2]
%?d(G+c"9^kgY8m%V[_8QondBurF"b7\T4r9]3N'TfJ."K;V@&tk53?MF"=t'N%`E"jr3?'Db?O:'u]1]`nBM.T!c:3\t.[3kROUf
%Z!cq/e%0*bC0E:jRX\YjVDab/e+4M/$_?-DDqA*eBf;8MnZLbaVk8Co3\#!J=S7k_@s+oB:T%it5L!3.?."=#^,Wge>]9?-YBO.8
%3jk&pDjPc<ir2Sk9hZ%SH#)[hqq@RZF)Le$D5T.4Zmj%BEmB_`DDS3$o_I+F7b]NND61Abml$JXl1\_;@<tb?gT3Qc1lSWtj28\U
%s)`JDA=FO_bGD-'90`11>jF`oH(;uXp!Un#b51IY*/GBdbM>D?\*;Ac7t/(Y*RCV<f;ZtcC9f-%EETFRBH$>^/m0c*mA%5IMtO<e
%P*n4@P1fefa5f^-p8jX^&*DKhG:$[_X4?b[4uJLWVp^Kn>1XP5::DtN\CA%GWF_RJla*R.nog*DS]lIh",W$!SJRKe&^0?])js`L
%p-#st\%Lq;hl\jWB<h2AB"HN04o)O^#=DP`42#^PS24An/kiCUeAs5-M9,PMl<J(tSo$NDmrAq?V<Nupp<)Gb@DT;?BLmUL7SKsF
%\b:Gljh,cCA5joEGhf^X1i6r$bYNgA2r[.D[=G9blrufP'SE"/8t(2f\X-YSYKR^@am1RV&bt@W8)YdONE2J"[ePpE>&cuZ>.H'J
%b4`B"_P8*q\2(LLK.jXng0.q$aKIh3Wdud'=-dX*qtEe/@)XtZ6.Yb-TiTj;?jV&9'(i`bA$i7?%(#!Iqu`]U?gk+$i``uq1T1'#
%AH$:_pS1P;cVA%?jm6Yl/,ui>3IRn#1P\oZ^!*HaJd!pTh:3cnWa-Dn+4g_uQ6c&3EU3R-31ASqGIMso?+'9"-\WJ6Pf>:&P&$9)
%(QqB-RAMDqkfNFtFh(H+k]U=YXJNUgFf(=;2nFSh35:R![_;Q8C^tAHML$@EP.2?dVHHZs%d&ZEVOl=]lm;L@;esI*ejQ@JZ$b8t
%aIM\j#G87]6Hof$IHk0_j+*[eVgY?[R8HomNkKaYDPiW=]nk_76:G+Hce#eb"g*6`\f@e>@O+3/Bf#@bUGL5uU`PF*g"gb!qpd,G
%/Kh%XSp\3>Ae+78Hc=dhNiVEVQ!,nDHbX#a3ee-6fqqlb#R;1EdctsulZ@/iA.^X-XeU?,hgCordp,Bn:c>3EZuj^p]\_%Z<Vj)L
%hs=$94>46]m>p19H+V[Wau+JS_5];6F(cgG\$s5&/_?>$hFXT*'4A,ZjQb%`N^)k$/a5*U^7?n$DtY8fn!TB[Sbur,Ffm+tGadG$
%RFAkCo>^UjG.C^oO"P.8Q)%Hj%5?3Z/@>/2if%!N,f1))6M9_U`h.ecV-0+!HKJhJ7(RD]2KR[?bX^D.Q+':!c<AN`bBu@WHZdc2
%Bd+JODt'uNlHC7/8fsu-O9q>IaZj?KmtXTREO#;#LqiFK8--3b,[,A&jBJ5[d,8c^njL(8P?H^X(D]cHX+\Qh$PN!QWT;d50_sJI
%ahgLtf4Z/SYdl`^SE>$>[o121Jt:h<GrO(@/_U,FDdti_gsOQCf1dZlNk=/8[l2M^MpC;4hQ^Ct5KfEMnYq,&R(CW.S%6rO5-5Ep
%l`44&ZF$bfbiRCXfG[I?gdsD8)#h`G6ftm+s!^]8`Y#pjjmKqn3P_q@W6@l6kh)m4Z12eh.A4ci1c3ngOq6]tU=F]POIQLg%Zdk,
%/:T88Z-5qHS3pTr0*8bZJMM7#fW!X^Q3@D^!k-=JL"#N.UKGC-a3DbVqFJMc-c65O:<WEu2mOK6;`;Y\,U-I=b=;RG:)KhD1b6u0
%KG7\gQG1*\`X!l(RLs#M:;Bpj3,aII22mYthH0J"%i%dO)(pN<)(+S$36(i]/99/9.G0uW2>gBmg0"(D"`L&R.G._C0;G&<G4R#o
%<omXjJp`NYL:]q8K5l,V&QtPL5i_.N:'7jS%?IbX]UW6ZQbOQ/eYc+iJ.]L5,4/RT]\F@FaG^_!j^<q#JJsZPWch<O>k5D>7<`8S
%h_GXN*@q1q#(s+=dtYNG5Xtbp1GVZ=dT1r;Ga6=deIr2c8Wk4KX!>p=:Sc9C9k=UD9Ik2^oXmg,kAFqNIUl4"G?`#q?%8V`2Q&JU
%#VGb?Lj1J'UZn''6iV7W@p(mPLOfeVcTe<?ldE+#aCPka&*3]4G47O'Su\\@,-KEpkdG`\@f&_X5@hHkOW[HG51DC/X[FdCl`T',
%nNYk;D76cu>lpp8/=L0b?dC[PHCh;M9qtF#SBoJt(6\R^g=G?TlLN$*fk.R\&JmBM9DP./ps_hOk:B]\N\euJ_A6A%nWl=0&]s:X
%aBg+-S"?`EkNh_nj0*8\%8]2ObZYh&EY*Js#sj^B><9<"=aG)eeLi_k*(+'*s+j<Bdu8P%^.Z_?P9KHO!oQ$.s5%AqO3ZN+6JN?(
%9l$a%rq7c)J,iPoa//Uf@QmZD%Io+aJ3VaP&a]HSdK=@c)o:BL,<_JB#kh/i^\HR!@gH(=\,"j]QmF@V<1*P?@srEa\K<@V7#)4C
%K'V-$,5;"5kUGB'2D.I"ik<ldmAN3F'KK.ZIQ%/%jF@:<6j-l9*0I'=DDfbX0S3cfCa8[pPG8[flofe=[sqLR*&a.AH2H;dY&-A"
%Hqr/_kD:!K]UN9@gfgWENY]j,rJMonD0n`nh?K64XgD<sO:k2(?cq!+[_D[,D77`2g67lX%U!1Y7>e42h9&oRXJRY@p#<]Ygnfic
%2tn2.GrHIc&b,_PUZ7lif83IF<[=@)GLB"'p%.a05K]tCM6>[8$'Kn,GedZZ8A6'S:,ZmkjOLGWNK(9Sa%K]@Qs..*SJrDgMZ%.Y
%j;7,8]`FmrK6S5"NtH:(>/sd;)EF9AZi@)(L04mrpGl/_BqX4&0S<<:^RLiH(0Z>\A(l9R_nfWV>2%(>*H$tL]R&I:8J_rsB`I.`
%)3;Oo@?b[<NRUif\".GD&s"$/18h[hZU4KX3LMFg?Z,])J$Zn8^%g54cL#L-5lD^?VsohdEm.?]X-iaZH0:*`Ar+Z)^1,Vg`po%T
%>'ns?cIkTUqkY,SD&6BpD^Cf0ZB`T$FQX`q(?<J.+NB3C-kra/8I)GEq/#<S74[54R);98bOBlm8mIab>M:f0F!K^7`Ai!]bU?I7
%Y!i]X\5u5HMl4p6V)f.?qi13HIUBD=lL*n,I^*Q=VY.(_"Z/4cgnYaAEdW4VY<#dU?rT_@^GrJ"/MQOOfZ!c?81s.EI(u&Y3p]@2
%fL9X3@KX!oeOAWq1jN;M'V.EO]gdd?qHLu'OIIA\YYABqe;`1'eMLF-*[OjLIOJ-mb*$?hT?QAS1Q2,=b;S206tCaAob?s'P?;tf
%1r%L$6<8O1Brgg;Z#m6AnUCI_53(E]-R'%Z1b`BMDPN]l#3:=l0@8da:cY);+1(l6nl/4<b3e%WIe.=7.DNKAWZsBc>,lcJY=D.X
%icJetV"cW(F&00efUlg4)<B8e[FE4Erp*e,hLT!BU=dVf"L3PEFf%>tQ4(WK7tZ2,CN;K60%F8ge,s`X6BfSL,gn$2F3i1YQ&OCW
%*tmk\/puNGC^31aRp+Z@lcW>7M7n3532VP!D(`gEiJ*kdT6t8b2@DE[\1j&Qm%k5"$\Z[b1G@_b,$AbJGZG0:`Tted"sGphpie$`
%M8RQR;IOcZ3STD#NIedjEsmhajh%id)D0M=9F#Kr\E34/@n"=SQ8`+@1iSNk+l,Vr>^/q*2p(:MV@3.[P=%_E&Ou?I61@dBH-`n1
%b85PJ,M'iqAo9hWY(po*@bKr/2rY9bJi'jB:42A4je&-)N%l_<2c`iH%f6;4Ds,KVhD!..L>u2/p$H/_-'dN]=[f?gcWieWF2%X^
%Z*Ms&dkmlGQJKE#[;m9jY9>5?8=&Pe)bsbPfZ_"p=iGXFm:L/JpLX.UVk:ZsJn1^rVY?B*S7Wc0(n=(hC%F3gH]d,')1u%'ncmV$
%bJ#("ftZ:Bo)FG7Gm)Q=<Xl_,\O&dWE9YUpeQ-GFI.soYk"p'/PDbI+p@1o;p)Mub=Kg;2At9rQge-`iPW?\aVbVGScJ>!CbaT1W
%XR;P+g@ieRMX%@WH&7Z[IBE=L2KQ1X?!4[@=n#a8-Th.[SYrs!eQ^36@2cSG7rs[6iQ^(nk%&El:d1C/dL+OiR\"B1f%pJ.\s\cE
%`a\)GHZjIWko2BVEt?i7&\).tN%V>D`LmuK?s&T5A*D6VXK9.,Oqb"0@VT@lg3`cH+2c5b,4MRQWk-QLfoGsi5'iWLZ`R^!\@qa#
%Z+$&MI(C'4Lbqh^#FrG;<t\H\<H9"c))4!O0oNTdh/b<[^+:Hpl$GoEicef2d[DJVTqabtYMImT0;_%9Q957Q/[isE#hs183LSRB
%5@k2_?9CBPI`C"#>K5O2gVsQI62n$,2*#iK]t)@Dos"82(c2-7a^f9:e(U8j.'=8b^#+Vs\3CB/^D-`S]D@'Sp#O4_oj[lIa`oA=
%jEL&fc/N"*8<5\&1@N.P(K8I@\_jC&XHCtX7P;a/+OsXT%0AW:IeQb9mHr(G6lO<tIH>o%F#:XV:3uGA'#'QI[uuYpJ$77)L%^bg
%Y_jCGX-XghO5[IE.6i0R\Vc5P8n5pePJ:3H5NZ2SP[\D`j/2J%+U9Lr(-*fPm#@O43LNYq\muA5cPFM;QkYCog]Zur23oYJKtVR%
%40KcX$rjt?C(.hLH/N@`,]KW$2O3/[=SBIH8,RL"mE?@j93W>qqAu2U1Uf6(T3RC9kbFp'nl9#s8,!>mP>3[r--_q'l07h;BV\f)
%mC//3Ic9KNqmMi]6KgUko\.HL^-.m^<M%KJgkG,8ltmDk-qV[RT1c+4L&U0cdFEEG,$>8N[Q%Ifm+78?DO!7GKnjs&fpj[dG-]Be
%[QCR\T,(f!pQ$P.&ane#-FoR*R(Y#GK[Z6b4IP5SQZ4h":ci=;*O=DT3^(dUkBkgb("q^)WVgVIR$lX\=P:in8#A;XSKpk!F\)h8
%nrU$Mca7u)8B!`71<6N9RFU'i;EMX!46l!Qk2qPK&tQ5H3t"m,28B,uqB<`&X37mJ(%SE.c46B=]CP3)]5ulhgiiL6UR/K\+F@VT
%OZpp2U;BIli[Ys4DE,:P:*0ZlW34\KZRmM)('_5WZ1]nZ(tE/J&e">uDn)(TlD[=<a?e:VDE&;TY#1k2guY&i>'jhe1Nf;sZ\_>_
%>4m!Z.*iuIRjn;XoCDa`Q%(j[B>]t2CpJOt)&+1]"tuq?R,tCUCG:H!+[1#:KRB;R@W=d$QUttg-V0Gt/dPHiF.$(j3HSJ[L:fJ%
%Mn,a.1K)C>25;)^4EFuh&#;t4RZ=CCeUZY@1ZpS_TD,ea>,%S&?OR+h5kF">H&NcGQdJk-4->a[ZYt#1"Xi[4q8Qm/gkOW9`"#/[
%1c"HbKDA?&^;@T[+Q\LqaB?bg1C(NrAN3(Z^kBO>6AV\.FYlso?I`t[b89Qtr*nWM[ct1=L&9&[1CA>(=$q=rN??-m_9K$f&>uAa
%mE"3o@j!AN?Z$[[,%5-Y&rD@lg-/,X:4,^Z5>/:HF^7OD\^+FE_G!C#TQ.a99Nnb]00XR&lQfL'3O/i>qPW-P"3n#%=-h]D6W60(
%OE980O_DGClbeVj"u)*Y0,lc(M9XgEVO`"$)_SN*<PdYe69BdNTjV(IR5%pE%ON*&g_:h.%o%K>P/?(-OliU^cfJJ[)])#d)(l46
%cB0bWSGg$\Bs#DdaU,U9+;D<\SbSBa=e-K/iI6(L@-^oG?(P&02g(W&OAW]<g]YMDeZkl4_i%.6%(E4W?H(@Rh6/;rD!rNMfLpN9
%IE;YUV,K?ML$BSeji_9mSLO$/E&6T=?Z^"!>8DgAHWc\&X8IJ!_U?3XR_1bt\+6R$_mu9(Aokc>.GEV15BE6*>_sY^&J+KPLXU/$
%I1NefIaRknr*8,#])M619%n4L5M5Jk[b6eD?=0kp\GdIRn@0DEIaaguI$j/IHXU;q*QO:h"*:@noj0d^mabnHQ[2?]YDW#<I67\g
%MuD\4hMV!KIt.sh<Xa(BE'Ksu..WFaHh]@tnamo$8]T,&4>?`gPPp4?rj+bDFdggfh29`u%=H(:OFoaW-OUkFfe4+LObFWH*":2g
%/]IR'$rj@L)I3/EN]#"chk,/5V;1;l)cc_!8.RrW8.49Dm*U&qKnIL8eU3%d!Nis3'J??3M[`j.p]7_n(VC%t!1IW_C:DUdTuPt;
%9!R1;?dpUhNVYkg6#l_'E[/*@s'=A6DcqJ*8^2E;qu%6YIt+A%_J&T,n@4c"@mXHOrAAY^,*t("=i!\Ego?XO_%OcE.3I8IT'.LC
%gAH?!i1%H-m8gjqdVZbN_Z=p"/Uub5Y0m:Kc("1ahX$R.b_<NaePdgP?-s#ccZ_@+ZtrVKs(HW6L3*rT^Yf?5SJ&h1WiEhLmLO6R
%I'L/QhfAOQnqZc[pi`]1qLGejfI##>On-1f8rDQcPZD-#'<r^81%)d$(Hf'agTm5>qi>[!@t%"0dr-lQ#M)FOB?sPhm7Oor.fWZ?
%N]q[Y4jQU--c37JmhB%$bsoIW7YIRe&]YsmGS>@iXS@'A^/_RH,P!aa)YNOeg$kJ$E5#C*_oV["h*9'8GQRi'#9a-n&j1Fb03F0_
%^2$\<rT5Q4*sk,30j<J/%353RO*u.FG1<A#W;j1tnd@lR7[tG27`sW80p,d,?8hQTW1WVX1Xb7NaiZ8rVW'SjVu3>N^\*KGKm7#'
%1jnTXM]Ub>!qr0IN**[t07@U\0i>Jg5CFE^='F]To/CR$&sh"f.t58&HH;Fa9UnT@(k6HsZ)814WfMQWa7!t&W.;8B<rX"!oLgQ?
%]PI(*fKeI-]e)5C$(p\aT\lc,mu6]H'97KVkjLYup7j@%`"<.jEob@`q9!0A*dMd`qFF>L$NeU.\,#B/0Aq8*d4??"(C&aT:A,i[
%[C0]0(D!sej^NMH]:(m.g7'X]bPUgSpHjea=Bifb9*ZDaY>O)erQ@@6)S?bs2G9UUrq\,d:H[e"nbLjpG^OB6\Js-Q'b:3Ms$P8R
%NK*AR[S@pA](kk2BBr:g0RZ@h9XpSFNV]MWdEDt:fGj!t*sqct43N*h*in$WpiDl'baRtj3rV7'NDHaY9DGj9IqII\ZU5hs-8>3e
%`]\]tU/-VGr/"\3k%m)b5_%"Qe\q"?o\7)OT,..J]o[%%:)EFJ0@e@GO&J4<OOEsZ@]nSd^n5971KA[)qj>9V1B$7d=lZ@,jZhjE
%4Be5YhnoZ;gsb*E?fG72?4)rrD5+P'+(Wf3Bmnj^/uB+7V]WV:@NdgO&AI>q$C.Te)dM-bcL27eHc?ua'A6Kb5Vb,5IkgNKk+7^-
%\lmH&ch6>5rgN(FFZ5!+Bfq=&eCCs(Lo7P:0CN[JT-i&.s20Ko$.#1W$0U3K,r"oW<0sgF3<<A4*uKh%"Q,oTcL0O&r2np:Slc&N
%%Nai'mGi0%%PpiQk[`L,Dth`WB(kNd3-/>/T?.ia-S8ZP>l+9V5+,c)>:n(+0BY:#\)K.>[T$J`ppb'L,9.F.MkW0P3J)k:bhGYM
%^&:&AXq\>UK\3EdEoGSIZEREYEIR4!$`2js0W,-*^]%DagY%Q6fD8cC@B$Z@Uoo51fC7NdcMR!4)Ykt_E;`b[EfnB$mShPShJ`%m
%OnJ&mDtg[M$5IDdOP.=9Hm3mN-F5/ik_A]TI$1qc1p]o'\h]KSoBm_L'1Y,@GH%,n)8omFfn/b$RF/Vq>V<+Ve9(!,b\-\Dej]tH
%./F`9o3_%0KV"&s/lpli'=FsoGW^Ia&bC0enbDrU+"NmY"A?tr9uI_BQQPbn-#]BC>uI#X.-[;7_dAVH\[JR;,q`*?j@1fmm,G&[
%QomPGT:!/nMGGkcpZ#1AZ4`dQ8;_%\%o=8cT3]l'j)aP2Rs:ZHdZ2ZB/uRaOUPWf7iV`[;T"6Md`m^2P,/3j-=H.+bLIZ?tkLAPS
%A:H(H%aIJtSlsa'MhT:M\>)91j6jpY)>B$><da-_INMq"<^EVXlHFqq?X)8FLp*GS50#TcH8;'tRa9#q2j4dB_G#/'?9J/<Li6"3
%DWBIVS]UYEC64:=b0pmkrUj\FIQ/R\j%#A.,CZr3B>r3(bHq!>i,p5mfj6)FY9-eBg_%<74EKNV8'Tf`j/K^'YFH],`+t^1WVBD/
%XV?8!Qi$<^)/Uo'^3'#[D]bc6iucg0O*H/jfU@V7QNn1fSa>4O9QkGg@d`@KCa,9Of-XD/l,O*IYIlu+l?htVc%Q&,Znp\/cd#69
%0=>[Fen3)U'-#c.O,;Z8n]=2hIb1%@^>!O#P]!r?-4Xd;f#2S"W&8SG5<k^KdV,<.9QO\&i?\CV;0f(=T9csGM8gDBn35O9S*1j'
%gR+j&HR:'e::aAf1Y2EGA>2r3QqX',X\%?]E[U5l1HF^6Q[=oHO3:=_)oo/6PPP0JK?:5/XZ0IpG[$_$]KNPI:L@1%P?3s)fuZ=Z
%1GN#r/9`K-cR81FYK#u\9f(H`cFlpFAhq\2'*mi!;mQkBkGdP@k0'!t]_aa$a3WV?]\A4&WO:PWHn(K7B;`2^9PS;qH!sJh0D&;C
%0%*C^;n%\JLK!<2ad]9-^"o$S\&[?5Wmfj!:WJe,\;`4+F1GYH:(ClSVtL"/CKg?dam#)hRC2:\p2i('q/Z*_]skVBQp,N<)q.k%
%rQFI&k1dpumBn+7?QU="V`R])pR-9.CsC2<eW+7i1[gkPbF)J(=ZY&NAi:PFAFjFl`VJrGhW7sWk&b3DFlrO6ZSGJ1)V3,Rh7f:k
%jY,%<K2gi>G,BJGRSD<K05%EY]CbI\dIQ[@G.2>5DBGCuAe/h3en6WSF.M"]_9:^%PIO61^6c8MB)?Kcld1BmCTI!9oTOJZ-TnXj
%\,,C`k6f2ibIKdaO`RG&PF8u9gN%G>[aQ\M27&a=lXtDh'!p8;26iNA*[[CTBe?T=hb,=T5OuM+@J[*l\D523,Tb_1h*bc?'[n<k
%R]\e<Sc;7+Ve9lokJ^a+@t&jLHCNeIVs<kD1[Xc2<P*]E?YPgEkMI2%2tR"A_bDnKGeQfhDYkTf]JWPXjr_"/jShK[RCq1almBmh
%^$4VDSsrLK-]V&W].it5R9_M(g\V@/WV4S'TiZ%]*)q9K$WhP-k!Jag/1eG8hC_\>XjaaYC3hJ"EgBUk<+c0j,.60QC8]AE>;Pqs
%Ha/o`9-:pE#1(n)3gm\798f311VN>,_)1E4o=9eOH"gh>?/@a!8iLrtc,GM[F(I(KHsBfrCQnI$DQn8uGd,[V(U)/.mMC^#mDY.(
%qhd9jQW__[ZcP.Ch(BMOSc7TDG5e#HcmhP_XgMhOI<p5MkH2>0T30TE:D,>WG$3SKce=DQ=7fa%Df$Md)q,mgN+&g5-B5EVTkWlU
%m]VSmq=LO]X.MAk7qm"p9]SuQVQ^\oB$Pif1Cp&CNd9e^D4%N'B@iT^37)=WCU'L)>,s1!N4!_lS?OX/VtsHmC8tq>bc.2)I%0TZ
%hM!aoDru)hp=\Fk_QKc-2>^llh@]ANflc9=O'A?G>s&^sa!VCld[Y*1&+=8QRD6._j!AGfokX/JpX2'/1Z"X*[ls3PC+qPm#8cgN
%elKiIc"/L$H>RrbD<u/QHBSRQL1f"[&&%>RH,hur]W?@=odQ&OG@b2s^2\;&ZrEQOPPSJ?>e6rMFI!iCX/I:JT%\%iQ`]%TEB0Y`
%m4Fsmmn1d2Mk/P_ITa9bdH2eCQ&XR7A**3V]"M!bD\FWC:Y1Z.WV*=IlIpV;Z+=:kWNJFT:[P<.G&25:@<8oi[[ODTXmPT&Dm)</
%mstYn3fVG/H7G2,>@6.RhQ7lA8r)`oi^/+-gF7IgM[,`0)]?\dh)LglNc3G(h`@2#rS:\t/Di9>L"b'uk2Q3r.J#T)I`]m<]Y.pj
%UVV;#\"e)PpY!g5Co:LV+a#EN5B#[>7VOGuddQYcSgp5mq5MP'/aj\Gp[UBNl#cpmi['fW4RSaS(2)2:KrdA..%K,51PNjHqc.Y0
%ijDim?@;:#qt7G)@ca9?gPdd3<]BE1Hb[+^fZ,h<GLP*Uc&ZD0];9eb\ZPd<pMK6eV6IE$52UbE?9$bHgWh&WYM3\Ke_Kl!\(TS/
%%#k.U[JFESkN)9sDWg,o^:$+IE7<QI]tQ_gV4cZijk8jak1oB)C%]<XIC[eJChCEREdmVkQdFdUHY\UWDX[5!@I1[>QfIs7kP8[R
%,76C,(\ZqhrqjiTrZJmU>X$6dCW=38`*hQ^U[U0gBY9QW&%C//#DWigqu0IjmV-Y$(>BKm#N"5m9lork'T(k\`C'$;h0a@*ceZS5
%j7iMYSWh%hbh:,#ic4)@rZKTKNDJ=V:YjLmQ.*XI\V&Aor_qop^3VtgQG(sW3kIT/3'-As0#*t3pT+/dhTOX0q9r$rocfM]_9)[F
%k5"9.inBrp\EH,Y'e[JVh<X/gEc1^Dq/*<]Q$f*BY4?dLQ)hM9_nD(s)c,'Y0;\@-dtOXlom7iZ]$[-ro/F;DoDMDN^9VpO=KTS]
%F46-7gY5>5m4NjSStTldQM6^qG@sDnV7ZG8e%)s1@e0L@If4BGE9>IfdV!3HL[@+XH)P&`,Td]Np>@[Wdbc,7Du/#Te99r^]Y8B7
%;81mH4=LfL&!&3`a+oG8o@j"KV)r$EY.FLYgbu@-o^nVfH[!),'+<-i[A0bQXhC@a,jNs@B%IPpYI!n6DYa(Lh"ms5*F)hZT&-%s
%b\,BY\"=1+AfdQ$HL:KcH.6#H3F$qrIqcW>]++'aZ.q<">InOUp.K?u?c?Grqt9#.q>T)nhHkX%At$-:o6eQ'lb.Jac'?/.gUnHg
%p%O<dpU0aTQ':t:H_\+"R[s%^>D65Y[T-V_<ne!W]&2At1,%?7Q*lm;TcHgM%Sn,e47-R+LSjld+4ok?Ms^('2f>MYh2V'_H1tb(
%g$C#^T=j.3gb?%!iHk,ef@6ql_=_eba$%Or-Wi!-khEd/%MU"2ok3pmoK:H5]2#p:&k;#Uc]=Fm1\g(^Oe4.p`Xe[#"eG[Pr7WX`
%dJrf&oU$]q*G[fMfQPL/nGc\9#-_(C%q6%f[<aK,Cj0Cg]/b^MWQ!7J!QP)@eCf#:,(A)6JU0M54XFu'5gFt:a0GUKr.K4ts'5O*
%s(X9/7/9?!BHcZ)r/%6_^5dU%s-[XK@e7?:PeW@drVO!IZ+39hncBIDC,(J@<)T??($M:iqWF/Tr,PA`AuR)Enl&,.$5R&trp-1\
%P539IPp3sobj74bqn?Q#:'7QU#G]+[;3p7n1&[GT`iX_7B8!\b=Jg_s#P*)QFk>QDpU2qLrdM@eWF&"O4ibAl3qMg9gX0B3f6'Sc
%o%338i)e_fs288+o]_WKs+ooCCbKsQVo<EN8REMLOm)aZ&q*3sV_:p;,9SuE-o[HX89=FHXlj;EBdq[%[d)]/Eih([/M65dfunR)
%O)hQ=rJfI7rK%<rHi7gl/][r3VZ'SV3caVS@CGs3TspbO+$Zt*)"0Q7(W5S<Hb207ak;WfKr*\Q&m_"&\)oCEadr@9rNoE@2nD'J
%g@.<F^&$&s^DMDAG&3WVr^XA9FmjZ`],E[`(hpA5C>]m7NWs(mMSnm#/kR*8bc@L=WUWLWjJ@fR%a3]!HghC#ck%Eh7lkLP>IA(V
%48b;]6Z%S.hgk`VI_^i&[%HHal4^Fejg]$\,s=aJaV#ZZ3"jH"j_AMQ'5ic'['X81%R<M;e6InsG+-A$#09Kujn`'oI>tV7RhhYt
%g,!GZ95&%g'+D1q[d+LGG1)C\6p^$PgM,,VL>&'&.a=8%6[*VRkle:d3J$;=-Zlb0af_Z[j-Z,MZRgmGG'(9*gX^$t9;FFL2s&%A
%_q&C+.kM/KMfHD:BjbkFRC3P6%3=.^E=RO.)HU<+a%AFr0P"NRmFf&YW0&u#*IW(!bl^]IO+us\6QhlpdL($#YC`3\g<rY*qAieK
%CduZo.#m-lg=?Oo&8HIp@uO6^bLoV=O<E.u4fjdeXXf@`((?T3W1J/q_Atm"$lX&=cpK<2P3Bd@^-lMX%LD/-`?d,f&(n<Zg*Ye]
%7!p./Ru(tI[OXY0-9TtJFsZBC:rdTBAM5Wg-QsNk<Q$XRN?R'_8F`![kX4`f!)%HW4O?[HMM.b9g8;!`dL$uEc>YJ:&B&CR/,.t9
%Y0K_D>FM=qAOnoaZ^q^@".i$HZ%ST)?"P;_=fuWuaS"Vs8,unh8Q?+\V(l&'4'W.Dp4sQS-.+>eP@TTM@MkQ.O6[Y,*$I#Y#/nWp
%buc"t-'8bAB/,Xj2]^WjKmo20ku>m!8]>)rEI8ZZ1'OW[=tp>:lO6R*CP5A#A!%&-+G^*1[KTWl'R>:l6F'+OTIGstW$X0U[V'%b
%Ot4Bj9-U%#PVJ=1a!TNnRS2s(9F9-i;\4bhlKR(r,Gm7"&4Y]D>[Vtdg*WFDB'[Ae[\Gb?RRAeArNt`+C)<bMB%?:Ucs07Q3b_[%
%>\`Jam-sQOA-3j\:)_,qXU#2\%35f(M`*C_:e\kjL@[t)fEQ=>+]Zf\T,cN#nmT+Mc%bW=e;u$IKIOB">)\bV'#FME]9#U+23"u?
%H_*X(Bjt800WSt_%'[7=1PhD2.j81H$puZ#,]7R'n4@>?%aAaO`&]GO2DMBA"@PM,Q:+=R3"DVoQGSB!a0WL5g+6t3.+EjcTN)o+
%CWNgda@qf$lS6Hb5#Tc$/r7UD+uZoT4#[!!6r3t8PYjtu+cdY]Oiu$\,)BjcWiJVaZC#3Zn;]-cWC]NmJP6hFgpErH@K]uJ8<[Ab
%,h/W-0kM9K1aU5i"o;DuR]Ionqh!S)Tm!dJe+V:)oFHL\cnq@eRVp9NOFLj[/C,[!"hlo9[\FUeeALdOFI9K<3OVan6lRj,(Vu7r
%(<[Z]Bgm,JOA5jJe!PmrSJnc!lq='f=:3/.\-F/Qg6L17K`Ho_i0oNgNlUiE!fSV!:nN]%7eB8?%2!B;S"Voa#26f/C5?i&lY=&K
%+cTr`Sf1f5lCjEe+:tMSLY"h,8L&r+)l$h4KM8@b1nAG@E=S,H<f4iDL^(9sc\!+SQV$U<,VW=+BskNI_ILK_EENtW_'``'#f@P-
%&->sRS=tZoSF2"l(HRQ"Jrhl/b)5fkpN<-7*4Zmk*Z8ZM=D^P\RERCJQ>Dg<opc2jTiN:*#UQqQ5[B2</')%B?ULRi%#\kic=a(.
%--h&fZV:`PEb`h9/m1'A,Zq\Al-^_"!WbW(B';i_BOlT<IU%]./mUT!e3XQl,KEN0CiUhP>)K^4&FN+8YcUHsOA,.,GnhJci>2hs
%nNoKc\:uUq)XLm*CC.qrJ3Z9oQBF(YPY:Kb\HdWlid>?(\.,#Yh$-ej(*r<*=Jp_'fKJu:+bUsnD;'0T^&Xt>lq,#\@C_>I86KUO
%GWFI/L[&S@ZNT;OK[S]\$kZ8Z4^ldCoZ;uMOejN8Ri]aGjsF^Hb82j'(<6E*3Z]e.6j#&MeL&V%]OOn:.DgaH,L9)*V!A(ND+h;`
%W2o7,C"/!$+I+19A#7#gd3_!);;O-D5M6WZ->$)gRmGmKEB#sub$1['J2TrYRj$%R%oR4S"<O=Q#kOoBJ'fHo!1l"V[1(ej'ID@)
%8Gro4=25r1SSd8&ZTul6S7q@4I-=u^,K$Jo6i4/342X`(!Fp-WBkp7pHS@ZdMY*6lUWAHebmb94Ch5>S%Enk;Q6!@Vn6@h&C/u/P
%,c&!g1,aa/O"t]CGN]pmI@@=92)WDj,Zbf)MJ?[eR'>Yi=ir_>aTG)#OWAG(iHS7JD76@&7"L=oJ]5uHDiZkSK*l$.F4pR_k^Zc/
%WE%b`EoVKSQmZ7WF/8UTr@@4XOO*_fI0?RGUbiL6MD=2A]#e38aGKT5B9'/*)'9<.+il8DbOS"m&<5b&*6#:l/YkDJ7u.JWNeT!r
%+!$_(#t1JPm3p6<GuEl4NDM;,E<herO=N.C4-$IQ&=SQ2bk%KrPXJB1,Pf2$mZsFIUlh3+%h-=V!eG=L2FTmXQc_%C5Y2dN=3+!$
%:r7sB`29'COCT"1Ap?%"@-/Ko&b2kqNeiLH>]Ret,>e*^LCo>'"bGTI4"<3D%,I+qD3u>F)Cn\p5Tk'.Xnc!7mNk]58Tl8pB?KG!
%@O::=8g@#uLtW0`*Hor@$@$lO'6VCDQeY>7E24+)`'PIZI;;*I0SinuUPutUfdp7BKT@Rk90Sb6>$I(um7;^J:,tl_3FQW>6#/:t
%g!)h6KDc8=4&TL=jrsKDpYSZ-:]\220sq>(`"FV"K'!Zn`c1-:m5XfZ=JUbj@4icIfKlh#+EeH6bP=fH3_cArmWVL5Q>BGi@<#UX
%$A[kBbQe]YHWSoQ="m13h@VQ>7k9`J,&FbecdOr55ngkmk9:X(gikOR+Je%<eq-ktVQ``(Zn$gX_Am0?\eNND;EBX0^_fI&:"]b\
%9N-*\Z=tf[^^1/u!Qi&)NAN(`OP>j\D?s^c+;62pqllcEY#`H&$8n5)>h;g:%cJg]-GIhH=0:-FCuRqlb?QG!BfC\M$5<#(AOsDg
%Ja1KO$BkR*93jgHAj6\4,3443HO;GFM7.A/WE^i,e9MN:25Pjd;dnM_/N)G[G0%c:#2%4Wpd]q1,u[:qTbdls3\GcNIPW!F/T@IU
%S&ND2_MAEt65dWNS6Qtl25LdYdI:WubEF/Ld-VbjYQ^DFp7O[BY":K:>[r'G;N^cp+Gj3P,O*'"U#nroeCfR#E`AV1F"8+QWQ,;;
%3]!u`D%qi+"._f#R@N5hH%<uu,SE]>m0L'U$l'&[N):uHM7*fuR;k_gX_(1ZifNm\NMGtWc]R]ice/!3-tkk&@msW,YTX0).Y]0f
%OZZ-1c*<Muoit-DR7Vb9;)FKFoDD^Tah_6ld+OLW9B-c)k;?7u8Ql4`,/dT<(BGrk,P.`B22#u]:3="lCbX/9\fNQ!ngMFJlu!.@
%Ui_"Gc>;^\p#7A"+X3&$5f>2p$Scb&`_IA^P-S)-X:;?To^U!4#bQ`k,^i4D81&2=)XoT-6'2\Of#KNs/@J3'TY'QW+BV)S80Glg
%puJZ@BFlf^ZRCY,C5Ch;[%YBrTgj)o^]b%XkNFB6-Rq`HJUkUFI>fK<:h6ARKZjL*D[(RnW$&NZYSb5X?'0oLQ#I"^]E0!Bg0Yf9
%7!KKg3!rt2'$!>,A0`0iQ'&=F-tn4rQK1jfY$fKdT<`km)/t"L$%S-<;'9i)fqaU_7cJjef-/rC.$QkZ96q'hmE:9R13#q[Pfu!H
%I+T'o7:d6/AE"iD+Cf(-JcfUVZRE^d@>uP="'<cI$q<N?a@m62H-s9sTNsMqX6QWN6&]<s80r(CN%9:;E0s'XnbTIXONdSFE?r^.
%-rEB(3N"kWjBuM%`_U[&U1gZLlX?67Jh^F4a'O4`_pK3oKP:o$>$&%0B#.8a&:nLFVD!TnF-&p(k4GT6jcFKT7e<8_W>o[j9+I,V
%VPc0pSE1k`5^F,3=Up3%V]8R13?46-de6VPSE=e3mMV$])tVMu&SNG`iP=K<H(siU#\ObTi"Tl>8;>o.*f=Jg8FM[F+cWSGE]DM8
%3jCB`JPA0@]=<t[#I'n,7R,/630W&i=^IcPopgi[Au`ATcM*f^FRo#C&V<LC*"g?jGn/sI8,,S^aE)loK_4FPM%8Z-),I:q#IC8r
%PT.Pd%d%,m>&5V55n".5CrX=SLI8n=X79Np4@^)"juK0_0[C>^qKWRB7&;P:Sn!^97D'=B9m;$+f$ACk/p4%LTBC17NbMO5?A:QI
%5ihU:I#ai^E8Z_Ed\i=T%a^(Q:_h>#d6S7#EJf\Y_aF_Cg@109371%k/IA.F:8e:"(rS4I,6Cc57/hp)e.>0uQ!]JD#P_3'`(6m1
%@V*[*JY248Sp"ArAHbdqOc#qq,1&$o&aAZZ/TM1_s3@SR?Aice3qH8j/1-,?5TnV9^q$`Jgc/q#*!6o*N!P6O)@5/hTn]pRbuB*O
%eH*lm0^1Yg1=ZC,OiO5U0rI("MN4fT/>kNoDH@nZ6rG&L(S7>+4e1eFmZFcTTBZEtOCs$)</2^9)jRA^<!PZ&Ab0jjeI_gN;B8VJ
%R-KJo<N:[!Z!A*kEN3LWduX%@*&?ei<E4dGj*ZXe<iX?m'-\t74pXks=.UU4%n)6a14+aoKhQX1ld.t8LD:]DHkJgSI%erQ&`Q/>
%#:krd0U%\AP"0N]Ba)%jil[WUbY$iCe1*Ni,(DNid%`7n1rFI1[`K\8W6T.1iEX`l6aGpg/pn7V/ESUI4A1[[kP\,"33%!g2s\:b
%b>S]h.iq1fDA747=OlR`5F4^<Knr960nDG%5U;eU<?0T:+\3`iGGV<u5[iq<>)<;P($N5b7HT+]`W:9o1!n[k7Y4X(dQm^Mfc$pl
%`G\Tn7'2/uGb54o=[@cI#UNd`;IuH<]P_bC5\+kW6YZ]!C`1[:=i_o9qHQ5_oPGWdQmqG4JXBZ?YM;\$OS\6s(EF!Uk'HaB]Rj]m
%O"N-IgL(sDK1GYT#XX'.:g/8-Ki/XSZAhHZR?$m<JI#-pBEpAPJ0\ttn-Djq6"pTCn4P`2^f@!q4DGf=P`hmN8M"EEh^-e&4T>fi
%Gom:UBMXqM+O%9E1ZZ\P<RJU9,`H!(Kk.FmZI&)<*6sU;"R0mB*Nkg8e]A+0fC3KhF!;RN%p9gki=OU:k9(n'E.\\\Si@3;N+bQp
%Kq"MK)3'#&e+F"^9F;Q>1c)^(`-gi@_;>;dNhh^Xh5e`@-nC/h!c]MP"Ee+$BgI.eF'mGA33'3<4[ahAZ>s:ccL3G8A;:FE_@@_'
%Ad*WhA.C:BI>feuk/4W8,APa_BB0+_[Y>3F-B'>_C`K@?JIj>B_2=[4m/]iXCek3.8:e?-pD9M8N46crJW,4Bp#(Kj7,pcm'?h@M
%%21WVrDJo"1cR-DWtCa8r2@4O]"X8AK3a/s*SkT]#6A-tC%7<%8lZSI"=;+BN)E#^:d%4Q&/8.?&SS-6,=%l._Dq\#qCLW949=.9
%8Yf0t_@K1CjFi5/\5Y`Y;J9M'1.S&?;R3SVh_8M,!N?Gk70mHn3?WIdOV4PP!Ypg.LsrHQF*H5$Q?al$,mU!*p/#<13RU`;,JF0B
%DK6@Q1";:I6@!g.#i,T=PIQ(#$6=c%jQi8O<C[.](a*`.XJG+r-lO<=TT2J_V+'/Ff0k5H<R(b"MmdC.Pa-N7]*<X]J4Q<2pm1V`
%ahGi6F#sM'0"U&<6P`'-d"-d7Na/lDTL`,G\2^_^dq=+R`O3*n!0U=;P?CQ_^gT)TY)A7(OJs2%!!NXUc3s-W&(1K&;7e%$Af_q6
%XHX5U,REfQ$&"6-015G%\YlA%l8TR]d$$I<XBcrMT!C5<gH-$Z*g5.YdZJ&1,^s-'iSW?'%pFu<l">%($4oWFKHPmT$ChBXfg-_j
%1PQgB[S]s4*CR?o/l)5c)-kqcg!CD@RY6Tm>_C3a>e**)jZ-^W=18o8[q5EbV<Ge#jLiQ/H=25%:U9BYOGs;pTmTB<M$GCqjq>d5
%Tm=3$K+Nit/u4O"Llb_nbX44`_r;gRZ1o"=!iG;=dDbX\bt/@0?0NaKGn&iPYW>9u'Z`X=X38%[k!BU1+bZ"f,*pD9RKkF#L,`_+
%q/-8E?k"7$A3\m;Og$8hJ7qXu,'kZ2eYNhH)J]Zj-U84U""=Csq`U1ka@[e@8<m2#aQdJ;g=:b\LJh1SW^2\$hteJ`lcBg(84*_Z
%*Qq:NEqL/XSIbaFFfqom9J3DheP7*i+^dLg[?W!CSFSqreL?1W-W-*)2'G`#5hRC8VCp*<d[\-&L<N!8/WE,@Q_`KHD-mCT;U)_!
%aD\DtCXV"$iH7`>%tP90;(GZJ+d<6[AD3:2nYC5cCoFJ#O$&gUO:0'Oq4(#W!+EX6YKFq8.gOr(UrlUN'q!WO+N*>d",SDKmu$1b
%Tj2p77QcN@do0s8<b,C0b"$M`BF:c%Pc5@aM*kYVZms7!#r!-,2j+d5N];-cm:\$+cR\j+1,^rZ,Ueg&@s__l[8B\_7BDfI-B"8#
%80AJKK79CC@P.O@=i@C2nmph,i0][K>q/Y4U&rn%<!^fqZ7%-FP=;0RSh's9o43tTr&iXL,9MaG+P4%q,t@H9J@_mje]rFqi0QFE
%GC,H"K<-#pjqj;`4;g\b3GtW6#gt?snL@8QK!%0b\*0a35\JjBX+**'#$L]5BUKAj7_&GkYb*4Oma@i_1meVYq8^G#R:&TZ*CSqX
%_f:(\<>@G&mNXFS_P%WX*?)RVJ/iifiu_#HOg/0?0*R!ZA*Yf&Tf.G?(T,8OTogLg_"d4n:f/eiSIPluW,cstgEJ-D>X2gZ,GL7W
%cIN'E(T*sf^ki!oO/P^d_oCGOVHf*tp]n%?[K8D-1ORdk<O@8nQD&[k)jU$1JJGcH81Z7g\[q/M59_$R&5cT$*t"5iZ]Cq%Wa*[:
%*A:kl.>[II1u2Um5uF-:b.0]Zj+J'L.=Y,/EJNp(einn2Jm^AI@C9R0'*L,6Jd4Ld#_pl`l'KC6--0+\pa9m,8e<1SRpIot#XRth
%94`3)---]FCEOfM5sTQ[SmJI^+KVXllPBD_?j%08#tCUs8h^TP.7'ONW:Af1i#)82'*rQb4eE2<W(MRJnZK%,0LqiO*0(:@o\8";
%Wm(tuGN&K^>c;-G4a#4P2fo1[B8EuEEn>-]/ngo!>`Vd-C1,#2Di<FB)g5PQBlK$m=PO]V)hg)`Uk*;F"L;tVk/D;G7-@Nu!((%d
%+lbZ6:gc8+r,?ljf,"^V2\Z7d^g:;Y'!QDJ>`F@a*]WaNR:_*1E$udao"`Oe:PNTr.%f>+L:jMeWAVElP"\f%U'DJl1j16:TUPLs
%Bl0FgJZp1T9M;'_OQ%1LDmth+NS2\]ZA1$C%bsefW.>X_H)J[2ODR:GU'C?'(_`tr!4#JQ"k9j1"H]Xr"_;;j$t6bu:gF!XQ%Tjj
%6*m^B)Nl.sa=(!GatY=D'^DI(C5t;G^nF.fYc#ZY_/]6.L&+7Y.roIE^(e^^9iSVWqf3i&$5>)Ve]Blfbc@ZE0hAVq80`9&+9TJg
%6p[cC-f9Ks)1dsRZSaoYN'],+Q<4PB@HPH*/lQ'^)\Jp&\HU,Lp/5_^Lp0$;]eL]_-4>]+$o`2A%crTM7sG#ZHqt9BoMB[,Po%&c
%i&))iF[@D_Ma6pY#U3VJn9ln/og,`tWkO.3)m0PU7;W_`5nfYkeIRasU?:rg<WHT(10)[5Bo$OjVC+YFMJU+r]#3MUE7V0EKaBq7
%F6/i2,]plP!]R>^-p4mpmMgrrek+bZ#T?SGL+.M<:u+jKFS&[WOia?2Jg3EbMc++E[_iKh0nm[5%-K-+Sub)!,R=aH1GX@Bc\F4>
%&C)I:#b'Fo%Du"P+XH"2$1J'nC>ua!#nkMOae`](?c7"BGb8*N"uh0Kc#k+9,1DYD!hco1=70@-I$kJP`^mFfs"r'.(hB?RKg:A$
%34U[f'Qt#"CS@nn/#s(*/;-mPLI$gdF0_t[<AIGjJtb.,To,@.Z_VtgoJqZba4MKt7uOS,Z.]2gp_k(.DD[U3J<Pt#>N7Je^.Eho
%U(gUC>RLcWWN!fE!bTc?l32?66UQkd,qFQh4NgeuO=(0#<I%S5F)\CA7F;1.-n)G[7NH@Z^gi4Q:i,::>C7S.:(rWf9#FI.<'Ud;
%O[=tqDo`^aCA>@N..6BK-,uA_f6&>D\K4Ef;?:%/"VY]=\2]CS8rh?Y@`j"4N@TE>BrFQYhuXJqC<?\6\g-\;G`l9=Jh?4%o1^Hb
%d0C?Oi1^:1!c86AQ5/#E>a-ECR:':$ih.f<B:t]UEJi.o;k)f+Ip/3]oV@N`+2MB2-?]Nu.laS?F'0ip#d26O>\T!iY%n/aj:"]H
%"]TOSc@@"14%fDZ>i1*G'")k=AIX?Y<I)uOfSG4e,oN;l2rZrT4To:S29d-CU"EFHVM@t^?<QPk,Yc28_O!OBOZ!A>c]O)+[noq]
%YAm\'9#KcT$pn(4QmQ+;=mH!:L?-*")-Fpn#B"h?8r;iCJe26+K<!Ha:Q_!ehcqT<)Y1hVJ`bXW&eBa&$a*GqT,[e&8_eMtSL1"8
%/;#UsOf6s]6u0kXnhiI,RK<ZP^)dpYB!e7RWRYs>+h5p:HYO^YJ#1JWf?8F]m-B0l*1\*!Qjb"e-fAbaY\#^PA/0]CN/$,i"](cH
%-u]D_J0FT?M5hqH@(D#Bn!@.d1hIk!@gK&caMUlU_:<6f8*m>qI-FSIFZ:c.*WZQO=#<GG-t&<.5O)PE'j&X<Pui_3j"Ulqi^N>_
%6=!b'$h4J6lQ@?>AYq4A*oEmW(e9u4Uo2$?L;qt;RS"n(^c1=qg<p,7i%M/sR'&210'PlO2,LM07n'amW4n?7(,H>iXm7_I9:s9j
%_@\lJ-$idPP@:C?KS2f^.WZ\8)MX\?i:f^781id9*RY:H*?p:km_eX5>cDM$O#N=^6\*42jFKtDG>8U()<EQ&'ck29)-k&gmZMmN
%oET((34Ar.1UdTkf"&$4Lld5qNI]e_7'cU1RLW(#S-p?0MKGf7_/]NR;FWg.TnWb66[`XX:M_`1[\?aL6/i)8AAL@i)dc-o#SDWR
%jRkr;MEKZ3=&FVR`9&U7Heaq8>^.O2d`di^%WRXn19-8$Aoi&H*7JVQ&?1bH'bZl"$pd,H@JBmQQWX]q$ZXG4O[\M*+.8'm1?JYD
%#`pK`?5k7.VC]G.;rS#hRT+C-Zkcm\#Uhcb\3FA*Z7gf9bN.Yu@P%a-pHfUClfp7%bt^>\Ea3AHZ?qBd)rNHFW1'c<)5J4#6+`,c
%LE'kP>jcAM"mnlWb<sd4)KuR,Tle"2H,gnkCNPn#%bq[B]D05UT+/Y]1H`C'K0'1(Eq4>PRLf<;4prNHO;+8DCHa?u12tE5+>&8i
%5TVS3"BN!B:^Nf7DbE>P8K^118n>Q&0:F;9N.=TtA_!p.#h6\eD3O/09LlYY]#tnMBNe'?pEn2.eEnI@Ze;)u`U+eQLgB5chm76o
%ULjV?F^<9g(nA[4e\J]im.&rj#mj>_9G3A\OqAu#-=8d[9fCZ/?T+$Kf&;oeG)#Nf`UKb,)%ibO"Ln0oDU^[5?,!Q9W65<5,Fj,[
%E$-'>i&YX3b\P:o;M!nrEjp"AQ`hb3=&8sR%TcJ[/b9W.e<laB;%T3Oi!$#P\?WtjP=Y'!pk,b$)(^n(NfLc.0DN?.;Y72TXlg'D
%V?B3?aXrL(4K):(moZe7[3EuG0[uA>'%nuZ1T5Lg.WN5/8Z#=N'<k8.Z@Y@/]+esH[t9.Q0j1:m^&uR;Sn/-NmI<V$kXu_g,CH-#
%Ya#Q,WJ"oa>7(\>Ba4;\Le/#oJOlJ"aSCr!IZ&b-mR*07TW5YF_adIaG$#b48`7Hq$[?0s0[sJspCsC]2QWZYI?3hI&b!hX1=g73
%XTk:7nuZ0RQ*-JXcC8AnWYpgCn(G5P+i-^"82\BQTrV=YH#sd@nNm:ad'G8<TTV)#L-RAOcX";d&,#!T+,c6H-k6fkKNJ^Ss*R)7
%#@/?Sl7#Fk!eDp?N\pQVgr'f;I8)X7Ll40V5WW.&%g?M7h%?#S9tKs$=H$,$c]bS;TrV*F&BE./4/c^s0q[f9'#YNN\7*D'/I^r.
%*$<q(Jhg8VmrZ9Y%[F$*QFmrCo>M;l\DCH3Z=bpoOLc1J7H0c0`bue=^7_<I/Ba'mfbfYGGU&;]l"]2rMo.I]*LZ>,F.e`J?stDH
%(Xe='Zj^</jb$9DYE1PmjI.jsLkll?0MrC`?<9'd67B.@#[/Fi+m"@Jm`<'1[U"$t0jGjap;gb+D=D=)n0BQE6%SGj6HAfsigCEX
%AIhdJ*'lU!H]50?Gh/[K5`Pr=h("Pr244Y;%)[Ap7`nRg:r2mS+LmFLJLEnPnYo'T*Jt.cjjA-<'jil*3RYb*'I!)6K&\OCmANfk
%H>#hMYoU]DR`uY#_*FMY&rnfjb,fU)^:a<&3A`jt-$*pZ?P+BQSAMO1CaN,0,jt<YZM]5+H$^T>o@5+mfW+-^$:<^5]VC9"K\r0e
%Ja1OZ/Qi]&^S+g2,+>gDKSj\@\frnT.<&ctq%KGO&01Yl4+/a59_*N1aP$'2;:`J*53gi@FIWaf&11#;`;,n%ZG7^tY*<S`:^ON'
%M2$(/[d0lPK$OFBVM3Y8HQ#YG";cuC+p(YKRiuj!5st.!oWWU#gl4XJ.esME3kDo&#7'$kNJ4-T^6.Y^C+8Msn82*0p^(#'?%7N#
%Wo?qZ#Bn8`8WV3DS$LEuA=cF].So`Vl'tRiYpjT<qUZ9E+U>!@@1`6L6!k`!;]!>k4qq.4f2L-.44_;(L;4\&i8=Soic2O%I0^a2
%j)IdhAqS,*rViXuUP99YR=,&-Z:=6ZVaq'XEDP'A;@a`sC2Bho3TM6s7N)kP.10Y>J.mp?>Z%3R\aEPGkQj4N</gsHN%!Uuq>e7T
%91hIi0u&Gm#bid'56@NhK$-af&0]\Vmk9C;LR+Z2bN+U6,LF6B#[]m5%2)(VL4cCXpiIB>-sSY4<BD7'`l$lJZ?40LO6W\PqDP]$
%Sfm,N6dLZU9cO>*SuOu`@"M)eTkUs8s.Q,HVC+//cV%86\HoH56Voa.W&ckS*+-j]7`a`n9dGlQf85$.$<aE?7\JD+-90=FlBO$p
%6pNrQE`$_1U<s[&PiY<+Zo*+)8hpS,SVhqo%0;e+,6h!"(";,cQ%kt$<KX3e-OKQX$uaRMfa>#GF(_UUq7U*m4a5)W#+h(1ogC?b
%MrP"JZ6V'^S3OQF3[u.aVr<QF=tKPEM"9J265LI]Rfc/e7qF7b""=?K&k+hc;Wn<O<jGcEs$WR(GCC_;cb&`#]*D]!h^9>k5D>9r
%ZiT=n0CQa,g9GJe^GCB5n'$hd\KMW1RNimhb=\$fBZLf<:t"M%Du3Yt2=[0X+VY)'-oNcA^:*eG23b<&DMj8bRX@oT#?C:>0?R;U
%@uu.,N??c.NYXnX=h//FUs5V$+u5IBA0pbAA5XM&Y2SZ_L>gGUiBD1gq?'B1?sjIaPeh:'r/RH^9j::/gd<3%7(Rot5c1O&K-t7Y
%(Dk:X=aUB#Oq372onF]F8k(qCLj2oi.I!2CoS^8d^Rs9?OHg?\*%hkHLDafrR5p2<IN<iCoj@<l[*D+-T3c3]<Io&[M,kXNKHkEB
%l<INel&f#;$i5TbC"4rba>9qZ?DmSr:9,uTUR^;/T3c9_q%8]a:UTJnJ8FGO<aF:Ps*q0,9rfj;<X.K-6iVq1e?IoM3qn"2[:qp?
%d"-6eg.Nqe[8])Bs5$lHg:?hR#c.bMK"T[j\MI\`AtI4OcPEU)p#F`T>$!q_26M)p1KsBR=.bckCgI#/f#1U"7^bp4S#m[ZMq-JY
%<*M@0[T2=BgPX55<b*Yg/p+$?h29GC<_QHOXb]\i?2a>gnZA2VoNV3EcN2YJ1SKEdJqatm.k4=(f@<l/M!ICDK]7l0<lT:@79Ob<
%Yn@+Y7;A"O_Y__Q\KX\i'hch+=(J2=@`8Q7ase,4?76?2Q"0)O?[2<+8Cu<F6LTU]4JN;6FlA?jW31QT+B_dAk.7_+0?UNblJ%=J
%]-9/eFl?3#g9.IufHossn6hT*f@:CSNH\[<.2KY`lC1u^]Iqu*<8humrMUuJ=5R+8j)t$S+@BHS/NG5_$hnP'H!PZ16Cl`Y2s:?i
%?%&cnUt:<U"%p6N9C$`n4WVLJ=$O>Om8^H]Hf^X\%CaL^I-$a6=,A$[lfq\nB"fH^oG+X1YF#o3?WZ,1%/1L9_695<Q!Y>F0aIZg
%n3Bt?f-r&c?Pi.CLAm'N<;mV4C]<Y:6fnAV;=Z'L@W`Lg40'b<=N#s0@M,%1M_#au=kW)U+u9K?7tm%43L'qS-O]WiFRnJDqalG-
%GMA(/?18KWKC'I\%Nt+iY,W]4C:qqbf[]%sR]ribCDmPl%j%F]md.m/mPnJ(SHTG6qGCtLYj:]"C"OG[%D/q[%a-R-.BB(l,nJ2(
%9\\/*Lddh#/A@YeZ.K@?@Wuo\@_8,PPus!<19h\^E+3H\(lIFc]37RHR]/6!/)k:RREAAXG0QRk6WBp&Q&D35<A/M&4M]V"\&M.$
%7:p)3A9X)j`-7CNa&eVKCe<=4e#K0E:,%J1a!*E%G%X+]md+K),$$fAo-\kNlJ#sna3O=X+5>t""(YJ[a!o*(`f-"ul;L%c72q'L
%:.(/7Or$TR(EVNb*8e=7s8.^UH#,u!g%e*Gaj*cs9GY6RROgoQ3E_<1H*T6?$Hhf'+Ne09N0Km$<DsZ9U9[]NWliVU<E=980O.c!
%#0XHqlEVsRe6F0eh-D2oUV1-FUq5o,>o[1fl*nqJ^?i^"GQqb]59hjjG4j=<,\GYTKe^2i@4F%e5hJAj?10;2g""DEbaFa_L1VaG
%V-/g3CA+nY[V"\a"ZAGL?a\S;cXi')>sJq<RpGW=?bfeQZ&,fSN?Dk85Ck\5G4ed+6YBIb#YfGba2-'h/DSorBK<l7WulVS4M*DI
%BA8q4HZh9UVtfV=6D*)eM4`T?G4*]E-idGr8>)7C`b*g.V/FX`Hm,kt+6T(Z]B0^/0XR4UFD)7*7(`;hYt;<ihk4Xa5BJfA(:.lq
%m<X7FBXFf^G:Q1Anh?,JB.&daa!&m*A;m<QaeVLdOti2EB;*cAm)7=]k0p.qm3kZ?UQB2pTqlDs<t1XBB9(HDVMdg>?1Ur,o<al+
%o4^u*;nc3K8(WIKeS;E&[J4i"C/H=7e=r[2WPoZ.VKRhRSD'rTKkca,</UpC<%S;3X]gR"XB+?.C(V=bMkUQ^(9)km3t&;/AX[-]
%@P_dSrJ&n_?l<]2QAMlSW"a;g]3Fk,f4$J'>`4b#](T)GVfR%IM2BieNtm!.c@W6*:`A/n`P50`G/kcYmd16f],GEX_fj(OfWI+G
%9sItu.jec<j)Ahdqj0[YrSHHuZJBLs[Q=l?G%V'(G.iBZB"O]:.qcI:s+Y0uqXjjmD%W1L]7@4KBhKoT:"s&oU:)'5rR:Me'5NMe
%:=g8$_RA)WPAPSQ0%q(.S[RpG"1R*-)S5<N1Ga;\'UAL&-p@`N:CBM@bo4IHM-Io1gb&SgMVP@q3[qP=9hAi4HZ?Z=]39DQk]Xui
%h<lhmg\(+(@,:6-YhP_&G2)tn#OZcUiSEpM%IeOR-h3L4^.HeB?(/5BF6.k`*Rn;@FL&A;%eg`#@IPlB2s"6PNR>3kKOWhJX965V
%XJgTkPP;_86hAM\Dl=qQ2fDMR.c@&DP/*W?'E`RE<Y=+9nPF1+o<$$jY,4k:_3KsshJc.ID^^(k]YTo`_EG"_^*<Du4__D^[`[Rs
%/3I0J$0(C*79iNZP.3S7RCH/qMW4%T<*[pJZFD;=F)b'>$KIk";oZcX1`CT'?>NkQI!ksK@_.%Vs8I;+1trTaGJ6rT\[.eoaPB])
%\_Z%[0QJmgL?-Y=9U/jV7PMB?203eNEYZ_c*Meo]-)4H-Pa5L`a:c\PEG2o(N6C=An)&(XpMW%*mb_DF9'2_2`pm7%j+QR_37Qa6
%R\@$tX3JP(F'"if$KnSc(/<*1fnn![+(&I>mO[k_e^/*s\a/i5ptVEoT=_ECTY"AG1-p+AO!KDH!brL*mV6^_&DbkhP:='NSm!hZ
%r<JfR]#Y<.jc!;1M4^rFU^rfW2g"Slr1++>jfe[q@<jLZ2jO]%cTOF3-L,&nNRYpXUoB8t1K51^CT?fe6En&")KU$u>mBUi+bm'[
%264):QhGKUBGJU6pVV,Z?<5ZcdK8K<D\CQMh::sAR]n<qdo;V)7TDHtee2i`=`]@NJt-sJ:X1S%K6C>faX6EClpU4b2J[NQXqkht
%[G7;+/uDg^h495.bB6/0mK,>Li\&AIak[u.bhX9E\r4E_Fa%IGG.1g;F*AFg_7R$A6Jb.IoI_o*G9sj/Ki9H8MD*,;2fsn[r11o`
%jfe\LA9fg]C6f*X:g+pPMm)4sIbrDFko^M'-gm.=B7^<Hjg,3LC-gAu`B1K((@RJr@(]FBWpt+<5PKra!:Ms#QffdEZFU7((*F-7
%a(FnF-B\i"jbutW*8dY):9Riq%6\LpE)8N"D_ug,2"19g%@_RLULlLSK#&3`mt,#L4RW>JV`sQa@P35gIMh98mqVUILu+\nN8=_E
%<fu83q(7ifp%`c=H?U9&Dng2T;")\);K(G4F/jFs@J(g;XEV^for`bOfXP6ul1OK>!;>i]cBi$-AFGdGbhg$B!q"gs8aY>RYeAj3
%mV_L=:2oZ^?1,[<(u:,/9"Pn'@!F?%eb!147.S#>+S0rlRF2+C'OM3]W)FpgG8>odaug9n^:irlmqNE](gjAAFF7/"LC3idM5oXK
%#"1>kGE!^/QL>a1<A7d-9@J9n6co/,2OD\[`HW6`MfB-P\%CjpoYnV8l+=88lAKpDeJIgmXRBn93aH)4+:Ru"Pn^MW%M)/.iWru$
%08e4t?Q:+bpI0?HmlMi!^+Ts,$2bu*i>77T,CUrNNF.N\jEEMZb3p=YPkd``c7eljTjJ4a8\_T`KDNQ3Re8a0ce.\[:h[V29B1J@
%"AnQ2<kj4#F.O!6G>:Y#rm$o^bhkG&.Jh48_rn-f3cE05B<U:nnu;D0Dii8uHuH6s;PS`nd'dE`8k/OZ3Mq.U'L2$qd[$L!"qR%5
%r)ZK4#Z:XlC]lErg^IR1*>/CmFK#>#j+B&$F(bga)"VYW0THVm!Mc*H!hS*Z$Q*Lt`ILglW<&d,N<@0m0Fo"'K"uFA;%\%*15#d"
%PU8*8[@tCW9EjRr!jTN\P7'LFTJ5kO8S):WWMG*M954PR1)q,5Oub;:ds,82jo`rKSHH]q2\Uct]g`.N7:[7OF)`?on/PV2#t>X6
%'9$[+-Q"^X;"0tp6OLh*0e+"jb,jN(I";GG2D#anET;X2j'/5tdk+FWY?RaRP*3YZ,Jr\@P^tP0%A&k9;1m9#ASa%=]@%-X)jnIX
%Wt1XG#Hp;k,osY&E7>A(o=g7C_.[UV4W%IE`Wr8oao#O'/0uE$h+9(%UCYHP@;7E(6^VBSJlc<KL*B;?p!QWW:cQ=J!tn)hP=`XD
%"f$aU[qQ.Y?jm^g!1G6nYmsNRAjnjkT"PLGk(tE^Qtt\*Ki'pD$;['M.Qdk`W\>=sN>8#lG?9%6qelNDY?mA=$ZeeEYf+"&/F`fY
%IVaj`iR=O]PBi3sqSG%m!Xr!8k>N3eQGbJg%F#a0oGKEC[_c!ud91/,0Nnb,)5\HAL5+)0B[ZBLUf,+/gpDg@rX9`8iL;aLMiYAV
%Nl`7&:Up><fb04\pe"!ccW=1hG]ls2@15W(_\b:CLM(b/4,f"eG^/A0j^HB7dDJlc@1OS@I!Ee+p#2mci.o]#D#Q+D",J88"_*=,
%JsbTA+F\,u&E;0E31\ITWWbc&g5e(G\DJMfLj6<8R1f%AKrPjWC,2&+imeHJ@`7Jq16$N9"DJj\A@G(Q0nI7U5=FMaP*3cTV8=Lt
%QT(-G4)$0a=7:\d?I1OY-,p309T6-[P_l:=:2+20e<s$i0"o2[dJKh&1&;9;-Uo%bpr'5Ve:?N^R7i6C1j:9DN:'FsMUBO[8F`,e
%FeorRRDopc1T+?\)_1"F7Z"#lfVr=Q0<9=,:afF#VTH2SXJ=j6&Z\ulIRF3pWPO_9@e;u*=cAqD1Q/50R*]=7Asuo9`l/V"GZmAM
%/Og8M_8Xlg.WR8$-L"u]$Cb=[2IXL]d3bB0n[.B^?];iV^N]d/;ns5S9#5b'XActQmB^CA@mgqa`\<lk4O)[((nZheI(=i%s+$%_
%YpL@Ke!2[XWMF*aRPN)(hnq;2BlFO,GR@V;@q5WZ@k"3eN+#H/=Q8'lQM?"L,;[kpqTjdOSmH2TNMis`@:PO:b/TfdUQ&.8@N4?X
%RCFt4l:j3,XVbu8_f5Il=HE_,US^^E4r)0/`;P-?NmZpUa>$ji;`R<_>Va?5dnT"M]mV2K]NW?Kknn8b8KFS00s0Kbc<,]UhU)l$
%(pE0CGDsbYA%\S/i%\Qe2t7^o.RkK>ebq=cnXdIga7Gn:WlJm'88"!]4%%h6Zs4GqN1PljO4!'#o^T<:WI9_+]"jBS:1j>Wg<PXA
%7XJ>6a%-Y)7Xpm6aIEin/FgVCSrZhRGr?]NnpF5EOKh%4+Ci_26H1.9KT*`($5m\4Bd'6S`\:r1=."`$8k9F0%3O^UUCI`$7`D9]
%]\_Ot7&C0eqc^9ETFs[_>Ec).kbU'NH(+!777KM4_8t)'V)#>e2iTqX3,E,^+#l%ErM:`K@4.+pfR.4?"si4GO?t_BhMC6,h[q(N
%LO_dUB/Wa]`aM0$A?H)VP&Xl+-lJ;G;DO7G8L70%Qs.V19uE-684bBNZ#Rn7<[_90U&^CTj%I>OBeWOB=gHdUQM?"XcXIPF),[]]
%dt+B613U[qA;it"ajUm%F>ASKm:6WOilRQBe!&13AUH6o,1B=W'cE['\hl\jje%2](;Ca0BUCYF)2g]oj]VN(-tDq>UQ!`qO>9kO
%8]k0"7O^uR>KRpmQnj0PV()#eM,WOiH?mZ>6OG=7JWE4\3CYKt4NC>WPqhid.aJ]1<TRB\ast_(G?9'I8R^^`Q7=C\G@](C$Ndup
%b38^\>^6e)mCG&JQc^i=`+m$W)A:bTATY5IY`-e^A]^O`1:fOL=[m/K1,<F,kJAU:ANkKHd./0e<*GlJBW%0Z&?47OXFJ3TB?ihJ
%`W<lbAK1]o>=Kb]\;YK]M9Agf8hT-hOleDO:(:L#<b#-rVkZ<*jgd3KGBqK6$89^C3TT9^.Oi&)/[\B$fs1umQM<K+hje%;?0_I+
%rYYDi!R)PT*uEaG)?_jmUb/3&q6*/Qs$%pUf5E%XH.D4PEi)sck'B$kc?Cf]Z9DN77O"Ao,Yua3I4"/_0.5.me]3MgVO1*@<M,:4
%2tl=4o=cP6Z-M\.jlAJk0b)dG?XS!/\]M,ZmCZc?::;t!([g'[#d-8X:H@sjqn%UON*S=!R55JIWD6u+?U)GQhH-D%4EF!71W@R#
%F*p!o[&%F"S;R'MF5-$RoqW7BI"B-r$_M[OF.5GbHE@a9GNM:J7>(hcqG;nAo.GEX2bct#InTW6""HM%p`.BS(M<D`E"R!^LR/6I
%h#GiYN9VKM90Kc\8'jrUXeqjfcRo'0=m3DM>$!krhHiOpXa,9Ep"[F1:5YWIrR.G)\^bUBVOh":b?+Al?:(gX<^1:l4h&f,X*S[V
%#FV/frB[FG<^26o4VsON\WYcp0$!UI1Nl"U>`MD%Q2%'9f";;=H7lMQEsoa`WHp0PdrR6<WTPH`4h(8&?INsMq5NOX^DC^4DY<nE
%Wok.HeMQo'<1`BcrB/U&gj4<-l+&3TeT7cu+>H"q.j=OiUo*<Us)apu\]@[pXnbCQd;tG<Sr4=&H7l+#+T7dXWTS:qh<i`WNgG([
%knp*Q<t!?36I.7]M&L\Xoj=Mgk9;cH\,).beT7ek7SQ#^Z0AfQ5@%:8Xo>pip"\gOTVCUMs5@^=DW)pZkdgAr,KtIOop)H>\V193
%U$#H`24L1A\7Sf*\,*;Ze8ssC4nROH?Z`=2<aQSpSm-I+Uj?plI>"2M/G7d=]:N7*!5\;4a_j8.A#Zs3PFfrPl+%Eko\@;f0<41Z
%90F)rl+*/ndrPn8_RQ1qeF[!>Zg,)TV]_\r<aWM-SiaoeH>Ym;)47"RE`>1<<GQnuiO2GD\L;aPF0Rc"c`P4s+ObBDS">O,BR2;:
%e8o86X.G6noNW@N6I4am.cg8ukFR]/If0%)l+,?*YuK%$plMN=<YLk"k8"&$eT:'D/+hV'Ym3G$qI,fV\V4Cu;E_Mc(U6laXo@]=
%drVR>@a"E!lGmhBk8&Md:A!?,hj?/^\+"HcU$$Gie4RF+8^HLcVlbHN.eR&bWTW9qR@]>-:d);aQa]l=Xo9J:drR6qWoqt2<i5,l
%1FoQio%[MV(-KjkA\f+$F]hE"W1Jnk$U&^V;>&_D>1I\l^dHGMI]@10/i(ms-+fWt,efa!351h4AkT/eSlQlFk^Yrm4VtBf\^`pj
%ApS@fcb60HMcfXWbb++0e\<JuHL=JAlFGH[Q)].JiV-hLcUEh]Sr;-sH7k(5o\@=PfrCW*,qjQs00IZa355&#rqDbno%8ud\ateI
%c^gmXH7jBgoN[>ElF@`jdrT/L<R9LS6-mN7R@ZJrX*QD(e8qNo<6q*mX*X2u@-G.W:!]rUAR]s<B@LZ=n_Iq&nY=WB[\S6;BjD_8
%n#5uiPFc!gLWXp\orVQLF/s3mVk.*83E=BWd%.3"f)+c)cg?(bY34C5CZr<lh0Q6B\":e5V<:%N`-Uj!VpKMJl`6U]I?34Vg]G2,
%H>_!F?dWpL`2;^,2F>`lIe75uDY55'drVR^I&3FHj3Vjk(4'j?F:NV7ot>+hF*HbmmZ(PuX_.N2c`R1L1XgDhG1(HtrR:Gp*JL*.
%)<n[Ehb7pIU$?s,`L!0#mr+o_ei_.i4VuS5H7i[UF/toDR\#H5%6_1S6e?B6l_`jrqqFE_XnOd+F&=!UkO.]4kO(>%>a133\L<lq
%F&=]ikO'nnghtG"kdd)Ve8nJKWos)Fc`ZG?6`K8:Y8V`Tc<S]_hWiU3CYi?*4VuRWHLC$*b*OSfrOSTT-NVh?n`cq6U.eJ277EW9
%M_AOcmM'C!\PphSk9:R&(CMM]>RYB4\J!eGY/I*u+u2:t72:,$;U]]2(4%UU2"b+lVWVFb:!^ep1A"g&'@V#".Al9/^LrXS/f(5H
%\L8oUF&)s[3bPq7R!NXu]S<#iZd<b$`hVk1pt)M.mPsjo^&?<!X,4mHF/seCd.H+Bh:qVXC5jt@g`;0A]9e-8\N;k:\c&7_la](b
%4a1ND4gu=I2EeO"&Z_L-@#%+qXa]c?H7gDjEsqK<la`8&hm?`<4dTZmJ,8\UdW=s+WTPI#4Vp1mH7f`PV<;<d;pXiTWEdd*EuK@B
%26rWr/rIgD>SNgp\YfV)l_Xl1F?LGFl+$s:;YAiApib),X2.BVF6hj<o\=1-2YGiGLRu,acu\O5rLi?A2"]RoKq>o_PFgOOVX(ec
%nI^*8c;&[<a*a)J_7J-;3TeK_pc.KJpup4KG8to]G/ElVlu21"(`LkEB*^rP`E7neMcin?QRD6Io7lCqDr+;^4E')LFB$RTQ)1'6
%"Y"cce?/#H;rXM6<\(ANkLR\_cuUM.Rl;>9bo;P42fGoHeT4OPNj"7b&6$oGYuNr2B;+K490IL>Y306q<R9LK8^Eq/:d'#8U$&.n
%;U7e"R@]=o<';%ORsH\&T]s!cpS-jAioBnp'\!""qY/<oUtLdl\au(Qc^j/CHL?e[c`QoG;pWG(R@ZKq1Y$P$)565&ekFD\a]1J?
%Fc^q;P`4n<;d-3a,"k(Ca._Z?1Hh'\^44$Th7qqD\po>aWLeH?)TQX0YEPQij3Vjo=A7&CQ3pR:D03eighJ:co\?".o\B:JU$(hp
%o\=352>,c'+,-;uZd<c;G1(H4SK?7$X-"RQEsn.5kdgB^)L?;9KBmi$_(c<\\!fiC4VsON\XX7]..NKcPk8CenqJcdQ+mteY5Ir7
%i%+9XjhgS=n@>GecLbA#Yj&]cN7;o'Dl2],ISJ.Z;@#E%<F^>-Wlt%i.E'SSVe/rTjjLkekiJW'dX$2!&hU/"0PLRYYd`V+HLB'F
%c^!jRU.Ta,W#S$;M)P"-\\g^acal8EWTPH`4h"Te2EeNf^)loO`2;]5fP8fTX-r,"F"u4>kO'Vf>cnagEsodjlFA<!eT8>+r1N6@
%3:pGiY3ELQq0(,+G8to]1=L;WM1hIYf^rEZVWUQp(CI'>-kp%N.W=OV=nt,kj2ta/!P\,2?7mc>#SF@)G*b,1A,O!37FOPQ/Pk/5
%h9H.]T$(aW^=@h8;*B,<9D.'h_pEJ&?rbP7_S5d-jeV)1Ek+^)`V!JBJ26IEU$#JR`hqp>-DuokK:XUXZ^+oacTN9_:=gGWhbJK8
%[2ik*DRD32H>\/FSb1]h/?=)7JT=[P[m&\EH>^-hC3jbT^1qu^c;&\'JU(6Y\!hq,4a0uS6-nA$kd`b_4h!(Y%XRQ'6dORkkdec4
%ceYkl\N:-](Kp%6h(G=GDLHuI*#$bAYN2D?f&p]0\N;n;\a>lrT"G"]o\?".o\:J!Sr:994Vu#$H7gP\oNY(jl+&4!e8nJPVWV"'
%^S^1gpeoF,SXQ.^Zd<bjk,INEgOc<c<f;O+k@-<FSm*cIWh,+pWd8Ol0PYoO%CPDGDN0W*H7lq.l+,H?e8q\DA(,KR*iA+0gd9?C
%C$<)EGgg_XG1(FdDl2],ISJ.jet,gd`<!jJgg*LFkMkumH7k3hVWX[5:!^f;+n]*)\*:G%nuCm4n;qrK@afC<LbLtnZ<PY?pssM!
%A#e_;@8$8uA>/0q:K>`[J=)oi.ld0+N2PpN1\@d3c3/imMn(Z-(InJUF(b08Sic*Qd<"JmUjDI!\O+W5PFUpKHnp*+)Plu%r-@uO
%H7khITD&QSXNgJDS+/<u[t]MM4]aDM2om`0)l37SDihF"]Jk)FP`WXXhG8GM@afBQi25\sk`C*CVG$Se*$7SpSO5d.\X7lqF)c:u
%4VuY5HLB:Skd`\EW1Jp99g'<SD0dg8K'Bhe;U:o/M!DNlOWf$'U==7hY"d52ApQ'O(.cd5R.T20"P%R+9<.179;S5<>uEg%Om0Cn
%OOS>+Su1Zp1Hfq7mTe)W]U>@LkqtVJ/g<[/SVmm'F6CoEH7l3OoNY@rlFEj-drX^5(j[f8MWqZR;5WO%iX7mcZ0AeYM4:*[);c(g
%Qu7b$I,,FSQ;l0n*>)%rU($PTHLA.FM4TW[/^ndgfTgb8g;$D.XZk!uSm-W/:-H)_,]@u]3hT0m79`^U\`eo,4Vp7TVWX[^.J;K\
%:/X4kI7U6u;KEH9\K$fs>7EHESkCN?5u2PukdcL:cUI/`l+,FMdrVe'WTR_u9[CZXR\#GB%R##J7J0oW]h?]5M'bBPCZ<c`CTap1
%c^ch44a.62oNX3aR[uSUmWrdDeUm%rePB"9cfL,X>`!A^=5o",qq)PI\Yhm:-Z`PRL7UI/.s`hUE'Er"A?"adgX,Rt9V:R[BIcb>
%(S-8WkG![WoN^Z)A3C_<K;Rg,7B2r;b"Y#8ld,3.'Y`hB]_G%Djd>[Fre(ZYRk:n:Mm$Z;mX00-F(Z:Xc`R"qeF_Ob^Vs@%S^jQ_
%/g_e8gmKtLF"t"uk=uVBSr;7ngaOc(F/K(,cUE&^l++l/c^!kJF!\Qn>`LI#pTZ$lF&1!=F@LnC)L?:P##[UnAqsO8/`9-mk8%Su
%eT2,I6@*PBgngU#?7F?EX-#]sF!\Hk>`MD%Q2%'9cB_GUSM(_(D@Q1eH7jBho\@;J$9bkk4K4p1&N2cg?"L"u:'7$O\`g"K4VqCM
%WTU#M:\ELhW&(O<U5^o"h!0/B4h#Cq<';&BSZ1eH]@6CWFE3hAM`/l1F4$UoH7gu%F!\Hk>`N_MGFF+hcaEDnF)/oeoNY(Rl+'nd
%WTPI+4W"'QU?>F,,O;o(Ketq/4d2c+;PPr1\`h9p4Vt5kVWU\^B^!"j+Z2E,\l(uC7F@p&Mb[^0F3u=NH7mp);pV#CgsC+>32Yli
%gILJ<fM_"F"Xcq8>dVhGSr41P4Vu"PHL<V2X.FZ!U@RCQRUJS0`Pe4:MbdD;(T!:@/o&Q$>^R(2F/Qi3o\:m/eT6k0Sr9G,H7jq0
%oj!>l4]gWuSr:hbh!%$64a24S<R75MC=RCk;2qI9@_,:[7AYp6MZ[SV\`ftN4VtM8H7f]FWTR_VR\#G+1-PA2+NG/ik=NugP@s0k
%BI-A9(Th\VkFt[0p"Xu6:Hc0*4\IpSD1&>GU9?<EgsaPNK/DH4%m:`4l'n9&bk,/QURuib?ILhr(C_jkkMk%je8t/O^?N3"T"aL#
%2=R7(\^R+CH7iAR9[?/R7-_>HnhN@P>3T#474V[-\S*?H4VqsJVWX[:/bE;DVWX\gc1G8d8C*RrU$']kWh)9k%m>-NVs:hF+4G;9
%kGdWROA+!>@%*[F[[,Ead4AdR0%qgLcUB.USr8=6drSBAVWX]5;pX8)YL%?i!U@CblisE<F4&R7H7jO.9[B8A]$PNG:M5"AZrF#r
%/(q&fc6<`]=5o",bBna'\QIL`k9;fI(RaNu3!Q1MMm53(GM77/cc%%Mp"Ys0eT5_4:d(.\Jb31e(f\gM-)mJoj$`1CdjCr</o&l-
%>T?X>cUDYrm^*^dSr5#hh!+SH4a.f<<R6rseoN-dkde%P7*e;dHL>mJWLf$=0g-=_Oa?H&7&li:Ti=/kK:[BAB$BmPoO+)YMiPm.
%F&>B'kFsS'cUIZ-Sr:R+H7g+J:!^f<:H`n;^Zr@3rMJaeor"C>eSfad<k@P+P21F:a-WC@+*m+]]QMYDq28R*md-&#\U<<[4a2pK
%Woq[4<:sLTI-S7`KN:6[f"UF[Zd<"(SRPJ[GF#)j\^MQ:H>^P(=$7@JhkoSffZ^M]icM/G/l&LFkLRG`Y32OCh=Or_VWUSFe8s$n
%)1!o5drUYNSi[`PU$)"*j3i#3aJF4N1dnsI4,6AWF(bHPSi_!/H7f[-VWZq=@!XF4+n]*1)beSK3`8*W#E%#PEH,`>m^*n5Si[tC
%U$'^tZ0Jl@<`M;,cH)^Bc;@1+>\^6dlFE3dHEP34=atWYpN3D7#Q&#hl_N]ab^Wl>T5!N"PS01,qW,ChcV<*`p&0R&<kY%X>`)[t
%Xf<%h9<ilcqKb.JN8Zs`$cD@7FprSEq?b'qB9j3c9/0qdh0a,XDS<3gE9m2iK]1KtSM8h^VLd^WlXsV8eWao[\CI'>%%#u^_l`lg
%NoARTgBkdRh_d)mm&FL(S.UKKFX"a"m3OIAJtAYQ/n]jr;Tot1`tsJ'>C)U\WH`oNKs1g@K]-s!dC&pN[pup04(5XG-3D*@R:E`@
%O[mUZ6a#Os]7aDF1h!ol/a5J/%/7-hJ,$c4gop&Drr(aRqH#o\c/6;7oC%/-Qf%i8hqrqZc#7dpj$3P8a7''#b>803n)&WjornAi
%kF_bFq[Ypir:?Q[o$^s[s2Y+grU@j7^An!^J,8:(%tFT15Q+Y2rK!QMi5ZphpCDcJlX0T$P"E/2~>
%AI9_PrivateDataEnd
